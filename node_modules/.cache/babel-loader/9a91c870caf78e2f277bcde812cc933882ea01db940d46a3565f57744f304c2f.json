{"ast":null,"code":"import\"./App.css\";import{Route,Routes}from\"react-router-dom\";import Main from\"views/Main\";import Authentication from\"views/Authentication\";import Search from\"views/Search\";import UserP from\"views/User\";import BoardWrite from\"views/Board/Write\";import BoardUpdate from\"views/Board/Update\";import BoardDetail from\"views/Board/Detail\";import Container from\"layouts/Container\";import{AUTH_PATH,MAIN_PATH,SEARCH_PATH,USER_PATH}from\"constant\";import{useEffect}from\"react\";import{useCookies}from\"react-cookie\";import{useLoginUserStore}from\"stores\";import{getSignInUserRequest}from\"apis\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// component: Application 컴포넌트 //\nfunction App(){// state: 로그인 유저 전역 상태 //\nconst{setLoginUser,resetLoginUser}=useLoginUserStore();// state: cookie 상태 //\nconst[cookies,setCookie]=useCookies();// function: get sign in user response 처리 함수 //\nconst getSignInUserResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code===\"AF\"||code===\"NU\"||code===\"DBE\"){resetLoginUser();return;}const loginUser={...responseBody};setLoginUser(loginUser);};// effect: accessToken cookie 값이 변경될 때 마다 실행할 함수 //\nuseEffect(()=>{if(!cookies.accessToken){resetLoginUser();return;}getSignInUserRequest(cookies.accessToken).then(getSignInUserResponse);},[cookies.accessToken]);// render: Application 컴포넌트 렌더링 //\n// description: 메인 화면 : '/' - Main //\n// description: 로그인 + 회원가입 화면 : '/auth' -Authentication //\n// description: 검색 화면 : '/search/:searchword' - Search //\n// description: 유저 페이지 : '/user/:userEmail' - User //\n// description: 게시물 상세보기 : '/board/detail/:boardNumber' - BoardDetail //\n// description: 게시물 작성하기 : '/board/write' - BoardWrite //\n// description: 게시물 수정하기 : '/board/update/:boardNumber' - BoardUpdate //\nreturn/*#__PURE__*/_jsx(Routes,{children:/*#__PURE__*/_jsxs(Route,{element:/*#__PURE__*/_jsx(Container,{}),children:[/*#__PURE__*/_jsx(Route,{path:MAIN_PATH(),element:/*#__PURE__*/_jsx(Main,{})}),/*#__PURE__*/_jsx(Route,{path:AUTH_PATH(),element:/*#__PURE__*/_jsx(Authentication,{})}),/*#__PURE__*/_jsx(Route,{path:SEARCH_PATH(\":searchWord\"),element:/*#__PURE__*/_jsx(Search,{})}),/*#__PURE__*/_jsx(Route,{path:USER_PATH(\":userEmail\"),element:/*#__PURE__*/_jsx(UserP,{})}),/*#__PURE__*/_jsxs(Route,{path:\"/board\",children:[/*#__PURE__*/_jsx(Route,{path:\"write\",element:/*#__PURE__*/_jsx(BoardWrite,{})}),/*#__PURE__*/_jsx(Route,{path:\"detail/:boardNumber\",element:/*#__PURE__*/_jsx(BoardDetail,{})}),/*#__PURE__*/_jsx(Route,{path:\"update/:boardNumber\",element:/*#__PURE__*/_jsx(BoardUpdate,{})})]}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(\"h1\",{children:\"404 Not Found\"})})]})});}export default App;","map":{"version":3,"names":["Route","Routes","Main","Authentication","Search","UserP","BoardWrite","BoardUpdate","BoardDetail","Container","AUTH_PATH","MAIN_PATH","SEARCH_PATH","USER_PATH","useEffect","useCookies","useLoginUserStore","getSignInUserRequest","jsx","_jsx","jsxs","_jsxs","App","setLoginUser","resetLoginUser","cookies","setCookie","getSignInUserResponse","responseBody","code","loginUser","accessToken","then","children","element","path"],"sources":["C:/Springboot-React-ts/board-front/src/App.tsx"],"sourcesContent":["import \"./App.css\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Main from \"views/Main\";\nimport Authentication from \"views/Authentication\";\nimport Search from \"views/Search\";\nimport UserP from \"views/User\";\nimport BoardWrite from \"views/Board/Write\";\nimport BoardUpdate from \"views/Board/Update\";\nimport BoardDetail from \"views/Board/Detail\";\nimport Container from \"layouts/Container\";\nimport {\n  AUTH_PATH,\n  BOARD_DETAIL_PATH,\n  BOARD_PATH,\n  BOARD_UPDATE_PATH,\n  BOARD_WRITE_PATH,\n  MAIN_PATH,\n  SEARCH_PATH,\n  USER_PATH,\n} from \"constant\";\nimport { useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { useLoginUserStore } from \"stores\";\nimport { getSignInUserRequest } from \"apis\";\nimport { GetSignInUserResponseDto } from \"apis/response/user\";\nimport { ResponseDto } from \"apis/response\";\nimport { User } from \"types/interface\";\n\n// component: Application 컴포넌트 //\nfunction App() {\n  // state: 로그인 유저 전역 상태 //\n  const { setLoginUser, resetLoginUser } = useLoginUserStore();\n  // state: cookie 상태 //\n  const [cookies, setCookie] = useCookies();\n\n  // function: get sign in user response 처리 함수 //\n  const getSignInUserResponse = (\n    responseBody: GetSignInUserResponseDto | ResponseDto | null\n  ) => {\n    if (!responseBody) return;\n    const { code } = responseBody;\n    if (code === \"AF\" || code === \"NU\" || code === \"DBE\") {\n      resetLoginUser();\n      return;\n    }\n    const loginUser: User = { ...(responseBody as GetSignInUserResponseDto) };\n    setLoginUser(loginUser);\n  };\n\n  // effect: accessToken cookie 값이 변경될 때 마다 실행할 함수 //\n  useEffect(() => {\n    if (!cookies.accessToken) {\n      resetLoginUser();\n      return;\n    }\n    getSignInUserRequest(cookies.accessToken).then(getSignInUserResponse);\n  }, [cookies.accessToken]);\n\n  // render: Application 컴포넌트 렌더링 //\n  // description: 메인 화면 : '/' - Main //\n  // description: 로그인 + 회원가입 화면 : '/auth' -Authentication //\n  // description: 검색 화면 : '/search/:searchword' - Search //\n  // description: 유저 페이지 : '/user/:userEmail' - User //\n  // description: 게시물 상세보기 : '/board/detail/:boardNumber' - BoardDetail //\n  // description: 게시물 작성하기 : '/board/write' - BoardWrite //\n  // description: 게시물 수정하기 : '/board/update/:boardNumber' - BoardUpdate //\n  return (\n    <Routes>\n      <Route element={<Container />}>\n        <Route path={MAIN_PATH()} element={<Main />} />\n        <Route path={AUTH_PATH()} element={<Authentication />} />\n        <Route path={SEARCH_PATH(\":searchWord\")} element={<Search />} />\n        <Route path={USER_PATH(\":userEmail\")} element={<UserP />} />\n        <Route path=\"/board\">\n          <Route path=\"write\" element={<BoardWrite />} />\n          <Route path=\"detail/:boardNumber\" element={<BoardDetail />} />\n          <Route path=\"update/:boardNumber\" element={<BoardUpdate />} />\n        </Route>\n        <Route path=\"*\" element={<h1>404 Not Found</h1>} />\n      </Route>\n    </Routes>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}