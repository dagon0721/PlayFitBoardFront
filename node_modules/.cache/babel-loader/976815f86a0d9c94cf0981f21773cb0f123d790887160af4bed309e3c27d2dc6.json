{"ast":null,"code":"import InputBox from\"components/InputBox\";import\"./style.css\";import React,{useState,useRef,useEffect}from\"react\";import{signInRequest,signUpRequest}from\"apis\";import{useCookies}from\"react-cookie\";import{MAIN_PATH}from\"constant\";import{useNavigate}from\"react-router-dom\";import{useDaumPostcodePopup}from\"react-daum-postcode\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";// component : 인증 화면 컴포넌트 //\nexport default function Authentication(){// state: 화면 상태 //\nconst[view,setView]=useState(\"sign-in\");// state: 쿠키 상태 //\nconst[cookies,setCookie]=useCookies();// function: 네비게이트 함수 //\nconst navigator=useNavigate();// component : sign in card 컴포넌트 //\nconst SignInCard=()=>{// state: 이메일 요소 참조 상태 //\nconst emailRef=useRef(null);// state: 패스워드 요소 참조 상태 //\nconst passwordRef=useRef(null);// state: 이메일 상태 //\nconst[email,setEmail]=useState(\"\");// state: 패스워드 상태 //\nconst[password,setPassword]=useState(\"\");// state: 패스워드 타입 상태 //\nconst[passwordType,setPasswordType]=useState(\"password\");// state: 패스워드 버튼 아이콘 상태 //\nconst[passwordButtonIcon,setPasswordButtonIcon]=useState(\"eye-light-off-icon\");// state: 에러 상태 //\nconst[error,setError]=useState(false);// function: sign in response 처리 함수 //\nconst signInResponse=responseBody=>{if(!responseBody){alert(\"네트워크 이상입니다.\");return;}if(\"code\"in responseBody){const{code}=responseBody;if(code===\"DBE\")alert(\"데이터베이스 오류입니다.\");if(code===\"SF\"||code===\"VF\")setError(true);if(code!==\"SU\")return;const{token,expirationTime}=responseBody;const now=new Date().getTime();const expires=new Date(now+expirationTime*1000);setCookie(\"accessToken\",token,{expires,path:MAIN_PATH()});navigator(MAIN_PATH());}else{alert(\"응답 형식이 올바르지 않습니다.\");}};// event handler: 이메일 변경 이벤트 처리 //\nconst onEmailChangeHandler=event=>{setError(false);const{value}=event.target;setEmail(value);};// event handler: 비밀번호 변경 이벤트 처리 //\nconst onPasswordChangeHandler=event=>{setError(false);const{value}=event.target;setPassword(value);};// event handler: 로그인 버튼 클릭 이벤트 처리  함수 //\nconst onSignInButtonClickHandler=()=>{const requestBody={email,password};signInRequest(requestBody).then(signInResponse);};// event handler: 회원가입 링크 클릭 이벤트 처리  함수 //\nconst onSignLinkClickHandler=()=>{setView(\"sign-up\");};// event handler: 패스워드 버튼 클릭 이벤트 처리  함수 //\nconst onPasswordButtonClickHandler=()=>{if(passwordType===\"text\"){setPasswordType(\"password\");setPasswordButtonIcon(\"eye-light-off-icon\");}else{setPasswordType(\"text\");setPasswordButtonIcon(\"eye-light-on-icon\");}};// event handler: 이메일 인풋 키 다운 이벤트 처리  함수 //\nconst onEmailKeyDownHandler=event=>{if(event.key!==\"Enter\")return;if(!passwordRef.current)return;passwordRef.current.focus();};// event handler: 패스워드 인풋 키 다운 이벤트 처리  함수 //\nconst onPasswordKeyDownHandler=event=>{if(event.key!==\"Enter\")return;onSignInButtonClickHandler();};// render : sign in card 컴포넌트 렌더링 //\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"auth-card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-card-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"auth-card-top\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"auth-card-title-box\",children:/*#__PURE__*/_jsx(\"div\",{className:\"auth-card-title\",children:\"로그인\"})}),/*#__PURE__*/_jsx(InputBox,{ref:emailRef,label:\"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",type:\"text\",placeholder:\"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",error:error,value:email,onChange:onEmailChangeHandler,onKeyDown:onEmailKeyDownHandler}),/*#__PURE__*/_jsx(InputBox,{ref:passwordRef,label:\"\\uBE44\\uBC00\\uBC88\\uD638\",type:passwordType,placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",error:error,value:password,onChange:onPasswordChangeHandler,icon:passwordButtonIcon,onButtonClick:onPasswordButtonClickHandler,onKeyDown:onPasswordKeyDownHandler})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-card-bottom\",children:[error&&/*#__PURE__*/_jsx(\"div\",{className:\"auth-sign-in-error-box\",children:/*#__PURE__*/_jsx(\"div\",{className:\"auth-sign-in-error-message\",children:\"이메일 주소 또는 비밀번호를 잘못 입력했습니다.\\n입력하신 내용을 다시 확인해주세요.\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"black-large-full-button\",onClick:onSignInButtonClickHandler,children:\"로그인\"}),/*#__PURE__*/_jsx(\"div\",{className:\"auth-description-box\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-description\",children:[\"신규 사용자이신가요? \",/*#__PURE__*/_jsx(\"span\",{className:\"auth-description-link\",onClick:onSignLinkClickHandler,children:\"회원가입\"})]})})]})]})});};// component : sign up card 컴포넌트 //\nconst SignUpCard=()=>{// state: 이메일 요소 참조 상태 //\nconst emailRef=useRef(null);// state: 패스워드 요소 참조 상태 //\nconst passwordRef=useRef(null);// state: 패스워드 확인 요소 참조 상태 //\nconst passwordCheckRef=useRef(null);// state: 닉네임 요소 참조 상태 //\nconst nicknameRef=useRef(null);// state: 휴대폰 번호 요소 참조 상태 //\nconst telNumberRef=useRef(null);// state: 주소 요소 참조 상태 //\nconst addressRef=useRef(null);// state: 상세 주소 요소 참조 상태 //\nconst addressDetailRef=useRef(null);// state: 페이지 번호 상태 //\nconst[page,setPage]=useState(1);// state: 이메일 상태 //\nconst[email,setEmail]=useState(\"\");// state: 패스워드 상태 //\nconst[password,setPassword]=useState(\"\");// state: 패스워드 확인 상태 //\nconst[passwordCheck,setPasswordCheck]=useState(\"\");// state: 닉네임 상태 //\nconst[nickname,setNickname]=useState(\"\");// state: 핸드폰 번호 상태 //\nconst[telNumber,setTelNumber]=useState(\"\");// state: 주소 상태 //\nconst[address,setAddress]=useState(\"\");// state: 상세 주소 상태 //\nconst[addressDetail,setAddressDetail]=useState(\"\");// state: 개인 정보 동의 상태 //\nconst[agreedPersonal,setAgreedPersonal]=useState(false);// state: 패스워드 타입 상태 //\nconst[passwordType,setPasswordType]=useState(\"password\");// state: 패스워드 확인 타입 상태 //\nconst[passwordCheckType,setPasswordCheckType]=useState(\"password\");const[isEmailError,setEmailError]=useState(false);// state: 패스워드 에러 상태 //\nconst[isPasswordError,setPasswordError]=useState(false);// state: 패스워드 확인 에러 상태 //\nconst[isPasswordCheckError,setPasswordCheckError]=useState(false);// state: 닉네임 에러 상태 //\nconst[isNicknameError,setNicknameError]=useState(false);// state: 핸드폰 번호 에러 상태 //\nconst[isTelNumberError,setTelNumberError]=useState(false);// state: 주소 에러 상태 //\nconst[isAddressError,setAddressError]=useState(false);// state: 개인 정보 동의 에러 상태 //\nconst[isAgreedPersonalError,setAgreedPersonalError]=useState(false);// state: 이메일 에러 메세지 상태 //\nconst[emailErrorMessage,setEmailErrorMessage]=useState(\"\");// state: 패스워드 에러 메세지 상태 //\nconst[passwordErrorMessage,setPasswordErrorMessage]=useState(\"\");// state: 패스워드 확인 에러 메세지 상태 //\nconst[passwordCheckErrorMessage,setPasswordCheckErrorMessage]=useState(\"\");// state: 닉네임 에러 메세지 상태 //\nconst[nicknameErrorMessage,setNicknameErrorMessage]=useState(\"\");// state: 핸드폰 번호 에러 메세지 상태 //\nconst[telNumberErrorMessage,setTelNumberErrorMessage]=useState(\"\");// state: 주소 에러 메세지 상태 //\nconst[addressErrorMessage,setAddressErrorMessage]=useState(\"\");// state: 패스워드 버튼 아이콘 상태 //\nconst[passwordButtonIcon,setPasswordButtonIcon]=useState(\"eye-light-off-icon\");// state: 패스워드 확인 버튼 아이콘 상태 //\nconst[passwordCheckButtonIcon,setPasswordCheckButtonIcon]=useState(\"eye-light-off-icon\");// function: 다음 주소 검색 팝업 오픈 함수 //\nconst open=useDaumPostcodePopup();// function: sign up response 처리 함수 //\nconst signUpResponse=responseBody=>{if(!responseBody){alert(\"네트워크 이상입니다.\");return;}const{code}=responseBody;if(code===\"DE\"){setEmailError(true);setEmailErrorMessage(\"중복되는 이메일 주소입니다.\");}if(code===\"DN\"){setNicknameError(true);setNicknameErrorMessage(\"중복되는 닉네임입니다.\");}if(code===\"DT\"){setTelNumberError(true);setTelNumberErrorMessage(\"중복되는 핸드폰 번호입니다.\");}if(code===\"VF\"){alert(\"모든 값을 입력하세요.\");}if(code===\"DBE\"){alert(\"데이터베이스 오류입니다.\");}if(code!==\"SU\")return;setView(\"sign-in\");};// event handler: 이메일 변경 이벤트 처리 //\nconst onEmailChangeHandler=event=>{const{value}=event.target;setEmail(value);setEmailError(false);setEmailErrorMessage(\"\");};// event handler: 패스워드 변경 이벤트 처리 //\nconst onPasswordChangeHandler=event=>{const{value}=event.target;setPassword(value);setPasswordError(false);setPasswordErrorMessage(\"\");};// event handler: 패스워드 확인 변경 이벤트 처리 //\nconst onPasswordCheckChangeHandler=event=>{const{value}=event.target;setPasswordCheck(value);setPasswordCheckError(false);setPasswordCheckErrorMessage(\"\");};// event handler: 닉네임 변경 이벤트 처리 //\nconst onNicknameChangeHandler=event=>{const{value}=event.target;setNickname(value);setNicknameError(false);setNicknameErrorMessage(\"\");};// event handler: 핸드폰 번호 변경 이벤트 처리 //\nconst onTelNumberChangeHandler=event=>{const{value}=event.target;setTelNumber(value);setTelNumberError(false);setTelNumberErrorMessage(\"\");};// event handler: 주소 변경 이벤트 처리 //\nconst onAddressChangeHandler=event=>{const{value}=event.target;setAddress(value);setAddressError(false);setAddressErrorMessage(\"\");};// event handler: 상세 주소 변경 이벤트 처리 //\nconst onAddressDetailChangeHandler=event=>{const{value}=event.target;setAddressDetail(value);};// event handler: 개인 정보 동의 체크 박스 클릭 이벤트 처리 //\nconst onAgreedPersonalClickHandler=()=>{setAgreedPersonal(!agreedPersonal);setAgreedPersonalError(false);};// event handler: 패스워드 버튼 클릭 이벤트 처리 //\nconst onPasswordButtonClickHandler=()=>{if(passwordButtonIcon===\"eye-light-off-icon\"){setPasswordButtonIcon(\"eye-light-on-icon\");setPasswordType(\"text\");}else{setPasswordButtonIcon(\"eye-light-off-icon\");setPasswordType(\"password\");}};// event handler: 패스워드 확인 버튼 클릭 이벤트 처리 //\nconst onPasswordCheckButtonClickHandler=()=>{if(passwordCheckButtonIcon===\"eye-light-off-icon\"){setPasswordCheckButtonIcon(\"eye-light-on-icon\");setPasswordCheckType(\"text\");}else{setPasswordCheckButtonIcon(\"eye-light-off-icon\");setPasswordCheckType(\"password\");}};// event handler: 주소 버튼 클릭 이벤트 처리 //\nconst onAddressButtonClickHandler=()=>{open({onComplete});};// event handler: 다음 단계 버튼 클릭 이벤트 처리 //\nconst onNextButtonClickHandler=()=>{const emailPattern=/^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;const isEmailPattern=emailPattern.test(email);if(!isEmailPattern){setEmailError(true);setEmailErrorMessage(\"이메일 주소 포멧이 맞지 않습니다.\");}const isCheckedPassword=password.trim().length>=8;if(!isCheckedPassword){setPasswordError(true);setPasswordErrorMessage(\"비밀번호는 8자 이상 입력해주세요.\");}const isEqualPassword=password===passwordCheck;if(!isEqualPassword){setPasswordCheckError(true);setPasswordCheckErrorMessage(\"비밀번호가 일치하지 않습니다.\");}if(!isEmailPattern||!isCheckedPassword||!isEqualPassword)return;setPage(2);};// event handler: 회원가입 버튼 클릭 이벤트 처리 //\nconst onSignUpButtonClickHandler=()=>{const emailPattern=/^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;const isEmailPattern=emailPattern.test(email);if(!isEmailPattern){setEmailError(true);setEmailErrorMessage(\"이메일 주소 포멧이 맞지 않습니다.\");}const isCheckedPassword=password.trim().length>=8;if(!isCheckedPassword){setPasswordError(true);setPasswordErrorMessage(\"비밀번호는 8자 이상 입력해주세요.\");}const isEqualPassword=password===passwordCheck;if(!isEqualPassword){setPasswordCheckError(true);setPasswordCheckErrorMessage(\"비밀번호가 일치하지 않습니다.\");}if(!isEmailPattern||!isCheckedPassword||!isEqualPassword){setPage(1);return;}const hasNickname=nickname.trim().length!==0;if(!hasNickname){setNicknameError(true);setNicknameErrorMessage(\"닉네임을 입력해주세요.\");}const telNumberPattern=/^[0-9]{11,13}$/;const isTelNumberPattern=telNumberPattern.test(telNumber);if(!isTelNumberPattern){setTelNumberError(true);setTelNumberErrorMessage(\"숫자만 입력해주세요.\");}const hasAddress=address.trim().length>0;if(!hasAddress){setAddressError(true);setAddressErrorMessage(\"주소를 선택해주세요.\");}if(!agreedPersonal)setAgreedPersonalError(true);if(!hasNickname||!isTelNumberPattern||!agreedPersonal)return;const requestBody={email,password,nickname,telNumber,address,addressDetail,agreedPersonal};signUpRequest(requestBody).then(signUpResponse);};// event handler: 로그인 링크 클릭 이벤트 처리 //\nconst onSignInLinkClickHandler=()=>{setView(\"sign-in\");};// event handler: 이메일 키 다운 이벤트 처리 //\nconst onEmailKeyDownHandler=event=>{if(event.key!==\"Enter\")return;if(!passwordRef.current)return;passwordRef.current.focus();};// event handler: 패스워드 키 다운 이벤트 처리 //\nconst onPasswordKeyDownHandler=event=>{if(event.key!==\"Enter\")return;if(!passwordCheckRef.current)return;passwordCheckRef.current.focus();};// event handler: 패스워드 확인 키 다운 이벤트 처리 //\nconst onPasswordCheckKeyDownHandler=event=>{if(event.key!==\"Enter\")return;onNextButtonClickHandler();};// event handler: 닉네임 키 다운 이벤트 처리 //\nconst onNicknameKeyDownHandler=event=>{if(event.key!==\"Enter\")return;if(!telNumberRef.current)return;onNextButtonClickHandler();telNumberRef.current.focus();};// event handler: 핸드폰 번호 키 다운 이벤트 처리 //\nconst onTelNumberKeyDownHandler=event=>{if(event.key!==\"Enter\")return;onAddressButtonClickHandler();};// event handler: 주소 키 다운 이벤트 처리 //\nconst onAddressKeyDownHandler=event=>{if(event.key!==\"Enter\")return;if(!addressDetailRef.current)return;addressDetailRef.current.focus();};// event handler: 상세 주소 키 다운 이벤트 처리 //\nconst onAddressDetailKeyDownHandler=event=>{if(event.key!==\"Enter\")return;onSignUpButtonClickHandler();};// event handler: 다음 주소 검색 완료 이벤트 처리 //\nconst onComplete=data=>{const{address}=data;setAddress(address);setAddressError(false);setAddressErrorMessage(\"\");if(!addressDetailRef.current)return;addressDetailRef.current.focus();};// effect: 페이지가 변경될때마다 실행될 함수 //\nuseEffect(()=>{if(page===2){if(!nicknameRef.current)return;nicknameRef.current.focus();}},[page]);// render : sign up card 컴포넌트 렌더링 //\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"auth-card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-card-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"auth-card-top\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"auth-card-title-box\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"auth-card-title\",children:\"회원가입\"}),/*#__PURE__*/_jsx(\"div\",{className:\"auth-card-page\",children:`${page}/2`})]}),page===1&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(InputBox,{ref:emailRef,label:\"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C*\",type:\"text\",placeholder:\"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",value:email,onChange:onEmailChangeHandler,error:isEmailError,message:emailErrorMessage,onKeyDown:onEmailKeyDownHandler}),/*#__PURE__*/_jsx(InputBox,{ref:passwordRef,label:\"\\uBE44\\uBC00\\uBC88\\uD638*\",type:passwordType,placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",value:password,onChange:onPasswordChangeHandler,error:isPasswordError,message:passwordErrorMessage,icon:passwordButtonIcon,onButtonClick:onPasswordButtonClickHandler,onKeyDown:onPasswordKeyDownHandler}),/*#__PURE__*/_jsx(InputBox,{ref:passwordCheckRef,label:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778*\",type:passwordCheckType,placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",value:passwordCheck,onChange:onPasswordCheckChangeHandler,error:isPasswordCheckError,message:passwordCheckErrorMessage,icon:passwordCheckButtonIcon,onButtonClick:onPasswordCheckButtonClickHandler,onKeyDown:onPasswordCheckKeyDownHandler})]}),page===2&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(InputBox,{ref:nicknameRef,label:\"\\uB2C9\\uB124\\uC784*\",type:\"text\",placeholder:\"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",value:nickname,onChange:onNicknameChangeHandler,error:isNicknameError,message:nicknameErrorMessage,onKeyDown:onNicknameKeyDownHandler}),/*#__PURE__*/_jsx(InputBox,{ref:telNumberRef,label:\"\\uD578\\uB4DC\\uD3F0 \\uBC88\\uD638*\",type:\"text\",placeholder:\"\\uD578\\uB4DC\\uD3F0 \\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",value:telNumber,onChange:onTelNumberChangeHandler,error:isTelNumberError,message:telNumberErrorMessage,onKeyDown:onTelNumberKeyDownHandler}),/*#__PURE__*/_jsx(InputBox,{ref:addressRef,label:\"\\uC8FC\\uC18C*\",type:\"text\",placeholder:\"\\uC6B0\\uD3B8\\uBC88\\uD638 \\uCC3E\\uAE30\",value:address,onChange:onAddressChangeHandler,error:isAddressError,message:addressErrorMessage,icon:\"expand-right-light-icon\",onButtonClick:onAddressButtonClickHandler,onKeyDown:onAddressKeyDownHandler}),/*#__PURE__*/_jsx(InputBox,{ref:addressDetailRef,label:\"\\uC0C1\\uC138 \\uC8FC\\uC18C\",type:\"text\",placeholder:\"\\uC0C1\\uC138 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",value:addressDetail,onChange:onAddressDetailChangeHandler,error:false,onKeyDown:onAddressDetailKeyDownHandler})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-card-bottom\",children:[page===1&&/*#__PURE__*/_jsx(\"div\",{className:\"black-large-full-button\",onClick:onNextButtonClickHandler,children:\"다음 단계\"}),page===2&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"auth-consent-box\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"auth-check-box\",onClick:onAgreedPersonalClickHandler,children:/*#__PURE__*/_jsx(\"div\",{className:`icon ${agreedPersonal?\"check-round-fill-icon\":\"check-ring-light-icon\"}`})}),/*#__PURE__*/_jsx(\"div\",{className:isAgreedPersonalError?\"auth-consent-title-error\":\"auth-consent-title\",children:\"개인정보동의\"}),/*#__PURE__*/_jsx(\"div\",{className:\"auth-consent-link\",children:\"더보기 >\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"black-large-full-button\",onClick:onSignUpButtonClickHandler,children:\"회원가입\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"auth-description-box\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-description\",children:[\"이미 계정이 있으신가요? \",/*#__PURE__*/_jsx(\"span\",{className:\"auth-description-link\",onClick:onSignInLinkClickHandler,children:\"로그인\"})]})})]})]})});};// render : 인증화면 컴포넌트 렌더링 //\nreturn/*#__PURE__*/_jsx(\"div\",{id:\"auth-wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"auth-jumbotron-box\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-jumbotron-contents\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"auth-logo-icon\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-jumbotron-text-box\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"auth-jumbotron-text\",children:\"운동 커뮤니티\"}),/*#__PURE__*/_jsx(\"div\",{className:\"auth-jumbotron-text\",children:\"Play Fit\"})]})]})}),view===\"sign-in\"&&/*#__PURE__*/_jsx(SignInCard,{}),view===\"sign-up\"&&/*#__PURE__*/_jsx(SignUpCard,{})]})});}","map":{"version":3,"names":["InputBox","React","useState","useRef","useEffect","signInRequest","signUpRequest","useCookies","MAIN_PATH","useNavigate","useDaumPostcodePopup","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Authentication","view","setView","cookies","setCookie","navigator","SignInCard","emailRef","passwordRef","email","setEmail","password","setPassword","passwordType","setPasswordType","passwordButtonIcon","setPasswordButtonIcon","error","setError","signInResponse","responseBody","alert","code","token","expirationTime","now","Date","getTime","expires","path","onEmailChangeHandler","event","value","target","onPasswordChangeHandler","onSignInButtonClickHandler","requestBody","then","onSignLinkClickHandler","onPasswordButtonClickHandler","onEmailKeyDownHandler","key","current","focus","onPasswordKeyDownHandler","className","children","ref","label","type","placeholder","onChange","onKeyDown","icon","onButtonClick","onClick","SignUpCard","passwordCheckRef","nicknameRef","telNumberRef","addressRef","addressDetailRef","page","setPage","passwordCheck","setPasswordCheck","nickname","setNickname","telNumber","setTelNumber","address","setAddress","addressDetail","setAddressDetail","agreedPersonal","setAgreedPersonal","passwordCheckType","setPasswordCheckType","isEmailError","setEmailError","isPasswordError","setPasswordError","isPasswordCheckError","setPasswordCheckError","isNicknameError","setNicknameError","isTelNumberError","setTelNumberError","isAddressError","setAddressError","isAgreedPersonalError","setAgreedPersonalError","emailErrorMessage","setEmailErrorMessage","passwordErrorMessage","setPasswordErrorMessage","passwordCheckErrorMessage","setPasswordCheckErrorMessage","nicknameErrorMessage","setNicknameErrorMessage","telNumberErrorMessage","setTelNumberErrorMessage","addressErrorMessage","setAddressErrorMessage","passwordCheckButtonIcon","setPasswordCheckButtonIcon","open","signUpResponse","onPasswordCheckChangeHandler","onNicknameChangeHandler","onTelNumberChangeHandler","onAddressChangeHandler","onAddressDetailChangeHandler","onAgreedPersonalClickHandler","onPasswordCheckButtonClickHandler","onAddressButtonClickHandler","onComplete","onNextButtonClickHandler","emailPattern","isEmailPattern","test","isCheckedPassword","trim","length","isEqualPassword","onSignUpButtonClickHandler","hasNickname","telNumberPattern","isTelNumberPattern","hasAddress","onSignInLinkClickHandler","onPasswordCheckKeyDownHandler","onNicknameKeyDownHandler","onTelNumberKeyDownHandler","onAddressKeyDownHandler","onAddressDetailKeyDownHandler","data","message","id"],"sources":["C:/Springboot-React-ts/board-front/src/views/Authentication/index.tsx"],"sourcesContent":["import InputBox from \"components/InputBox\";\r\nimport \"./style.css\";\r\nimport React, {\r\n  useState,\r\n  KeyboardEvent,\r\n  useRef,\r\n  ChangeEvent,\r\n  useEffect,\r\n} from \"react\";\r\nimport { SignInRequestDto, SignUpRequestDto } from \"apis/request/auth\";\r\nimport { signInRequest, signUpRequest } from \"apis\";\r\nimport { ResponseDto } from \"apis/response\";\r\nimport SignInResponseDto from \"apis/response/sign-in.response.dto\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { MAIN_PATH } from \"constant\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Address, useDaumPostcodePopup } from \"react-daum-postcode\";\r\nimport { SignUpResponseDto } from \"apis/response/auth\";\r\n\r\n// component : 인증 화면 컴포넌트 //\r\nexport default function Authentication() {\r\n  // state: 화면 상태 //\r\n  const [view, setView] = useState<\"sign-in\" | \"sign-up\">(\"sign-in\");\r\n  // state: 쿠키 상태 //\r\n  const [cookies, setCookie] = useCookies();\r\n\r\n  // function: 네비게이트 함수 //\r\n  const navigator = useNavigate();\r\n\r\n  // component : sign in card 컴포넌트 //\r\n  const SignInCard = () => {\r\n    // state: 이메일 요소 참조 상태 //\r\n    const emailRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 패스워드 요소 참조 상태 //\r\n    const passwordRef = useRef<HTMLInputElement | null>(null);\r\n\r\n    // state: 이메일 상태 //\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    // state: 패스워드 상태 //\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    // state: 패스워드 타입 상태 //\r\n    const [passwordType, setPasswordType] = useState<\"text\" | \"password\">(\r\n      \"password\"\r\n    );\r\n    // state: 패스워드 버튼 아이콘 상태 //\r\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState<\r\n      \"eye-light-off-icon\" | \"eye-light-on-icon\"\r\n    >(\"eye-light-off-icon\");\r\n    // state: 에러 상태 //\r\n    const [error, setError] = useState<boolean>(false);\r\n\r\n    // function: sign in response 처리 함수 //\r\n    const signInResponse = (\r\n      responseBody: SignInRequestDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) {\r\n        alert(\"네트워크 이상입니다.\");\r\n        return;\r\n      }\r\n      if (\"code\" in responseBody) {\r\n        const { code } = responseBody;\r\n        if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n        if (code === \"SF\" || code === \"VF\") setError(true);\r\n        if (code !== \"SU\") return;\r\n\r\n        const { token, expirationTime } = responseBody as SignInResponseDto;\r\n        const now = new Date().getTime();\r\n        const expires = new Date(now + expirationTime * 1000);\r\n\r\n        setCookie(\"accessToken\", token, { expires, path: MAIN_PATH() });\r\n        navigator(MAIN_PATH());\r\n      } else {\r\n        alert(\"응답 형식이 올바르지 않습니다.\");\r\n      }\r\n    };\r\n\r\n    // event handler: 이메일 변경 이벤트 처리 //\r\n    const onEmailChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      setError(false);\r\n      const { value } = event.target;\r\n      setEmail(value);\r\n    };\r\n\r\n    // event handler: 비밀번호 변경 이벤트 처리 //\r\n    const onPasswordChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      setError(false);\r\n      const { value } = event.target;\r\n      setPassword(value);\r\n    };\r\n\r\n    // event handler: 로그인 버튼 클릭 이벤트 처리  함수 //\r\n    const onSignInButtonClickHandler = () => {\r\n      const requestBody: SignInRequestDto = {\r\n        email,\r\n        password,\r\n      };\r\n      signInRequest(requestBody).then(signInResponse);\r\n    };\r\n    // event handler: 회원가입 링크 클릭 이벤트 처리  함수 //\r\n    const onSignLinkClickHandler = () => {\r\n      setView(\"sign-up\");\r\n    };\r\n\r\n    // event handler: 패스워드 버튼 클릭 이벤트 처리  함수 //\r\n    const onPasswordButtonClickHandler = () => {\r\n      if (passwordType === \"text\") {\r\n        setPasswordType(\"password\");\r\n        setPasswordButtonIcon(\"eye-light-off-icon\");\r\n      } else {\r\n        setPasswordType(\"text\");\r\n        setPasswordButtonIcon(\"eye-light-on-icon\");\r\n      }\r\n    };\r\n\r\n    // event handler: 이메일 인풋 키 다운 이벤트 처리  함수 //\r\n    const onEmailKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!passwordRef.current) return;\r\n      passwordRef.current.focus();\r\n    };\r\n    // event handler: 패스워드 인풋 키 다운 이벤트 처리  함수 //\r\n    const onPasswordKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      onSignInButtonClickHandler();\r\n    };\r\n    // render : sign in card 컴포넌트 렌더링 //\r\n    return (\r\n      <div className=\"auth-card\">\r\n        <div className=\"auth-card-box\">\r\n          <div className=\"auth-card-top\">\r\n            <div className=\"auth-card-title-box\">\r\n              <div className=\"auth-card-title\">{\"로그인\"}</div>\r\n            </div>\r\n            <InputBox\r\n              ref={emailRef}\r\n              label=\"이메일 주소\"\r\n              type=\"text\"\r\n              placeholder=\"이메일 주소를 입력해주세요.\"\r\n              error={error}\r\n              value={email}\r\n              onChange={onEmailChangeHandler}\r\n              onKeyDown={onEmailKeyDownHandler}\r\n            />\r\n            <InputBox\r\n              ref={passwordRef}\r\n              label=\"비밀번호\"\r\n              type={passwordType}\r\n              placeholder=\"비밀번호를 입력해주세요.\"\r\n              error={error}\r\n              value={password}\r\n              onChange={onPasswordChangeHandler}\r\n              icon={passwordButtonIcon}\r\n              onButtonClick={onPasswordButtonClickHandler}\r\n              onKeyDown={onPasswordKeyDownHandler}\r\n            />\r\n          </div>\r\n          <div className=\"auth-card-bottom\">\r\n            {error && (\r\n              <div className=\"auth-sign-in-error-box\">\r\n                <div className=\"auth-sign-in-error-message\">\r\n                  {\r\n                    \"이메일 주소 또는 비밀번호를 잘못 입력했습니다.\\n입력하신 내용을 다시 확인해주세요.\"\r\n                  }\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div\r\n              className=\"black-large-full-button\"\r\n              onClick={onSignInButtonClickHandler}\r\n            >\r\n              {\"로그인\"}\r\n            </div>\r\n            <div className=\"auth-description-box\">\r\n              <div className=\"auth-description\">\r\n                {\"신규 사용자이신가요? \"}\r\n                <span\r\n                  className=\"auth-description-link\"\r\n                  onClick={onSignLinkClickHandler}\r\n                >\r\n                  {\"회원가입\"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // component : sign up card 컴포넌트 //\r\n  const SignUpCard = () => {\r\n    // state: 이메일 요소 참조 상태 //\r\n    const emailRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 패스워드 요소 참조 상태 //\r\n    const passwordRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 패스워드 확인 요소 참조 상태 //\r\n    const passwordCheckRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 닉네임 요소 참조 상태 //\r\n    const nicknameRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 휴대폰 번호 요소 참조 상태 //\r\n    const telNumberRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 주소 요소 참조 상태 //\r\n    const addressRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 상세 주소 요소 참조 상태 //\r\n    const addressDetailRef = useRef<HTMLInputElement | null>(null);\r\n\r\n    // state: 페이지 번호 상태 //\r\n    const [page, setPage] = useState<1 | 2>(1);\r\n    // state: 이메일 상태 //\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    // state: 패스워드 상태 //\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    // state: 패스워드 확인 상태 //\r\n    const [passwordCheck, setPasswordCheck] = useState<string>(\"\");\r\n    // state: 닉네임 상태 //\r\n    const [nickname, setNickname] = useState<string>(\"\");\r\n    // state: 핸드폰 번호 상태 //\r\n    const [telNumber, setTelNumber] = useState<string>(\"\");\r\n    // state: 주소 상태 //\r\n    const [address, setAddress] = useState<string>(\"\");\r\n    // state: 상세 주소 상태 //\r\n    const [addressDetail, setAddressDetail] = useState<string>(\"\");\r\n    // state: 개인 정보 동의 상태 //\r\n    const [agreedPersonal, setAgreedPersonal] = useState<boolean>(false);\r\n\r\n    // state: 패스워드 타입 상태 //\r\n    const [passwordType, setPasswordType] = useState<\"text\" | \"password\">(\r\n      \"password\"\r\n    );\r\n    // state: 패스워드 확인 타입 상태 //\r\n    const [passwordCheckType, setPasswordCheckType] = useState<\r\n      \"text\" | \"password\"\r\n    >(\"password\");\r\n    const [isEmailError, setEmailError] = useState<boolean>(false);\r\n    // state: 패스워드 에러 상태 //\r\n    const [isPasswordError, setPasswordError] = useState<boolean>(false);\r\n    // state: 패스워드 확인 에러 상태 //\r\n    const [isPasswordCheckError, setPasswordCheckError] =\r\n      useState<boolean>(false);\r\n    // state: 닉네임 에러 상태 //\r\n    const [isNicknameError, setNicknameError] = useState<boolean>(false);\r\n    // state: 핸드폰 번호 에러 상태 //\r\n    const [isTelNumberError, setTelNumberError] = useState<boolean>(false);\r\n    // state: 주소 에러 상태 //\r\n    const [isAddressError, setAddressError] = useState<boolean>(false);\r\n    // state: 개인 정보 동의 에러 상태 //\r\n    const [isAgreedPersonalError, setAgreedPersonalError] =\r\n      useState<boolean>(false);\r\n    // state: 이메일 에러 메세지 상태 //\r\n    const [emailErrorMessage, setEmailErrorMessage] = useState<string>(\"\");\r\n    // state: 패스워드 에러 메세지 상태 //\r\n    const [passwordErrorMessage, setPasswordErrorMessage] =\r\n      useState<string>(\"\");\r\n    // state: 패스워드 확인 에러 메세지 상태 //\r\n    const [passwordCheckErrorMessage, setPasswordCheckErrorMessage] =\r\n      useState<string>(\"\");\r\n    // state: 닉네임 에러 메세지 상태 //\r\n    const [nicknameErrorMessage, setNicknameErrorMessage] =\r\n      useState<string>(\"\");\r\n    // state: 핸드폰 번호 에러 메세지 상태 //\r\n    const [telNumberErrorMessage, setTelNumberErrorMessage] =\r\n      useState<string>(\"\");\r\n    // state: 주소 에러 메세지 상태 //\r\n    const [addressErrorMessage, setAddressErrorMessage] = useState<string>(\"\");\r\n\r\n    // state: 패스워드 버튼 아이콘 상태 //\r\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState<\r\n      \"eye-light-off-icon\" | \"eye-light-on-icon\"\r\n    >(\"eye-light-off-icon\");\r\n    // state: 패스워드 확인 버튼 아이콘 상태 //\r\n    const [passwordCheckButtonIcon, setPasswordCheckButtonIcon] = useState<\r\n      \"eye-light-off-icon\" | \"eye-light-on-icon\"\r\n    >(\"eye-light-off-icon\");\r\n\r\n    // function: 다음 주소 검색 팝업 오픈 함수 //\r\n    const open = useDaumPostcodePopup();\r\n    // function: sign up response 처리 함수 //\r\n    const signUpResponse = (\r\n      responseBody: SignUpResponseDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) {\r\n        alert(\"네트워크 이상입니다.\");\r\n        return;\r\n      }\r\n      const { code } = responseBody;\r\n      if (code === \"DE\") {\r\n        setEmailError(true);\r\n        setEmailErrorMessage(\"중복되는 이메일 주소입니다.\");\r\n      }\r\n      if (code === \"DN\") {\r\n        setNicknameError(true);\r\n        setNicknameErrorMessage(\"중복되는 닉네임입니다.\");\r\n      }\r\n      if (code === \"DT\") {\r\n        setTelNumberError(true);\r\n        setTelNumberErrorMessage(\"중복되는 핸드폰 번호입니다.\");\r\n      }\r\n      if (code === \"VF\") {\r\n        alert(\"모든 값을 입력하세요.\");\r\n      }\r\n      if (code === \"DBE\") {\r\n        alert(\"데이터베이스 오류입니다.\");\r\n      }\r\n      if (code !== \"SU\") return;\r\n\r\n      setView(\"sign-in\");\r\n    };\r\n    // event handler: 이메일 변경 이벤트 처리 //\r\n    const onEmailChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setEmail(value);\r\n      setEmailError(false);\r\n      setEmailErrorMessage(\"\");\r\n    };\r\n\r\n    // event handler: 패스워드 변경 이벤트 처리 //\r\n    const onPasswordChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setPassword(value);\r\n      setPasswordError(false);\r\n      setPasswordErrorMessage(\"\");\r\n    };\r\n    // event handler: 패스워드 확인 변경 이벤트 처리 //\r\n    const onPasswordCheckChangeHandler = (\r\n      event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n      const { value } = event.target;\r\n      setPasswordCheck(value);\r\n      setPasswordCheckError(false);\r\n      setPasswordCheckErrorMessage(\"\");\r\n    };\r\n    // event handler: 닉네임 변경 이벤트 처리 //\r\n    const onNicknameChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setNickname(value);\r\n      setNicknameError(false);\r\n      setNicknameErrorMessage(\"\");\r\n    };\r\n    // event handler: 핸드폰 번호 변경 이벤트 처리 //\r\n    const onTelNumberChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setTelNumber(value);\r\n      setTelNumberError(false);\r\n      setTelNumberErrorMessage(\"\");\r\n    };\r\n    // event handler: 주소 변경 이벤트 처리 //\r\n    const onAddressChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setAddress(value);\r\n      setAddressError(false);\r\n      setAddressErrorMessage(\"\");\r\n    };\r\n    // event handler: 상세 주소 변경 이벤트 처리 //\r\n    const onAddressDetailChangeHandler = (\r\n      event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n      const { value } = event.target;\r\n      setAddressDetail(value);\r\n    };\r\n    // event handler: 개인 정보 동의 체크 박스 클릭 이벤트 처리 //\r\n    const onAgreedPersonalClickHandler = () => {\r\n      setAgreedPersonal(!agreedPersonal);\r\n      setAgreedPersonalError(false);\r\n    };\r\n    // event handler: 패스워드 버튼 클릭 이벤트 처리 //\r\n    const onPasswordButtonClickHandler = () => {\r\n      if (passwordButtonIcon === \"eye-light-off-icon\") {\r\n        setPasswordButtonIcon(\"eye-light-on-icon\");\r\n        setPasswordType(\"text\");\r\n      } else {\r\n        setPasswordButtonIcon(\"eye-light-off-icon\");\r\n        setPasswordType(\"password\");\r\n      }\r\n    };\r\n    // event handler: 패스워드 확인 버튼 클릭 이벤트 처리 //\r\n    const onPasswordCheckButtonClickHandler = () => {\r\n      if (passwordCheckButtonIcon === \"eye-light-off-icon\") {\r\n        setPasswordCheckButtonIcon(\"eye-light-on-icon\");\r\n        setPasswordCheckType(\"text\");\r\n      } else {\r\n        setPasswordCheckButtonIcon(\"eye-light-off-icon\");\r\n        setPasswordCheckType(\"password\");\r\n      }\r\n    };\r\n    // event handler: 주소 버튼 클릭 이벤트 처리 //\r\n    const onAddressButtonClickHandler = () => {\r\n      open({ onComplete });\r\n    };\r\n    // event handler: 다음 단계 버튼 클릭 이벤트 처리 //\r\n    const onNextButtonClickHandler = () => {\r\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;\r\n      const isEmailPattern = emailPattern.test(email);\r\n      if (!isEmailPattern) {\r\n        setEmailError(true);\r\n        setEmailErrorMessage(\"이메일 주소 포멧이 맞지 않습니다.\");\r\n      }\r\n      const isCheckedPassword = password.trim().length >= 8;\r\n      if (!isCheckedPassword) {\r\n        setPasswordError(true);\r\n        setPasswordErrorMessage(\"비밀번호는 8자 이상 입력해주세요.\");\r\n      }\r\n      const isEqualPassword = password === passwordCheck;\r\n      if (!isEqualPassword) {\r\n        setPasswordCheckError(true);\r\n        setPasswordCheckErrorMessage(\"비밀번호가 일치하지 않습니다.\");\r\n      }\r\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) return;\r\n      setPage(2);\r\n    };\r\n    // event handler: 회원가입 버튼 클릭 이벤트 처리 //\r\n    const onSignUpButtonClickHandler = () => {\r\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;\r\n      const isEmailPattern = emailPattern.test(email);\r\n      if (!isEmailPattern) {\r\n        setEmailError(true);\r\n        setEmailErrorMessage(\"이메일 주소 포멧이 맞지 않습니다.\");\r\n      }\r\n      const isCheckedPassword = password.trim().length >= 8;\r\n      if (!isCheckedPassword) {\r\n        setPasswordError(true);\r\n        setPasswordErrorMessage(\"비밀번호는 8자 이상 입력해주세요.\");\r\n      }\r\n      const isEqualPassword = password === passwordCheck;\r\n      if (!isEqualPassword) {\r\n        setPasswordCheckError(true);\r\n        setPasswordCheckErrorMessage(\"비밀번호가 일치하지 않습니다.\");\r\n      }\r\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) {\r\n        setPage(1);\r\n        return;\r\n      }\r\n      const hasNickname = nickname.trim().length !== 0;\r\n      if (!hasNickname) {\r\n        setNicknameError(true);\r\n        setNicknameErrorMessage(\"닉네임을 입력해주세요.\");\r\n      }\r\n      const telNumberPattern = /^[0-9]{11,13}$/;\r\n      const isTelNumberPattern = telNumberPattern.test(telNumber);\r\n      if (!isTelNumberPattern) {\r\n        setTelNumberError(true);\r\n        setTelNumberErrorMessage(\"숫자만 입력해주세요.\");\r\n      }\r\n      const hasAddress = address.trim().length > 0;\r\n      if (!hasAddress) {\r\n        setAddressError(true);\r\n        setAddressErrorMessage(\"주소를 선택해주세요.\");\r\n      }\r\n      if (!agreedPersonal) setAgreedPersonalError(true);\r\n\r\n      if (!hasNickname || !isTelNumberPattern || !agreedPersonal) return;\r\n\r\n      const requestBody: SignUpRequestDto = {\r\n        email,\r\n        password,\r\n        nickname,\r\n        telNumber,\r\n        address,\r\n        addressDetail,\r\n        agreedPersonal,\r\n      };\r\n\r\n      signUpRequest(requestBody).then(signUpResponse);\r\n    };\r\n    // event handler: 로그인 링크 클릭 이벤트 처리 //\r\n    const onSignInLinkClickHandler = () => {\r\n      setView(\"sign-in\");\r\n    };\r\n    // event handler: 이메일 키 다운 이벤트 처리 //\r\n    const onEmailKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!passwordRef.current) return;\r\n      passwordRef.current.focus();\r\n    };\r\n    // event handler: 패스워드 키 다운 이벤트 처리 //\r\n    const onPasswordKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!passwordCheckRef.current) return;\r\n      passwordCheckRef.current.focus();\r\n    };\r\n    // event handler: 패스워드 확인 키 다운 이벤트 처리 //\r\n    const onPasswordCheckKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      onNextButtonClickHandler();\r\n    };\r\n    // event handler: 닉네임 키 다운 이벤트 처리 //\r\n    const onNicknameKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!telNumberRef.current) return;\r\n      onNextButtonClickHandler();\r\n      telNumberRef.current.focus();\r\n    };\r\n    // event handler: 핸드폰 번호 키 다운 이벤트 처리 //\r\n    const onTelNumberKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      onAddressButtonClickHandler();\r\n    };\r\n    // event handler: 주소 키 다운 이벤트 처리 //\r\n    const onAddressKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!addressDetailRef.current) return;\r\n      addressDetailRef.current.focus();\r\n    };\r\n    // event handler: 상세 주소 키 다운 이벤트 처리 //\r\n    const onAddressDetailKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      onSignUpButtonClickHandler();\r\n    };\r\n\r\n    // event handler: 다음 주소 검색 완료 이벤트 처리 //\r\n    const onComplete = (data: Address) => {\r\n      const { address } = data;\r\n      setAddress(address);\r\n      setAddressError(false);\r\n      setAddressErrorMessage(\"\");\r\n      if (!addressDetailRef.current) return;\r\n      addressDetailRef.current.focus();\r\n    };\r\n    // effect: 페이지가 변경될때마다 실행될 함수 //\r\n    useEffect(() => {\r\n      if (page === 2) {\r\n        if (!nicknameRef.current) return;\r\n        nicknameRef.current.focus();\r\n      }\r\n    }, [page]);\r\n    // render : sign up card 컴포넌트 렌더링 //\r\n    return (\r\n      <div className=\"auth-card\">\r\n        <div className=\"auth-card-box\">\r\n          <div className=\"auth-card-top\">\r\n            <div className=\"auth-card-title-box\">\r\n              <div className=\"auth-card-title\">{\"회원가입\"}</div>\r\n              <div className=\"auth-card-page\">{`${page}/2`}</div>\r\n            </div>\r\n            {page === 1 && (\r\n              <>\r\n                <InputBox\r\n                  ref={emailRef}\r\n                  label=\"이메일 주소*\"\r\n                  type=\"text\"\r\n                  placeholder=\"이메일 주소를 입력해주세요.\"\r\n                  value={email}\r\n                  onChange={onEmailChangeHandler}\r\n                  error={isEmailError}\r\n                  message={emailErrorMessage}\r\n                  onKeyDown={onEmailKeyDownHandler}\r\n                />\r\n                <InputBox\r\n                  ref={passwordRef}\r\n                  label=\"비밀번호*\"\r\n                  type={passwordType}\r\n                  placeholder=\"비밀번호를 입력해주세요.\"\r\n                  value={password}\r\n                  onChange={onPasswordChangeHandler}\r\n                  error={isPasswordError}\r\n                  message={passwordErrorMessage}\r\n                  icon={passwordButtonIcon}\r\n                  onButtonClick={onPasswordButtonClickHandler}\r\n                  onKeyDown={onPasswordKeyDownHandler}\r\n                />\r\n                <InputBox\r\n                  ref={passwordCheckRef}\r\n                  label=\"비밀번호 확인*\"\r\n                  type={passwordCheckType}\r\n                  placeholder=\"비밀번호를 다시 입력해주세요.\"\r\n                  value={passwordCheck}\r\n                  onChange={onPasswordCheckChangeHandler}\r\n                  error={isPasswordCheckError}\r\n                  message={passwordCheckErrorMessage}\r\n                  icon={passwordCheckButtonIcon}\r\n                  onButtonClick={onPasswordCheckButtonClickHandler}\r\n                  onKeyDown={onPasswordCheckKeyDownHandler}\r\n                />\r\n              </>\r\n            )}\r\n            {page === 2 && (\r\n              <>\r\n                <InputBox\r\n                  ref={nicknameRef}\r\n                  label=\"닉네임*\"\r\n                  type=\"text\"\r\n                  placeholder=\"닉네임을 입력해주세요.\"\r\n                  value={nickname}\r\n                  onChange={onNicknameChangeHandler}\r\n                  error={isNicknameError}\r\n                  message={nicknameErrorMessage}\r\n                  onKeyDown={onNicknameKeyDownHandler}\r\n                />\r\n                <InputBox\r\n                  ref={telNumberRef}\r\n                  label=\"핸드폰 번호*\"\r\n                  type=\"text\"\r\n                  placeholder=\"핸드폰 번호를 입력해주세요.\"\r\n                  value={telNumber}\r\n                  onChange={onTelNumberChangeHandler}\r\n                  error={isTelNumberError}\r\n                  message={telNumberErrorMessage}\r\n                  onKeyDown={onTelNumberKeyDownHandler}\r\n                />\r\n                <InputBox\r\n                  ref={addressRef}\r\n                  label=\"주소*\"\r\n                  type=\"text\"\r\n                  placeholder=\"우편번호 찾기\"\r\n                  value={address}\r\n                  onChange={onAddressChangeHandler}\r\n                  error={isAddressError}\r\n                  message={addressErrorMessage}\r\n                  icon=\"expand-right-light-icon\"\r\n                  onButtonClick={onAddressButtonClickHandler}\r\n                  onKeyDown={onAddressKeyDownHandler}\r\n                />\r\n                <InputBox\r\n                  ref={addressDetailRef}\r\n                  label=\"상세 주소\"\r\n                  type=\"text\"\r\n                  placeholder=\"상세 주소를 입력해주세요.\"\r\n                  value={addressDetail}\r\n                  onChange={onAddressDetailChangeHandler}\r\n                  error={false}\r\n                  onKeyDown={onAddressDetailKeyDownHandler}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"auth-card-bottom\">\r\n            {page === 1 && (\r\n              <div\r\n                className=\"black-large-full-button\"\r\n                onClick={onNextButtonClickHandler}\r\n              >\r\n                {\"다음 단계\"}\r\n              </div>\r\n            )}\r\n            {page === 2 && (\r\n              <>\r\n                <div className=\"auth-consent-box\">\r\n                  <div\r\n                    className=\"auth-check-box\"\r\n                    onClick={onAgreedPersonalClickHandler}\r\n                  >\r\n                    <div\r\n                      className={`icon ${\r\n                        agreedPersonal\r\n                          ? \"check-round-fill-icon\"\r\n                          : \"check-ring-light-icon\"\r\n                      }`}\r\n                    ></div>\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      isAgreedPersonalError\r\n                        ? \"auth-consent-title-error\"\r\n                        : \"auth-consent-title\"\r\n                    }\r\n                  >\r\n                    {\"개인정보동의\"}\r\n                  </div>\r\n                  <div className=\"auth-consent-link\">{\"더보기 >\"}</div>\r\n                </div>\r\n                <div\r\n                  className=\"black-large-full-button\"\r\n                  onClick={onSignUpButtonClickHandler}\r\n                >\r\n                  {\"회원가입\"}\r\n                </div>\r\n              </>\r\n            )}\r\n            <div className=\"auth-description-box\">\r\n              <div className=\"auth-description\">\r\n                {\"이미 계정이 있으신가요? \"}\r\n                <span\r\n                  className=\"auth-description-link\"\r\n                  onClick={onSignInLinkClickHandler}\r\n                >\r\n                  {\"로그인\"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // render : 인증화면 컴포넌트 렌더링 //\r\n  return (\r\n    <div id=\"auth-wrapper\">\r\n      <div className=\"auth-container\">\r\n        <div className=\"auth-jumbotron-box\">\r\n          <div className=\"auth-jumbotron-contents\">\r\n            <div className=\"auth-logo-icon\"></div>\r\n            <div className=\"auth-jumbotron-text-box\">\r\n              <div className=\"auth-jumbotron-text\">{\"운동 커뮤니티\"}</div>\r\n              <div className=\"auth-jumbotron-text\">{\"Play Fit\"}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {view === \"sign-in\" && <SignInCard />}\r\n        {view === \"sign-up\" && <SignUpCard />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}