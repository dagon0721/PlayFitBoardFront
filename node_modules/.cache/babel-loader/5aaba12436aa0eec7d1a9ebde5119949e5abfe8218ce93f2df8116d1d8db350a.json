{"ast":null,"code":"var _jsxFileName = \"C:\\\\Springboot-React-ts\\\\board-front\\\\src\\\\views\\\\Authentication\\\\index.tsx\",\n  _s3 = $RefreshSig$();\nimport InputBox from \"components/InputBox\";\nimport \"./style.css\";\nimport React, { useState, useRef } from \"react\";\nimport { signInRequest } from \"apis\";\nimport { useCookies } from \"react-cookie\";\nimport { MAIN_PATH } from \"constant\";\nimport { useNavigate } from \"react-router-dom\";\n\n// component : 인증 화면 컴포넌트 //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Authentication() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  // state: 화면 상태 //\n  const [view, setView] = useState(\"sign-in\");\n  // state: 쿠키 상태 //\n  const [cookies, setCookie] = useCookies();\n\n  // function: 네비게이트 함수 //\n  const navigator = useNavigate();\n\n  // component : sign in card 컴포넌트 //\n  const SignInCard = () => {\n    _s();\n    // state: 이메일 요소 참조 상태 //\n    const emailRef = useRef(null);\n    // state: 패스워드 요소 참조 상태 //\n    const passwordRef = useRef(null);\n\n    // state: 이메일 상태 //\n    const [email, setEmail] = useState(\"\");\n    // state: 패스워드 상태 //\n    const [password, setPassword] = useState(\"\");\n    // state: 패스워드 타입 상태 //\n    const [passwordType, setPasswordType] = useState(\"password\");\n    // state: 패스워드 버튼 아이콘 상태 //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState(\"eye-light-off-icon\");\n    // state: 에러 상태 //\n    const [error, setError] = useState(false);\n\n    // function: sign in response 처리 함수 //\n    const signInResponse = responseBody => {\n      if (!responseBody) {\n        alert(\"네트워크 이상입니다.\");\n        return;\n      }\n      if (\"code\" in responseBody) {\n        const {\n          code\n        } = responseBody;\n        if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\n        if (code === \"SF\" || code === \"VF\") setError(true);\n        if (code !== \"SU\") return;\n        const {\n          token,\n          expirationTime\n        } = responseBody;\n        const now = new Date().getTime();\n        const expires = new Date(now + expirationTime * 1000);\n        setCookie(\"accessToken\", token, {\n          expires,\n          path: MAIN_PATH()\n        });\n        navigator(MAIN_PATH());\n      } else {\n        alert(\"응답 형식이 올바르지 않습니다.\");\n      }\n    };\n\n    // event handler: 이메일 변경 이벤트 처리 //\n    const onEmailChangeHandler = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n    };\n\n    // event handler: 비밀번호 변경 이벤트 처리 //\n    const onPasswordChangeHandler = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n    };\n\n    // event handler: 로그인 버튼 클릭 이벤트 처리  함수 //\n    const onSignInButtonClickHandler = () => {\n      const requestBody = {\n        email,\n        password\n      };\n      signInRequest(requestBody).then(signInResponse);\n    };\n    // event handler: 회원가입 링크 클릭 이벤트 처리  함수 //\n    const onSignLinkClickHandler = () => {\n      setView(\"sign-up\");\n    };\n\n    // event handler: 패스워드 버튼 클릭 이벤트 처리  함수 //\n    const onPasswordButtonClickHandler = () => {\n      if (passwordType === \"text\") {\n        setPasswordType(\"password\");\n        setPasswordButtonIcon(\"eye-light-off-icon\");\n      } else {\n        setPasswordType(\"text\");\n        setPasswordButtonIcon(\"eye-light-on-icon\");\n      }\n    };\n\n    // event handler: 이메일 인풋 키 다운 이벤트 처리  함수 //\n    const onEmailKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n    // event handler: 패스워드 인풋 키 다운 이벤트 처리  함수 //\n    const onPasswordKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      onSignInButtonClickHandler();\n    };\n    // render : sign in card 컴포넌트 렌더링 //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title\",\n              children: \"로그인\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: emailRef,\n            label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n            type: \"text\",\n            placeholder: \"'\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            error: error,\n            value: email,\n            onChange: onEmailChangeHandler,\n            onKeyDown: onEmailKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: passwordRef,\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n            type: passwordType,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            error: error,\n            value: password,\n            onChange: onPasswordChangeHandler,\n            icon: passwordButtonIcon,\n            onButtonClick: onPasswordButtonClickHandler,\n            onKeyDown: onPasswordKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-sign-in-error-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-sign-in-error-message\",\n              children: \"이메일 주소 또는 비밀번호를 잘못 입력했습니다.\\n입력하신 내용을 다시 확인해주세요.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onSignInButtonClickHandler,\n            children: \"로그인\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: [\"신규 사용자이신가요? \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-description-link\",\n                onClick: onSignLinkClickHandler,\n                children: \"회원가입\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  };\n\n  // component : sign up card 컴포넌트 //\n  _s(SignInCard, \"9I62EhHqQe1/cdr2r08/oYUs3Lc=\");\n  const SignUpCard = () => {\n    _s2();\n    // state: 이메일 요소 참조 상태 //\n    const emailRef = useRef(null);\n    // state: 패스워드 요소 참조 상태 //\n    const passwordRef = useRef(null);\n    // state: 패스워드 확인 요소 참조 상태 //\n    const passwordCheckRef = useRef(null);\n\n    // state: 페이지 번호 상태 //\n    const [page, setPage] = useState(1);\n    // state: 이메일 상태 //\n    const [email, setEmail] = useState(\"\");\n    // state: 패스워드 상태 //\n    const [password, setPassword] = useState(\"\");\n    // state: 패스워드 확인 상태 //\n    const [passwordCheck, setPasswordCheck] = useState(\"\");\n\n    // state: 패스워드 타입 상태 //\n    const [passwordType, setPasswordType] = useState(\"password\");\n    // state: 패스워드 확인 타입 상태 //\n    const [passwordCheckType, setPasswordCheckType] = useState(\"password\");\n\n    // state: 이메일 에러 상태 //\n    const [isEmailError, setEmailError] = useState(false);\n    // state: 패스워드 에러 상태 //\n    const [isPasswordError, setPasswordError] = useState(false);\n    // state: 패스워드 확인 에러 상태 //\n    const [isPasswordCheckError, setPasswordCheckError] = useState(false);\n\n    // state: 이메일 에러 메세지 상태 //\n    const [emailErrorMessage, setEmailErrorMessage] = useState(\"\");\n    // state: 패스워드 에러 메세지 상태 //\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState(\"\");\n    // state: 패스워드 확인 에러 메세지 상태 //\n    const [passwordCheckErrorMessage, setPasswordCheckErrorMessage] = useState(\"\");\n\n    // state: 패스워드 버튼 아이콘 상태 //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState(\"eye-light-off-icon\");\n    // state: 패스워드 확인 버튼 아이콘 상태 //\n    const [passwordCheckButtonIcon, setPasswordCheckButtonIcon] = useState(\"eye-light-off-icon\");\n\n    // event handler: 이메일 변경 이벤트 처리 //\n    const onEmailChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n    };\n\n    // event handler: 패스워드 변경 이벤트 처리 //\n    const onPasswordChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n    };\n    // event handler: 패스워드 변경 이벤트 처리 //\n    const onPasswordCheckChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPasswordCheck(value);\n    };\n    // event handler: 패스워드 버튼 클릭 이벤트 처리 //\n    const onPasswordButtonClickHandler = () => {\n      if (passwordButtonIcon === \"eye-light-off-icon\") {\n        setPasswordButtonIcon(\"eye-light-on-icon\");\n        setPasswordType(\"text\");\n      } else {\n        setPasswordButtonIcon(\"eye-light-off-icon\");\n        setPasswordType(\"password\");\n      }\n    };\n    // event handler: 패스워드 확인 버튼 클릭 이벤트 처리 //\n    const onPasswordCheckButtonClickHandler = () => {\n      if (passwordCheckButtonIcon === \"eye-light-off-icon\") {\n        setPasswordCheckButtonIcon(\"eye-light-on-icon\");\n        setPasswordCheckType(\"text\");\n      } else {\n        setPasswordCheckButtonIcon(\"eye-light-off-icon\");\n        setPasswordCheckType(\"password\");\n      }\n    };\n    // event handler: 다음 단계 버튼 클릭 이벤트 처리 //\n    const onNextButtonClickHandler = () => {\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;\n      const isEmailPattern = emailPattern.test(email);\n      if (!isEmailPattern) {\n        setEmailError(true);\n        setEmailErrorMessage(\"이메일 주소 포멧이 맞지 않습니다.\");\n      }\n      const isCheckedPassword = password.trim().length >= 8;\n      if (!isCheckedPassword) {\n        setPasswordError(true);\n        setPasswordErrorMessage(\"비밀번호는 8자 이상 입력해주세요.\");\n      }\n      const isEqualPassword = password === passwordCheck;\n      if (!isEqualPassword) {\n        setPasswordCheckError(true);\n        setPasswordCheckErrorMessage(\"비밀번호가 일치하지 않습니다.\");\n      }\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) return;\n      setPage(2);\n    };\n    // event handler: 이메일 키 다운 이벤트 처리 //\n    const onEmailKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n    // event handler: 패스워드 키 다운 이벤트 처리 //\n    const onPasswordKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      if (!passwordCheckRef.current) return;\n      passwordCheckRef.current.focus();\n    };\n    // event handler: 패스워드 확인 키 다운 이벤트 처리 //\n    const onPasswordCheckKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n    // render : sign up card 컴포넌트 렌더링 //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title\",\n              children: \"회원가입\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-page\",\n              children: `${page}/2`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: emailRef,\n            label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C*\",\n            type: \"text\",\n            placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            value: email,\n            onChange: onEmailChangeHandler,\n            error: isEmailError,\n            message: emailErrorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: passwordRef,\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638*\",\n            type: passwordType,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            value: password,\n            onChange: onPasswordChangeHandler,\n            error: isPasswordError,\n            message: passwordErrorMessage,\n            icon: passwordButtonIcon,\n            onButtonClick: onPasswordButtonClickHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: passwordCheckRef,\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778*\",\n            type: passwordCheckType,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            value: passwordCheck,\n            onChange: onPasswordCheckChangeHandler,\n            error: isPasswordCheckError,\n            message: passwordCheckErrorMessage,\n            icon: passwordCheckButtonIcon,\n            onButtonClick: onPasswordCheckButtonClickHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onNextButtonClickHandler,\n            children: \"다음 단계\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: [\"이미 계정이 있으신가요? \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-description-link\",\n                children: \"로그인\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this);\n  };\n\n  // render : 인증화면 컴포넌트 렌더링 //\n  _s2(SignUpCard, \"qZZDKOLDHsIEdxJSKkDATBAG/bw=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"auth-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-jumbotron-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-jumbotron-contents\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-logo-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-jumbotron-text-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: \"운동 커뮤니티\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: \"Play Fit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), view === \"sign-in\" && /*#__PURE__*/_jsxDEV(SignInCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 32\n      }, this), view === \"sign-up\" && /*#__PURE__*/_jsxDEV(SignUpCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 383,\n    columnNumber: 5\n  }, this);\n}\n_s3(Authentication, \"euhi3nYfLo/Y//WG4GlhJ4mPI/8=\", false, function () {\n  return [useCookies, useNavigate];\n});\n_c = Authentication;\nvar _c;\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"names":["InputBox","React","useState","useRef","signInRequest","useCookies","MAIN_PATH","useNavigate","jsxDEV","_jsxDEV","Authentication","_s3","_s","$RefreshSig$","_s2","view","setView","cookies","setCookie","navigator","SignInCard","emailRef","passwordRef","email","setEmail","password","setPassword","passwordType","setPasswordType","passwordButtonIcon","setPasswordButtonIcon","error","setError","signInResponse","responseBody","alert","code","token","expirationTime","now","Date","getTime","expires","path","onEmailChangeHandler","event","value","target","onPasswordChangeHandler","onSignInButtonClickHandler","requestBody","then","onSignLinkClickHandler","onPasswordButtonClickHandler","onEmailKeyDownHandler","key","current","focus","onPasswordKeyDownHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","label","type","placeholder","onChange","onKeyDown","icon","onButtonClick","onClick","SignUpCard","passwordCheckRef","page","setPage","passwordCheck","setPasswordCheck","passwordCheckType","setPasswordCheckType","isEmailError","setEmailError","isPasswordError","setPasswordError","isPasswordCheckError","setPasswordCheckError","emailErrorMessage","setEmailErrorMessage","passwordErrorMessage","setPasswordErrorMessage","passwordCheckErrorMessage","setPasswordCheckErrorMessage","passwordCheckButtonIcon","setPasswordCheckButtonIcon","onPasswordCheckChangeHandler","onPasswordCheckButtonClickHandler","onNextButtonClickHandler","emailPattern","isEmailPattern","test","isCheckedPassword","trim","length","isEqualPassword","onPasswordCheckKeyDownHandler","message","id","_c","$RefreshReg$"],"sources":["C:/Springboot-React-ts/board-front/src/views/Authentication/index.tsx"],"sourcesContent":["import InputBox from \"components/InputBox\";\r\nimport \"./style.css\";\r\nimport React, { useState, KeyboardEvent, useRef, ChangeEvent } from \"react\";\r\nimport { SignInRequestDto } from \"apis/request/auth\";\r\nimport { signInRequest } from \"apis\";\r\nimport { ResponseDto } from \"apis/response\";\r\nimport SignInResponseDto from \"apis/response/sign-in.response.dto\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { MAIN_PATH } from \"constant\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// component : 인증 화면 컴포넌트 //\r\nexport default function Authentication() {\r\n  // state: 화면 상태 //\r\n  const [view, setView] = useState<\"sign-in\" | \"sign-up\">(\"sign-in\");\r\n  // state: 쿠키 상태 //\r\n  const [cookies, setCookie] = useCookies();\r\n\r\n  // function: 네비게이트 함수 //\r\n  const navigator = useNavigate();\r\n\r\n  // component : sign in card 컴포넌트 //\r\n  const SignInCard = () => {\r\n    // state: 이메일 요소 참조 상태 //\r\n    const emailRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 패스워드 요소 참조 상태 //\r\n    const passwordRef = useRef<HTMLInputElement | null>(null);\r\n\r\n    // state: 이메일 상태 //\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    // state: 패스워드 상태 //\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    // state: 패스워드 타입 상태 //\r\n    const [passwordType, setPasswordType] = useState<\"text\" | \"password\">(\r\n      \"password\"\r\n    );\r\n    // state: 패스워드 버튼 아이콘 상태 //\r\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState<\r\n      \"eye-light-off-icon\" | \"eye-light-on-icon\"\r\n    >(\"eye-light-off-icon\");\r\n    // state: 에러 상태 //\r\n    const [error, setError] = useState<boolean>(false);\r\n\r\n    // function: sign in response 처리 함수 //\r\n    const signInResponse = (\r\n      responseBody: SignInRequestDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) {\r\n        alert(\"네트워크 이상입니다.\");\r\n        return;\r\n      }\r\n      if (\"code\" in responseBody) {\r\n        const { code } = responseBody;\r\n        if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n        if (code === \"SF\" || code === \"VF\") setError(true);\r\n        if (code !== \"SU\") return;\r\n\r\n        const { token, expirationTime } = responseBody as SignInResponseDto;\r\n        const now = new Date().getTime();\r\n        const expires = new Date(now + expirationTime * 1000);\r\n\r\n        setCookie(\"accessToken\", token, { expires, path: MAIN_PATH() });\r\n        navigator(MAIN_PATH());\r\n      } else {\r\n        alert(\"응답 형식이 올바르지 않습니다.\");\r\n      }\r\n    };\r\n\r\n    // event handler: 이메일 변경 이벤트 처리 //\r\n    const onEmailChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      setError(false);\r\n      const { value } = event.target;\r\n      setEmail(value);\r\n    };\r\n\r\n    // event handler: 비밀번호 변경 이벤트 처리 //\r\n    const onPasswordChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      setError(false);\r\n      const { value } = event.target;\r\n      setPassword(value);\r\n    };\r\n\r\n    // event handler: 로그인 버튼 클릭 이벤트 처리  함수 //\r\n    const onSignInButtonClickHandler = () => {\r\n      const requestBody: SignInRequestDto = {\r\n        email,\r\n        password,\r\n      };\r\n      signInRequest(requestBody).then(signInResponse);\r\n    };\r\n    // event handler: 회원가입 링크 클릭 이벤트 처리  함수 //\r\n    const onSignLinkClickHandler = () => {\r\n      setView(\"sign-up\");\r\n    };\r\n\r\n    // event handler: 패스워드 버튼 클릭 이벤트 처리  함수 //\r\n    const onPasswordButtonClickHandler = () => {\r\n      if (passwordType === \"text\") {\r\n        setPasswordType(\"password\");\r\n        setPasswordButtonIcon(\"eye-light-off-icon\");\r\n      } else {\r\n        setPasswordType(\"text\");\r\n        setPasswordButtonIcon(\"eye-light-on-icon\");\r\n      }\r\n    };\r\n\r\n    // event handler: 이메일 인풋 키 다운 이벤트 처리  함수 //\r\n    const onEmailKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!passwordRef.current) return;\r\n      passwordRef.current.focus();\r\n    };\r\n    // event handler: 패스워드 인풋 키 다운 이벤트 처리  함수 //\r\n    const onPasswordKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      onSignInButtonClickHandler();\r\n    };\r\n    // render : sign in card 컴포넌트 렌더링 //\r\n    return (\r\n      <div className=\"auth-card\">\r\n        <div className=\"auth-card-box\">\r\n          <div className=\"auth-card-top\">\r\n            <div className=\"auth-card-title-box\">\r\n              <div className=\"auth-card-title\">{\"로그인\"}</div>\r\n            </div>\r\n            <InputBox\r\n              ref={emailRef}\r\n              label=\"이메일 주소\"\r\n              type=\"text\"\r\n              placeholder=\"'이메일 주소를 입력해주세요.\"\r\n              error={error}\r\n              value={email}\r\n              onChange={onEmailChangeHandler}\r\n              onKeyDown={onEmailKeyDownHandler}\r\n            />\r\n            <InputBox\r\n              ref={passwordRef}\r\n              label=\"비밀번호\"\r\n              type={passwordType}\r\n              placeholder=\"비밀번호를 입력해주세요.\"\r\n              error={error}\r\n              value={password}\r\n              onChange={onPasswordChangeHandler}\r\n              icon={passwordButtonIcon}\r\n              onButtonClick={onPasswordButtonClickHandler}\r\n              onKeyDown={onPasswordKeyDownHandler}\r\n            />\r\n          </div>\r\n          <div className=\"auth-card-bottom\">\r\n            {error && (\r\n              <div className=\"auth-sign-in-error-box\">\r\n                <div className=\"auth-sign-in-error-message\">\r\n                  {\r\n                    \"이메일 주소 또는 비밀번호를 잘못 입력했습니다.\\n입력하신 내용을 다시 확인해주세요.\"\r\n                  }\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div\r\n              className=\"black-large-full-button\"\r\n              onClick={onSignInButtonClickHandler}\r\n            >\r\n              {\"로그인\"}\r\n            </div>\r\n            <div className=\"auth-description-box\">\r\n              <div className=\"auth-description\">\r\n                {\"신규 사용자이신가요? \"}\r\n                <span\r\n                  className=\"auth-description-link\"\r\n                  onClick={onSignLinkClickHandler}\r\n                >\r\n                  {\"회원가입\"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // component : sign up card 컴포넌트 //\r\n  const SignUpCard = () => {\r\n    // state: 이메일 요소 참조 상태 //\r\n    const emailRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 패스워드 요소 참조 상태 //\r\n    const passwordRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 패스워드 확인 요소 참조 상태 //\r\n    const passwordCheckRef = useRef<HTMLInputElement | null>(null);\r\n\r\n    // state: 페이지 번호 상태 //\r\n    const [page, setPage] = useState<1 | 2>(1);\r\n    // state: 이메일 상태 //\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    // state: 패스워드 상태 //\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    // state: 패스워드 확인 상태 //\r\n    const [passwordCheck, setPasswordCheck] = useState<string>(\"\");\r\n\r\n    // state: 패스워드 타입 상태 //\r\n    const [passwordType, setPasswordType] = useState<\"text\" | \"password\">(\r\n      \"password\"\r\n    );\r\n    // state: 패스워드 확인 타입 상태 //\r\n    const [passwordCheckType, setPasswordCheckType] = useState<\r\n      \"text\" | \"password\"\r\n    >(\"password\");\r\n\r\n    // state: 이메일 에러 상태 //\r\n    const [isEmailError, setEmailError] = useState<boolean>(false);\r\n    // state: 패스워드 에러 상태 //\r\n    const [isPasswordError, setPasswordError] = useState<boolean>(false);\r\n    // state: 패스워드 확인 에러 상태 //\r\n    const [isPasswordCheckError, setPasswordCheckError] =\r\n      useState<boolean>(false);\r\n\r\n    // state: 이메일 에러 메세지 상태 //\r\n    const [emailErrorMessage, setEmailErrorMessage] = useState<string>(\"\");\r\n    // state: 패스워드 에러 메세지 상태 //\r\n    const [passwordErrorMessage, setPasswordErrorMessage] =\r\n      useState<string>(\"\");\r\n    // state: 패스워드 확인 에러 메세지 상태 //\r\n    const [passwordCheckErrorMessage, setPasswordCheckErrorMessage] =\r\n      useState<string>(\"\");\r\n\r\n    // state: 패스워드 버튼 아이콘 상태 //\r\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState<\r\n      \"eye-light-off-icon\" | \"eye-light-on-icon\"\r\n    >(\"eye-light-off-icon\");\r\n    // state: 패스워드 확인 버튼 아이콘 상태 //\r\n    const [passwordCheckButtonIcon, setPasswordCheckButtonIcon] = useState<\r\n      \"eye-light-off-icon\" | \"eye-light-on-icon\"\r\n    >(\"eye-light-off-icon\");\r\n\r\n    // event handler: 이메일 변경 이벤트 처리 //\r\n    const onEmailChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setEmail(value);\r\n    };\r\n\r\n    // event handler: 패스워드 변경 이벤트 처리 //\r\n    const onPasswordChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setPassword(value);\r\n    };\r\n    // event handler: 패스워드 변경 이벤트 처리 //\r\n    const onPasswordCheckChangeHandler = (\r\n      event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n      const { value } = event.target;\r\n      setPasswordCheck(value);\r\n    };\r\n    // event handler: 패스워드 버튼 클릭 이벤트 처리 //\r\n    const onPasswordButtonClickHandler = () => {\r\n      if (passwordButtonIcon === \"eye-light-off-icon\") {\r\n        setPasswordButtonIcon(\"eye-light-on-icon\");\r\n        setPasswordType(\"text\");\r\n      } else {\r\n        setPasswordButtonIcon(\"eye-light-off-icon\");\r\n        setPasswordType(\"password\");\r\n      }\r\n    };\r\n    // event handler: 패스워드 확인 버튼 클릭 이벤트 처리 //\r\n    const onPasswordCheckButtonClickHandler = () => {\r\n      if (passwordCheckButtonIcon === \"eye-light-off-icon\") {\r\n        setPasswordCheckButtonIcon(\"eye-light-on-icon\");\r\n        setPasswordCheckType(\"text\");\r\n      } else {\r\n        setPasswordCheckButtonIcon(\"eye-light-off-icon\");\r\n        setPasswordCheckType(\"password\");\r\n      }\r\n    };\r\n    // event handler: 다음 단계 버튼 클릭 이벤트 처리 //\r\n    const onNextButtonClickHandler = () => {\r\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;\r\n      const isEmailPattern = emailPattern.test(email);\r\n      if (!isEmailPattern) {\r\n        setEmailError(true);\r\n        setEmailErrorMessage(\"이메일 주소 포멧이 맞지 않습니다.\");\r\n      }\r\n      const isCheckedPassword = password.trim().length >= 8;\r\n      if (!isCheckedPassword) {\r\n        setPasswordError(true);\r\n        setPasswordErrorMessage(\"비밀번호는 8자 이상 입력해주세요.\");\r\n      }\r\n      const isEqualPassword = password === passwordCheck;\r\n      if (!isEqualPassword) {\r\n        setPasswordCheckError(true);\r\n        setPasswordCheckErrorMessage(\"비밀번호가 일치하지 않습니다.\");\r\n      }\r\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) return;\r\n      setPage(2);\r\n    };\r\n    // event handler: 이메일 키 다운 이벤트 처리 //\r\n    const onEmailKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!passwordRef.current) return;\r\n      passwordRef.current.focus();\r\n    };\r\n    // event handler: 패스워드 키 다운 이벤트 처리 //\r\n    const onPasswordKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!passwordCheckRef.current) return;\r\n      passwordCheckRef.current.focus();\r\n    };\r\n    // event handler: 패스워드 확인 키 다운 이벤트 처리 //\r\n    const onPasswordCheckKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!passwordRef.current) return;\r\n      passwordRef.current.focus();\r\n    };\r\n    // render : sign up card 컴포넌트 렌더링 //\r\n    return (\r\n      <div className=\"auth-card\">\r\n        <div className=\"auth-card-box\">\r\n          <div className=\"auth-card-top\">\r\n            <div className=\"auth-card-title-box\">\r\n              <div className=\"auth-card-title\">{\"회원가입\"}</div>\r\n              <div className=\"auth-card-page\">{`${page}/2`}</div>\r\n            </div>\r\n            <InputBox\r\n              ref={emailRef}\r\n              label=\"이메일 주소*\"\r\n              type=\"text\"\r\n              placeholder=\"이메일 주소를 입력해주세요.\"\r\n              value={email}\r\n              onChange={onEmailChangeHandler}\r\n              error={isEmailError}\r\n              message={emailErrorMessage}\r\n            />\r\n            <InputBox\r\n              ref={passwordRef}\r\n              label=\"비밀번호*\"\r\n              type={passwordType}\r\n              placeholder=\"비밀번호를 입력해주세요.\"\r\n              value={password}\r\n              onChange={onPasswordChangeHandler}\r\n              error={isPasswordError}\r\n              message={passwordErrorMessage}\r\n              icon={passwordButtonIcon}\r\n              onButtonClick={onPasswordButtonClickHandler}\r\n            />\r\n            <InputBox\r\n              ref={passwordCheckRef}\r\n              label=\"비밀번호 확인*\"\r\n              type={passwordCheckType}\r\n              placeholder=\"비밀번호를 다시 입력해주세요.\"\r\n              value={passwordCheck}\r\n              onChange={onPasswordCheckChangeHandler}\r\n              error={isPasswordCheckError}\r\n              message={passwordCheckErrorMessage}\r\n              icon={passwordCheckButtonIcon}\r\n              onButtonClick={onPasswordCheckButtonClickHandler}\r\n            />\r\n          </div>\r\n          <div className=\"auth-card-bottom\">\r\n            <div\r\n              className=\"black-large-full-button\"\r\n              onClick={onNextButtonClickHandler}\r\n            >\r\n              {\"다음 단계\"}\r\n            </div>\r\n            <div className=\"auth-description-box\">\r\n              <div className=\"auth-description\">\r\n                {\"이미 계정이 있으신가요? \"}\r\n                <span className=\"auth-description-link\">{\"로그인\"}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // render : 인증화면 컴포넌트 렌더링 //\r\n  return (\r\n    <div id=\"auth-wrapper\">\r\n      <div className=\"auth-container\">\r\n        <div className=\"auth-jumbotron-box\">\r\n          <div className=\"auth-jumbotron-contents\">\r\n            <div className=\"auth-logo-icon\"></div>\r\n            <div className=\"auth-jumbotron-text-box\">\r\n              <div className=\"auth-jumbotron-text\">{\"운동 커뮤니티\"}</div>\r\n              <div className=\"auth-jumbotron-text\">{\"Play Fit\"}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {view === \"sign-in\" && <SignInCard />}\r\n        {view === \"sign-up\" && <SignUpCard />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}