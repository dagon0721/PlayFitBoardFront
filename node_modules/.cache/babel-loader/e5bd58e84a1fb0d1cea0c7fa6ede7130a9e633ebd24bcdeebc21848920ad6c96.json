{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import\"./style.css\";import Top3Item from\"components/Top3Item\";import BoardItem from\"components/BoardItem\";import Pagination from\"components/Pagination\";import{useNavigate}from\"react-router-dom\";import{SEARCH_PATH}from\"constant\";import{getLatestBoardListRequest,getPopularListRequest,getTop3BoardListRequest}from\"apis\";import{usePagination}from\"hooks\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";// component: 메인 화면 컴포넌트 //\nexport default function Main(){// function: 네비게이트 함수 //\nconst navigate=useNavigate();// function: navigate를 이용해 상세 페이지로 이동\nconst onBoardItemClick=boardNumber=>{navigate(`/board/detail/${boardNumber}`);};//component: 메인 화면 상단 컴포넌트 //\nconst MainTop=()=>{// state: 주간 top3 게시물 리스트 상태 //\nconst[top3BoardList,setTop3BoardList]=useState([]);// function: get top 3 board list response 처리 함수 //\nconst getTop3BoardListResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code===\"DBE\")alert(\"데이터베이스 오류입니다.\");if(code!==\"SU\")return;const{top3List}=responseBody;setTop3BoardList(top3List);};// effect: 첫 마운트 시 실행될 함수 //\nuseEffect(()=>{getTop3BoardListRequest().then(getTop3BoardListResponse);},[]);// render: 메인 화면 상단 컴포넌트 렌더링 //\nreturn/*#__PURE__*/_jsx(\"div\",{id:\"main-top-wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"main-top-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"main-top-title\",children:\"Play Fit에서\\n오늘의 운동 이야기를 기록해보세요\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-top-contents-box\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"main-top-contents-title\",children:\"주간 TOP 3 게시글\"}),/*#__PURE__*/_jsx(\"div\",{className:\"main-top-contents\",children:top3BoardList.map(top3ListItem=>/*#__PURE__*/_jsx(Top3Item,{top3ListItem:top3ListItem}))})]})]})});};//component: 메인 화면 하단 컴포넌트 //\nconst MainBottom=()=>{// state: 페이지 네이션 관련 상태 //\nconst{currentPage,currentSection,viewList,viewPageList,totalSection,setCurrentPage,setCurrentSection,setTotalList}=usePagination(5);// state: 게시물 개수 상태 //\nconst[count,setCount]=useState(0);// state: 인기 검색어 리스트 상태 //\nconst[popularWordList,setPopularWordList]=useState([]);// function get latest board List Response 처리 함수 //\nconst getLatestBoardListResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code===\"DBE\")alert(\"데이터베이스 오류입니다.\");if(code!==\"SU\")return;const{latestList}=responseBody;setTotalList(latestList);setCount(latestList.length);};// function : get popular list response 처리 함수 //\nconst getPopularListResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code===\"DBE\")alert(\"데이터베이스 오류입니다.\");if(code!==\"SU\")return;const{popularWordList}=responseBody;setPopularWordList(popularWordList);};// event handler: 인기 검색어 클릭 이벤트 처리 //\nconst onPopularWordClickHandler=word=>{navigate(SEARCH_PATH(word));};// effect: 첫 마운트 시 실행될 함수 //\nuseEffect(()=>{getLatestBoardListRequest().then(getLatestBoardListResponse);getPopularListRequest().then(getPopularListResponse);},[]);// render: 메인 화면 하단 컴포넌트 렌더링 //\nreturn/*#__PURE__*/_jsx(\"div\",{id:\"main-bottom-wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"main-bottom-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"main-bottom-title\",children:\"최신 게시물\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-bottom-contents-box\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"main-bottom-current-contents\",children:viewList.map(boardListItem=>/*#__PURE__*/_jsx(\"div\",{onClick:()=>onBoardItemClick(boardListItem.boardNumber),children:/*#__PURE__*/_jsx(BoardItem,{boardListItem:boardListItem})},boardListItem.boardNumber))}),/*#__PURE__*/_jsx(\"div\",{className:\"main-bottom-popular-box\",children:/*#__PURE__*/_jsx(\"div\",{className:\"main-bottom-popular-card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"main-bottom-popular-card-box\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"main-bottom-popular-card-title\",children:\"인기 검색어\"}),/*#__PURE__*/_jsx(\"div\",{className:\"main-bottom-popular-card-contents\",children:popularWordList.map(word=>/*#__PURE__*/_jsx(\"div\",{className:\"word-badge\",onClick:()=>onPopularWordClickHandler(word),children:word}))})]})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"main-bottom-pagination-box\",children:/*#__PURE__*/_jsx(Pagination,{currentPage:currentPage,setCurrentPage:setCurrentPage,totalItems:count// 총 게시물 수\n,itemsPerPage:5// 한 페이지당 게시물 수\n})})]})});};// render: 메인 화면 컴포넌트 렌더링 //\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MainTop,{}),/*#__PURE__*/_jsx(MainBottom,{})]});}","map":{"version":3,"names":["React","useEffect","useState","Top3Item","BoardItem","Pagination","useNavigate","SEARCH_PATH","getLatestBoardListRequest","getPopularListRequest","getTop3BoardListRequest","usePagination","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Main","navigate","onBoardItemClick","boardNumber","MainTop","top3BoardList","setTop3BoardList","getTop3BoardListResponse","responseBody","code","alert","top3List","then","id","children","className","map","top3ListItem","MainBottom","currentPage","currentSection","viewList","viewPageList","totalSection","setCurrentPage","setCurrentSection","setTotalList","count","setCount","popularWordList","setPopularWordList","getLatestBoardListResponse","latestList","length","getPopularListResponse","onPopularWordClickHandler","word","boardListItem","onClick","totalItems","itemsPerPage"],"sources":["C:/Springboot-React-ts/board-front/src/views/Main/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport Top3Item from \"components/Top3Item\";\r\nimport { BoardListItem } from \"types/interface\";\r\nimport { latestBoardListMock, top3BoardListMock } from \"mocks\";\r\nimport BoardItem from \"components/BoardItem\";\r\nimport Pagination from \"components/Pagination\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { SEARCH_PATH } from \"constant\";\r\nimport {\r\n  getLatestBoardListRequest,\r\n  getPopularListRequest,\r\n  getTop3BoardListRequest,\r\n} from \"apis\";\r\nimport {\r\n  GetLatestBoardListResponseDto,\r\n  GetTop3BoardListResponseDto,\r\n} from \"apis/response/board\";\r\nimport { ResponseDto } from \"apis/response\";\r\nimport { usePagination } from \"hooks\";\r\nimport PaginationDetail from \"components/PaginationDetail\";\r\nimport { GetPopularListResponseDto } from \"apis/search\";\r\n\r\n// component: 메인 화면 컴포넌트 //\r\nexport default function Main() {\r\n  // function: 네비게이트 함수 //\r\n  const navigate = useNavigate();\r\n  // function: navigate를 이용해 상세 페이지로 이동\r\n  const onBoardItemClick = (boardNumber: number) => {\r\n    navigate(`/board/detail/${boardNumber}`);\r\n  };\r\n  //component: 메인 화면 상단 컴포넌트 //\r\n  const MainTop = () => {\r\n    // state: 주간 top3 게시물 리스트 상태 //\r\n    const [top3BoardList, setTop3BoardList] = useState<BoardListItem[]>([]);\r\n\r\n    // function: get top 3 board list response 처리 함수 //\r\n    const getTop3BoardListResponse = (\r\n      responseBody: GetTop3BoardListResponseDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n      if (code !== \"SU\") return;\r\n\r\n      const { top3List } = responseBody as GetTop3BoardListResponseDto;\r\n      setTop3BoardList(top3List);\r\n    };\r\n\r\n    // effect: 첫 마운트 시 실행될 함수 //\r\n    useEffect(() => {\r\n      getTop3BoardListRequest().then(getTop3BoardListResponse);\r\n    }, []);\r\n\r\n    // render: 메인 화면 상단 컴포넌트 렌더링 //\r\n    return (\r\n      <div id=\"main-top-wrapper\">\r\n        <div className=\"main-top-container\">\r\n          <div className=\"main-top-title\">\r\n            {\"Play Fit에서\\n오늘의 운동 이야기를 기록해보세요\"}\r\n          </div>\r\n          <div className=\"main-top-contents-box\">\r\n            <div className=\"main-top-contents-title\">{\"주간 TOP 3 게시글\"}</div>\r\n            <div className=\"main-top-contents\">\r\n              {top3BoardList.map((top3ListItem) => (\r\n                <Top3Item top3ListItem={top3ListItem} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  //component: 메인 화면 하단 컴포넌트 //\r\n  const MainBottom = () => {\r\n    // state: 페이지 네이션 관련 상태 //\r\n    const {\r\n      currentPage,\r\n      currentSection,\r\n      viewList,\r\n      viewPageList,\r\n      totalSection,\r\n      setCurrentPage,\r\n      setCurrentSection,\r\n      setTotalList,\r\n    } = usePagination<BoardListItem>(5);\r\n    // state: 게시물 개수 상태 //\r\n    const [count, setCount] = useState<number>(0);\r\n    // state: 인기 검색어 리스트 상태 //\r\n    const [popularWordList, setPopularWordList] = useState<string[]>([]);\r\n\r\n    // function get latest board List Response 처리 함수 //\r\n    const getLatestBoardListResponse = (\r\n      responseBody: GetLatestBoardListResponseDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n      if (code !== \"SU\") return;\r\n\r\n      const { latestList } = responseBody as GetLatestBoardListResponseDto;\r\n      setTotalList(latestList);\r\n      setCount(latestList.length);\r\n    };\r\n\r\n    // function : get popular list response 처리 함수 //\r\n    const getPopularListResponse = (\r\n      responseBody: GetPopularListResponseDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n      if (code !== \"SU\") return;\r\n\r\n      const { popularWordList } = responseBody as GetPopularListResponseDto;\r\n      setPopularWordList(popularWordList);\r\n    };\r\n\r\n    // event handler: 인기 검색어 클릭 이벤트 처리 //\r\n    const onPopularWordClickHandler = (word: string) => {\r\n      navigate(SEARCH_PATH(word));\r\n    };\r\n\r\n    // effect: 첫 마운트 시 실행될 함수 //\r\n    useEffect(() => {\r\n      getLatestBoardListRequest().then(getLatestBoardListResponse);\r\n      getPopularListRequest().then(getPopularListResponse);\r\n    }, []);\r\n\r\n    // render: 메인 화면 하단 컴포넌트 렌더링 //\r\n    return (\r\n      <div id=\"main-bottom-wrapper\">\r\n        <div className=\"main-bottom-container\">\r\n          <div className=\"main-bottom-title\">{\"최신 게시물\"}</div>\r\n          <div className=\"main-bottom-contents-box\">\r\n            <div className=\"main-bottom-current-contents\">\r\n              {viewList.map((boardListItem) => (\r\n                <div\r\n                  key={boardListItem.boardNumber}\r\n                  onClick={() => onBoardItemClick(boardListItem.boardNumber)}\r\n                >\r\n                  <BoardItem boardListItem={boardListItem} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"main-bottom-popular-box\">\r\n              <div className=\"main-bottom-popular-card\">\r\n                <div className=\"main-bottom-popular-card-box\">\r\n                  <div className=\"main-bottom-popular-card-title\">\r\n                    {\"인기 검색어\"}\r\n                  </div>\r\n                  <div className=\"main-bottom-popular-card-contents\">\r\n                    {popularWordList.map((word) => (\r\n                      <div\r\n                        className=\"word-badge\"\r\n                        onClick={() => onPopularWordClickHandler(word)}\r\n                      >\r\n                        {word}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"main-bottom-pagination-box\">\r\n            <Pagination\r\n              currentPage={currentPage}\r\n              setCurrentPage={setCurrentPage}\r\n              totalItems={count} // 총 게시물 수\r\n              itemsPerPage={5} // 한 페이지당 게시물 수\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // render: 메인 화면 컴포넌트 렌더링 //\r\n  return (\r\n    <>\r\n      <MainTop />\r\n      <MainBottom />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}