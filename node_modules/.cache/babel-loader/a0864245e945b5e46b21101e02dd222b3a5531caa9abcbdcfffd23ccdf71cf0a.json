{"ast":null,"code":"export const convertUrlToFile=async url=>{const response=await fetch(url);const data=await response.blob();const extend=url.split(\".\").pop();const fileName=url.split(\"/\").pop();const meta={type:`image/${extend}`};return new File([data],fileName,meta);};export const convertUrlsToFile=async urls=>{const files=[];for(const url of urls){const file=await convertUrlToFile(url);files.push(file);}return files;};","map":{"version":3,"names":["convertUrlToFile","url","response","fetch","data","blob","extend","split","pop","fileName","meta","type","File","convertUrlsToFile","urls","files","file","push"],"sources":["C:/Springboot-React-ts/board-front/src/utils/index.ts"],"sourcesContent":["export const convertUrlToFile = async (url: string) => {\r\n  const response = await fetch(url);\r\n  const data = await response.blob();\r\n  const extend = url.split(\".\").pop();\r\n  const fileName = url.split(\"/\").pop();\r\n  const meta = { type: `image/${extend}` };\r\n\r\n  return new File([data], fileName as string, meta);\r\n};\r\n\r\nexport const convertUrlsToFile = async (urls: string[]) => {\r\n  const files: File[] = [];\r\n  for (const url of urls) {\r\n    const file = await convertUrlToFile(url);\r\n    files.push(file);\r\n  }\r\n  return files;\r\n};\r\n"],"mappings":"AAAA,MAAO,MAAM,CAAAA,gBAAgB,CAAG,KAAO,CAAAC,GAAW,EAAK,CACrD,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACF,GAAG,CAAC,CACjC,KAAM,CAAAG,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAClC,KAAM,CAAAC,MAAM,CAAGL,GAAG,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CACnC,KAAM,CAAAC,QAAQ,CAAGR,GAAG,CAACM,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CACrC,KAAM,CAAAE,IAAI,CAAG,CAAEC,IAAI,CAAE,SAASL,MAAM,EAAG,CAAC,CAExC,MAAO,IAAI,CAAAM,IAAI,CAAC,CAACR,IAAI,CAAC,CAAEK,QAAQ,CAAYC,IAAI,CAAC,CACnD,CAAC,CAED,MAAO,MAAM,CAAAG,iBAAiB,CAAG,KAAO,CAAAC,IAAc,EAAK,CACzD,KAAM,CAAAC,KAAa,CAAG,EAAE,CACxB,IAAK,KAAM,CAAAd,GAAG,GAAI,CAAAa,IAAI,CAAE,CACtB,KAAM,CAAAE,IAAI,CAAG,KAAM,CAAAhB,gBAAgB,CAACC,GAAG,CAAC,CACxCc,KAAK,CAACE,IAAI,CAACD,IAAI,CAAC,CAClB,CACA,MAAO,CAAAD,KAAK,CACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}