{"ast":null,"code":"import React,{useEffect,useRef,useState}from\"react\";import\"./style.css\";import FavoriteItem from\"components/FavoriteItem\";import CommentItem from\"components/CommentItem\";import Pagination from\"components/PaginationDetail\";import defaultProfileImage from\"assets/image/default-profile-image.png\";import{useLoginUserStore}from\"stores\";import{useNavigate,useParams}from\"react-router-dom\";import{MAIN_PATH,USER_PATH}from\"constant\";import{deleteBoardRequest,getBoardRequest,getCommentListRequest,getFavoriteListRequest,increaseViewCountRequest,postCommentRequest,putFavoriteRequest}from\"apis\";import dayjs from\"dayjs\";import utc from\"dayjs/plugin/utc\";import timezone from\"dayjs/plugin/timezone\";import{useCookies}from\"react-cookie\";import{usePagination}from\"hooks\";// component: 게시물 상세 화면 컴포넌트 //\nimport{Fragment as _Fragment,jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function BoardDetail(){// state: 게시물 번호 path variable 상태 //\nconst{boardNumber}=useParams();// state: 로그인 유저 상태 //\nconst{loginUser}=useLoginUserStore();// state: 쿠키 상태 //\nconst[cookies,setCookies]=useCookies();// function: 네비게이트 함수 //\nconst navigator=useNavigate();// function: increaase view count response 처리 함수 //\nconst increaseViewCountResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code===\"NB\")alert(\"존재하지 않는 게시물입니다.\");if(code===\"DBE\")alert(\"데이터베이스 오류입니다.\");};// component: 게시물 상세 상단 컴포넌트 //\nconst BoardDetailTop=()=>{// state: 작성자 여부 상태 //\nconst[isWriter,setWriter]=useState(false);// state: 닉네임 버튼 상태 //\nconst[board,setBoard]=useState(null);// state: more 버튼 상태 //\nconst[showMore,setShowMore]=useState(false);// function : 작성일 포멧 변경 함수 //\ndayjs.extend(utc);dayjs.extend(timezone);const getWriteDatetimeFormat=()=>{if(!board)return\"\";console.log(board.writeDatetime);const date=dayjs(board.writeDatetime).subtract(9,\"hour\");return date.format(\"YYYY. MM. DD.\");};// function : get board response 처리 함수 //x\nconst getBoardResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code===\"NB\")alert(\"존재하지 않는 게시물입니다.\");if(code===\"DBE\")alert(\"데이터베이스 오류입니다.\");if(code!==\"SU\"){navigator(MAIN_PATH());return;}const board={...responseBody};setBoard(board);if(!loginUser){setWriter(false);return;}const isWriter=loginUser.email===board.writerEmail;setWriter(isWriter);};// function: delete board response 처리 함수 //\nconst deleteBoardResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code===\"VF\")alert(\"잘못된 접근입니다.\");if(code===\"NU\")alert(\"존재하지 않는 유저입니다.\");if(code===\"NB\")alert(\"존재하지 않는 게시물입니다.\");if(code===\"AF\")alert(\"인증에 실패했습니다.\");if(code===\"NP\")alert(\"권한이 없습니다.\");if(code===\"DBE\")alert(\"데이터베이스 오류입니다.\");if(code!==\"SU\")return;navigator(MAIN_PATH());};// event handler: 닉네임 클릭 이벤트 처리 //\nconst onNicknameClickHandler=()=>{if(!board)return;navigator(USER_PATH(board.writerEmail));};// event handler: more 버튼 클릭 이벤트 처리 //\nconst onMoreButtonClickHandler=()=>{setShowMore(!showMore);};// event handler: 수정 버튼 클릭 이벤트 처리 //\nconst onUpdateButtonClickHandler=()=>{if(!board||!loginUser)return;if(loginUser.email!==board.writerEmail)return;const boardNumber=board.boardNumber;// 올바른 boardNumber 가져오기\nif(boardNumber){navigator(`/board/update/${boardNumber}`);}else{console.error(\"Invalid board number:\",boardNumber);}};// event handler: 삭제 버튼 클릭 이벤트 처리 //\nconst onDeleteButtonClickHandler=()=>{if(!boardNumber||!board||!loginUser||!cookies.accessToken)return;if(loginUser.email!==board.writerEmail)return;deleteBoardRequest(boardNumber,cookies.accessToken).then(deleteBoardResponse);};// effect: 게시물 번호 path variable이 바뀔때 마다 게시물 불러오기 //\nuseEffect(()=>{if(!boardNumber){navigator(MAIN_PATH());return;}getBoardRequest(boardNumber).then(getBoardResponse);},[boardNumber]);// render: 게시물 상세 상단 컴포넌트 렌더링 //\nif(!board)return/*#__PURE__*/_jsx(_Fragment,{});return/*#__PURE__*/_jsxs(\"div\",{id:\"board-detail-top\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-top-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-title\",children:board.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-top-sub-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-write-info-box\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-writer-profile-image\",style:{backgroundImage:`url(${board.writerProfileImage?board.writerProfileImage:defaultProfileImage})`}}),/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-writer-nickname\",onClick:onNicknameClickHandler,children:board.writerNickname}),/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-info-divider\",children:\"|\"}),/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-write-date\",children:getWriteDatetimeFormat()})]}),isWriter&&/*#__PURE__*/_jsx(\"div\",{className:\"icon-button\",onClick:onMoreButtonClickHandler,children:/*#__PURE__*/_jsx(\"div\",{className:\"icon more-icon\"})}),showMore&&/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-more-box\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-update-button\",onClick:onUpdateButtonClickHandler,children:\"수정\"}),/*#__PURE__*/_jsx(\"div\",{className:\"divider\"}),/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-delete-button\",onClick:onDeleteButtonClickHandler,children:\"삭제\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"divider\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-top-main\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-main-text\",children:board.content}),board.boardImageList.map(image=>/*#__PURE__*/_jsx(\"img\",{className:\"board-detail-main-image\",src:image}))]})]});};// component: 게시물 상세 하단 컴포넌트 //\nconst BoardDetailBottom=()=>{// state: 댓글 textarea 참조 상태 //\nconst commentRef=useRef(null);// state: 페이지네이션 관련 상태 //\nconst{currentPage,currentSection,viewList,viewPageList,totalSection,setCurrentPage,setCurrentSection,setTotalList}=usePagination(3);// state: 좋아요 리스트 상태 //\nconst[favoriteList,setFavoriteList]=useState([]);// state: 좋아요 상태 //\nconst[isFavorite,setFavorite]=useState(false);// state: 좋아요 상자 보기 상태 //\nconst[showFavorite,setShowFavorite]=useState(false);// state: 댓글 상자 보기 상태 //\nconst[showComment,setShowComment]=useState(false);// state: 댓글 상태 //\nconst[comment,setComment]=useState(\"\");// state: 전체 댓글 개수 상태 //\nconst[totalCommentCount,setTotalCommentCount]=useState(0);// function: get favorite list response 처리 함수 //\nconst getFavoriteListResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code===\"NB\")alert(\"존재하지 않는 게시물입니다.\");if(code===\"DBE\")alert(\"데이터베이스 오류입니다.\");if(code!==\"SU\")return;const{favoriteList}=responseBody;setFavoriteList(favoriteList);if(!loginUser){setFavorite(false);return;}const isFavorite=favoriteList.findIndex(favorite=>favorite.email===loginUser.email)!==-1;setFavorite(isFavorite);};// function get Comment list response 처리 함수 //\nconst getCommentListResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code===\"NB\")alert(\"존재하지 않는 게시물입니다.\");if(code===\"DBE\")alert(\"데이터베이스 오류입니다.\");if(code!==\"SU\")return;const{commentList}=responseBody;setTotalList(commentList);setTotalCommentCount(commentList.length);};// function: put favorite response 처리 함수 //\nconst putFavoriteResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code===\"VF\")alert(\"잘못된 접근입니다.\");if(code===\"NU\")alert(\"존재하지 않는 유저입니다.\");if(code===\"NB\")alert(\"존재하지 않는 게시물입니다.\");if(code===\"AF\")alert(\"인증에 실패했습니다.\");if(code===\"DBE\")alert(\"데이터베이스 오류입니다.\");if(code!==\"SU\")return;if(!boardNumber)return;getFavoriteListRequest(boardNumber).then(getFavoriteListResponse);};// function: post comment response 처리 함수 //\nconst postCommentResponse=responseBody=>{if(!responseBody)return;const{code}=responseBody;if(code===\"VF\")alert(\"잘못된 접근입니다.\");if(code===\"NU\")alert(\"존재하지 않는 유저입니다.\");if(code===\"NB\")alert(\"존재하지 않는 게시물입니다.\");if(code===\"AF\")alert(\"인증에 실패했습니다.\");if(code===\"DBE\")alert(\"데이터베이스 오류입니다.\");if(code!==\"SU\")return;setComment(\"\");if(!boardNumber)return;getCommentListRequest(boardNumber).then(getCommentListResponse);};// event handler: 좋아요 클릭 이벤트 처리 //\nconst onFavoriteClickHandler=()=>{if(!loginUser||!cookies.accessToken||!boardNumber)return;putFavoriteRequest(boardNumber,cookies.accessToken).then(putFavoriteResponse);};// event handler: 좋아요 상자 보기 클릭 이벤트 처리 //\nconst onShowFavoriteClickHandler=()=>{setShowFavorite(!showFavorite);};// event handler: 댓글 상자 보기 클릭 이벤트 처리 //\nconst onShowCommentClickHandler=()=>{setShowComment(!showComment);};// event handler: 댓글 작성 버튼 클릭 이벤트 처리 //\nconst onCommentSubmitButtonClickHandler=()=>{if(!comment||!boardNumber||!loginUser||!cookies.accessToken)return;const requestBody={content:comment};postCommentRequest(boardNumber,requestBody,cookies.accessToken).then(postCommentResponse);};// event handler: 댓글 변경 이벤트 처리 //\nconst onCommentChangeHandler=event=>{const{value}=event.target;setComment(value);if(!commentRef.current)return;commentRef.current.style.height=\"auto\";commentRef.current.style.height=`${commentRef.current.scrollHeight}px`;};// effect: 게시물 번호 path variable이 바뀔때마다 좋아요 댓글 리스트 불러오기 //\nuseEffect(()=>{if(!boardNumber)return;getFavoriteListRequest(boardNumber).then(getFavoriteListResponse);getCommentListRequest(boardNumber).then(getCommentListResponse);},[boardNumber]);// render: 게시물 상세 하단 컴포넌트 렌더링 //\nreturn/*#__PURE__*/_jsxs(\"div\",{id:\"board-detail-bottom\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-bottom-button-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-bottom-button-group\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"icon-button\",onClick:onFavoriteClickHandler,children:isFavorite?/*#__PURE__*/_jsx(\"div\",{className:\"icon favorite-fill-icon\"}):/*#__PURE__*/_jsx(\"div\",{className:\"icon favorite-light-icon\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-bottom-button-text\",children:`좋아요 ${favoriteList.length}`}),/*#__PURE__*/_jsx(\"div\",{className:\"icon-button\",onClick:onShowFavoriteClickHandler,children:showFavorite?/*#__PURE__*/_jsx(\"div\",{className:\"icon up-light-icon\"}):/*#__PURE__*/_jsx(\"div\",{className:\"icon down-light-icon\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-bottom-button-group\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"icon-button\",children:/*#__PURE__*/_jsx(\"div\",{className:\"icon comment-icon\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-bottom-button-text\",children:`댓글 ${totalCommentCount}`}),/*#__PURE__*/_jsx(\"div\",{className:\"icon-button\",onClick:onShowCommentClickHandler,children:showComment?/*#__PURE__*/_jsx(\"div\",{className:\"icon up-light-icon\"}):/*#__PURE__*/_jsx(\"div\",{className:\"icon down-light-icon\"})})]})]}),showFavorite&&/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-bottom-favorite-box\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-bottom-favorite-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-bottom-favorite-title\",children:[\"좋아요 \",/*#__PURE__*/_jsx(\"span\",{className:\"emphasis\",children:favoriteList.length})]}),/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-bottom-favorite-contents\",children:favoriteList.map(item=>/*#__PURE__*/_jsx(FavoriteItem,{favoriteListItem:item}))})]})}),showComment&&/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-bottom-comment-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-bottom-comment-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-bottom-comment-title\",children:[\"댓글 \",/*#__PURE__*/_jsx(\"span\",{className:\"emphasis\",children:totalCommentCount})]}),/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-bottom-comment-list-container\",children:viewList.map(item=>/*#__PURE__*/_jsx(CommentItem,{commentListItem:item}))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"divider\"}),/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-bottom-comment-pagination-box\",children:/*#__PURE__*/_jsx(Pagination,{currentPage:currentPage,currentSection:currentSection,setCurrentPage:setCurrentPage,setCurrentSection:setCurrentSection,viewPageList:viewPageList,totalSection:totalSection})}),loginUser!==null&&/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-bottom-comment-input-box\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-bottom-comment-input-container\",children:[/*#__PURE__*/_jsx(\"textarea\",{ref:commentRef,className:\"board-detail-bottom-comment-textarea\",placeholder:\"\\uB313\\uAE00\\uC744 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694.\",value:comment,onChange:onCommentChangeHandler}),/*#__PURE__*/_jsx(\"div\",{className:\"board-detail-bottom-comment-button-box\",children:/*#__PURE__*/_jsx(\"div\",{className:comment===\"\"?\"disable-button\":\"black-button\",onClick:onCommentSubmitButtonClickHandler,children:\"댓글달기\"})})]})})]})]});};// effect: 게시물 번호 path variable이 바뀔 때마 게시물 조회 수 증가 //\nlet effectFlag=false;useEffect(()=>{if(!boardNumber)return;if(effectFlag){return;}increaseViewCountRequest(boardNumber).then(increaseViewCountResponse);effectFlag=true;},[boardNumber]);// render: 게시물 상세 화면 컴포넌트 렌더링 //\nreturn/*#__PURE__*/_jsx(\"div\",{id:\"board-detail-wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"board-detail-container\",children:[/*#__PURE__*/_jsx(BoardDetailTop,{}),/*#__PURE__*/_jsx(BoardDetailBottom,{})]})});}","map":{"version":3,"names":["React","useEffect","useRef","useState","FavoriteItem","CommentItem","Pagination","defaultProfileImage","useLoginUserStore","useNavigate","useParams","MAIN_PATH","USER_PATH","deleteBoardRequest","getBoardRequest","getCommentListRequest","getFavoriteListRequest","increaseViewCountRequest","postCommentRequest","putFavoriteRequest","dayjs","utc","timezone","useCookies","usePagination","Fragment","_Fragment","jsx","_jsx","jsxs","_jsxs","BoardDetail","boardNumber","loginUser","cookies","setCookies","navigator","increaseViewCountResponse","responseBody","code","alert","BoardDetailTop","isWriter","setWriter","board","setBoard","showMore","setShowMore","extend","getWriteDatetimeFormat","console","log","writeDatetime","date","subtract","format","getBoardResponse","email","writerEmail","deleteBoardResponse","onNicknameClickHandler","onMoreButtonClickHandler","onUpdateButtonClickHandler","error","onDeleteButtonClickHandler","accessToken","then","id","children","className","title","style","backgroundImage","writerProfileImage","onClick","writerNickname","content","boardImageList","map","image","src","BoardDetailBottom","commentRef","currentPage","currentSection","viewList","viewPageList","totalSection","setCurrentPage","setCurrentSection","setTotalList","favoriteList","setFavoriteList","isFavorite","setFavorite","showFavorite","setShowFavorite","showComment","setShowComment","comment","setComment","totalCommentCount","setTotalCommentCount","getFavoriteListResponse","findIndex","favorite","getCommentListResponse","commentList","length","putFavoriteResponse","postCommentResponse","onFavoriteClickHandler","onShowFavoriteClickHandler","onShowCommentClickHandler","onCommentSubmitButtonClickHandler","requestBody","onCommentChangeHandler","event","value","target","current","height","scrollHeight","item","favoriteListItem","commentListItem","ref","placeholder","onChange","effectFlag"],"sources":["C:/Springboot-React-ts/board-front/src/views/Board/Detail/index.tsx"],"sourcesContent":["import React, { ChangeEvent, useEffect, useRef, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport FavoriteItem from \"components/FavoriteItem\";\r\nimport { Board, CommentListItem, FavoriteListItem } from \"types/interface\";\r\nimport { commentListMock, favoriteListMock } from \"mocks\";\r\nimport CommentItem from \"components/CommentItem\";\r\nimport Pagination from \"components/PaginationDetail\";\r\nimport defaultProfileImage from \"assets/image/default-profile-image.png\";\r\nimport { useLoginUserStore } from \"stores\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { BOARD_PATH, BOARD_UPDATE_PATH, MAIN_PATH, USER_PATH } from \"constant\";\r\nimport {\r\n  deleteBoardRequest,\r\n  getBoardRequest,\r\n  getCommentListRequest,\r\n  getFavoriteListRequest,\r\n  increaseViewCountRequest,\r\n  postCommentRequest,\r\n  putFavoriteRequest,\r\n} from \"apis\";\r\nimport GetBoardResponseDto from \"apis/response/board/get-board.response.dto\";\r\nimport { ResponseDto } from \"apis/response\";\r\nimport {\r\n  DeleteBoardResponseDto,\r\n  GetCommentListResponseDto,\r\n  GetFavoriteListResponseDto,\r\n  IncreaseViewCountResponseDto,\r\n  PostCommentResponseDto,\r\n  PutFavoriteResponseDto,\r\n} from \"apis/response/board\";\r\n\r\nimport dayjs from \"dayjs\";\r\nimport utc from \"dayjs/plugin/utc\";\r\nimport timezone from \"dayjs/plugin/timezone\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { PostCommentRequestDto } from \"apis/request/board\";\r\nimport { usePagination } from \"hooks\";\r\n\r\n// component: 게시물 상세 화면 컴포넌트 //\r\nexport default function BoardDetail() {\r\n  // state: 게시물 번호 path variable 상태 //\r\n  const { boardNumber } = useParams();\r\n  // state: 로그인 유저 상태 //\r\n  const { loginUser } = useLoginUserStore();\r\n  // state: 쿠키 상태 //\r\n  const [cookies, setCookies] = useCookies();\r\n\r\n  // function: 네비게이트 함수 //\r\n  const navigator = useNavigate();\r\n  // function: increaase view count response 처리 함수 //\r\n  const increaseViewCountResponse = (\r\n    responseBody: IncreaseViewCountResponseDto | ResponseDto | null\r\n  ) => {\r\n    if (!responseBody) return;\r\n    const { code } = responseBody;\r\n    if (code === \"NB\") alert(\"존재하지 않는 게시물입니다.\");\r\n    if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n  };\r\n\r\n  // component: 게시물 상세 상단 컴포넌트 //\r\n  const BoardDetailTop = () => {\r\n    // state: 작성자 여부 상태 //\r\n    const [isWriter, setWriter] = useState<boolean>(false);\r\n    // state: 닉네임 버튼 상태 //\r\n    const [board, setBoard] = useState<Board | null>(null);\r\n    // state: more 버튼 상태 //\r\n    const [showMore, setShowMore] = useState<boolean>(false);\r\n\r\n    // function : 작성일 포멧 변경 함수 //\r\n    dayjs.extend(utc);\r\n    dayjs.extend(timezone);\r\n\r\n    const getWriteDatetimeFormat = () => {\r\n      if (!board) return \"\";\r\n      console.log(board.writeDatetime);\r\n\r\n      const date = dayjs(board.writeDatetime).subtract(9, \"hour\");\r\n      return date.format(\"YYYY. MM. DD.\");\r\n    };\r\n\r\n    // function : get board response 처리 함수 //x\r\n    const getBoardResponse = (\r\n      responseBody: GetBoardResponseDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === \"NB\") alert(\"존재하지 않는 게시물입니다.\");\r\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n      if (code !== \"SU\") {\r\n        navigator(MAIN_PATH());\r\n        return;\r\n      }\r\n      const board: Board = { ...(responseBody as GetBoardResponseDto) };\r\n      setBoard(board);\r\n\r\n      if (!loginUser) {\r\n        setWriter(false);\r\n        return;\r\n      }\r\n      const isWriter = loginUser.email === board.writerEmail;\r\n      setWriter(isWriter);\r\n    };\r\n\r\n    // function: delete board response 처리 함수 //\r\n    const deleteBoardResponse = (\r\n      responseBody: DeleteBoardResponseDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === \"VF\") alert(\"잘못된 접근입니다.\");\r\n      if (code === \"NU\") alert(\"존재하지 않는 유저입니다.\");\r\n      if (code === \"NB\") alert(\"존재하지 않는 게시물입니다.\");\r\n      if (code === \"AF\") alert(\"인증에 실패했습니다.\");\r\n      if (code === \"NP\") alert(\"권한이 없습니다.\");\r\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n      if (code !== \"SU\") return;\r\n\r\n      navigator(MAIN_PATH());\r\n    };\r\n\r\n    // event handler: 닉네임 클릭 이벤트 처리 //\r\n    const onNicknameClickHandler = () => {\r\n      if (!board) return;\r\n      navigator(USER_PATH(board.writerEmail));\r\n    };\r\n\r\n    // event handler: more 버튼 클릭 이벤트 처리 //\r\n    const onMoreButtonClickHandler = () => {\r\n      setShowMore(!showMore);\r\n    };\r\n\r\n    // event handler: 수정 버튼 클릭 이벤트 처리 //\r\n    const onUpdateButtonClickHandler = () => {\r\n      if (!board || !loginUser) return;\r\n      if (loginUser.email !== board.writerEmail) return;\r\n      const boardNumber = board.boardNumber; // 올바른 boardNumber 가져오기\r\n      if (boardNumber) {\r\n        navigator(`/board/update/${boardNumber}`);\r\n      } else {\r\n        console.error(\"Invalid board number:\", boardNumber);\r\n      }\r\n    };\r\n\r\n    // event handler: 삭제 버튼 클릭 이벤트 처리 //\r\n    const onDeleteButtonClickHandler = () => {\r\n      if (!boardNumber || !board || !loginUser || !cookies.accessToken) return;\r\n      if (loginUser.email !== board.writerEmail) return;\r\n\r\n      deleteBoardRequest(boardNumber, cookies.accessToken).then(\r\n        deleteBoardResponse\r\n      );\r\n    };\r\n\r\n    // effect: 게시물 번호 path variable이 바뀔때 마다 게시물 불러오기 //\r\n    useEffect(() => {\r\n      if (!boardNumber) {\r\n        navigator(MAIN_PATH());\r\n        return;\r\n      }\r\n      getBoardRequest(boardNumber).then(getBoardResponse);\r\n    }, [boardNumber]);\r\n    // render: 게시물 상세 상단 컴포넌트 렌더링 //\r\n    if (!board) return <></>;\r\n    return (\r\n      <div id=\"board-detail-top\">\r\n        <div className=\"board-detail-top-header\">\r\n          <div className=\"board-detail-title\">{board.title}</div>\r\n          <div className=\"board-detail-top-sub-box\">\r\n            <div className=\"board-detail-write-info-box\">\r\n              <div\r\n                className=\"board-detail-writer-profile-image\"\r\n                style={{\r\n                  backgroundImage: `url(${\r\n                    board.writerProfileImage\r\n                      ? board.writerProfileImage\r\n                      : defaultProfileImage\r\n                  })`,\r\n                }}\r\n              ></div>\r\n              <div\r\n                className=\"board-detail-writer-nickname\"\r\n                onClick={onNicknameClickHandler}\r\n              >\r\n                {board.writerNickname}\r\n              </div>\r\n              <div className=\"board-detail-info-divider\">{\"|\"}</div>\r\n              <div className=\"board-detail-write-date\">\r\n                {getWriteDatetimeFormat()}\r\n              </div>\r\n            </div>\r\n            {isWriter && (\r\n              <div className=\"icon-button\" onClick={onMoreButtonClickHandler}>\r\n                <div className=\"icon more-icon\"></div>\r\n              </div>\r\n            )}\r\n            {showMore && (\r\n              <div className=\"board-detail-more-box\">\r\n                <div\r\n                  className=\"board-detail-update-button\"\r\n                  onClick={onUpdateButtonClickHandler}\r\n                >\r\n                  {\"수정\"}\r\n                </div>\r\n                <div className=\"divider\"></div>\r\n                <div\r\n                  className=\"board-detail-delete-button\"\r\n                  onClick={onDeleteButtonClickHandler}\r\n                >\r\n                  {\"삭제\"}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"divider\"></div>\r\n        <div className=\"board-detail-top-main\">\r\n          <div className=\"board-detail-main-text\">{board.content}</div>\r\n          {board.boardImageList.map((image) => (\r\n            <img className=\"board-detail-main-image\" src={image} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // component: 게시물 상세 하단 컴포넌트 //\r\n  const BoardDetailBottom = () => {\r\n    // state: 댓글 textarea 참조 상태 //\r\n    const commentRef = useRef<HTMLTextAreaElement | null>(null);\r\n    // state: 페이지네이션 관련 상태 //\r\n    const {\r\n      currentPage,\r\n      currentSection,\r\n      viewList,\r\n      viewPageList,\r\n      totalSection,\r\n      setCurrentPage,\r\n      setCurrentSection,\r\n      setTotalList,\r\n    } = usePagination<CommentListItem>(3);\r\n    // state: 좋아요 리스트 상태 //\r\n    const [favoriteList, setFavoriteList] = useState<FavoriteListItem[]>([]);\r\n    // state: 좋아요 상태 //\r\n    const [isFavorite, setFavorite] = useState<boolean>(false);\r\n    // state: 좋아요 상자 보기 상태 //\r\n    const [showFavorite, setShowFavorite] = useState<boolean>(false);\r\n    // state: 댓글 상자 보기 상태 //\r\n    const [showComment, setShowComment] = useState<boolean>(false);\r\n    // state: 댓글 상태 //\r\n    const [comment, setComment] = useState<string>(\"\");\r\n    // state: 전체 댓글 개수 상태 //\r\n    const [totalCommentCount, setTotalCommentCount] = useState<number>(0);\r\n\r\n    // function: get favorite list response 처리 함수 //\r\n    const getFavoriteListResponse = (\r\n      responseBody: GetFavoriteListResponseDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === \"NB\") alert(\"존재하지 않는 게시물입니다.\");\r\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n      if (code !== \"SU\") return;\r\n\r\n      const { favoriteList } = responseBody as GetFavoriteListResponseDto;\r\n      setFavoriteList(favoriteList);\r\n      if (!loginUser) {\r\n        setFavorite(false);\r\n        return;\r\n      }\r\n      const isFavorite =\r\n        favoriteList.findIndex(\r\n          (favorite) => favorite.email === loginUser.email\r\n        ) !== -1;\r\n      setFavorite(isFavorite);\r\n    };\r\n\r\n    // function get Comment list response 처리 함수 //\r\n\r\n    const getCommentListResponse = (\r\n      responseBody: GetCommentListResponseDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === \"NB\") alert(\"존재하지 않는 게시물입니다.\");\r\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n      if (code !== \"SU\") return;\r\n\r\n      const { commentList } = responseBody as GetCommentListResponseDto;\r\n      setTotalList(commentList);\r\n      setTotalCommentCount(commentList.length);\r\n    };\r\n\r\n    // function: put favorite response 처리 함수 //\r\n    const putFavoriteResponse = (\r\n      responseBody: PutFavoriteResponseDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === \"VF\") alert(\"잘못된 접근입니다.\");\r\n      if (code === \"NU\") alert(\"존재하지 않는 유저입니다.\");\r\n      if (code === \"NB\") alert(\"존재하지 않는 게시물입니다.\");\r\n      if (code === \"AF\") alert(\"인증에 실패했습니다.\");\r\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n      if (code !== \"SU\") return;\r\n\r\n      if (!boardNumber) return;\r\n      getFavoriteListRequest(boardNumber).then(getFavoriteListResponse);\r\n    };\r\n\r\n    // function: post comment response 처리 함수 //\r\n    const postCommentResponse = (\r\n      responseBody: PostCommentResponseDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === \"VF\") alert(\"잘못된 접근입니다.\");\r\n      if (code === \"NU\") alert(\"존재하지 않는 유저입니다.\");\r\n      if (code === \"NB\") alert(\"존재하지 않는 게시물입니다.\");\r\n      if (code === \"AF\") alert(\"인증에 실패했습니다.\");\r\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n      if (code !== \"SU\") return;\r\n\r\n      setComment(\"\");\r\n      if (!boardNumber) return;\r\n      getCommentListRequest(boardNumber).then(getCommentListResponse);\r\n    };\r\n\r\n    // event handler: 좋아요 클릭 이벤트 처리 //\r\n    const onFavoriteClickHandler = () => {\r\n      if (!loginUser || !cookies.accessToken || !boardNumber) return;\r\n      putFavoriteRequest(boardNumber, cookies.accessToken).then(\r\n        putFavoriteResponse\r\n      );\r\n    };\r\n\r\n    // event handler: 좋아요 상자 보기 클릭 이벤트 처리 //\r\n    const onShowFavoriteClickHandler = () => {\r\n      setShowFavorite(!showFavorite);\r\n    };\r\n\r\n    // event handler: 댓글 상자 보기 클릭 이벤트 처리 //\r\n    const onShowCommentClickHandler = () => {\r\n      setShowComment(!showComment);\r\n    };\r\n\r\n    // event handler: 댓글 작성 버튼 클릭 이벤트 처리 //\r\n    const onCommentSubmitButtonClickHandler = () => {\r\n      if (!comment || !boardNumber || !loginUser || !cookies.accessToken)\r\n        return;\r\n      const requestBody: PostCommentRequestDto = { content: comment };\r\n      postCommentRequest(boardNumber, requestBody, cookies.accessToken).then(\r\n        postCommentResponse\r\n      );\r\n    };\r\n\r\n    // event handler: 댓글 변경 이벤트 처리 //\r\n    const onCommentChangeHandler = (\r\n      event: ChangeEvent<HTMLTextAreaElement>\r\n    ) => {\r\n      const { value } = event.target;\r\n      setComment(value);\r\n      if (!commentRef.current) return;\r\n      commentRef.current.style.height = \"auto\";\r\n      commentRef.current.style.height = `${commentRef.current.scrollHeight}px`;\r\n    };\r\n\r\n    // effect: 게시물 번호 path variable이 바뀔때마다 좋아요 댓글 리스트 불러오기 //\r\n    useEffect(() => {\r\n      if (!boardNumber) return;\r\n      getFavoriteListRequest(boardNumber).then(getFavoriteListResponse);\r\n      getCommentListRequest(boardNumber).then(getCommentListResponse);\r\n    }, [boardNumber]);\r\n\r\n    // render: 게시물 상세 하단 컴포넌트 렌더링 //\r\n    return (\r\n      <div id=\"board-detail-bottom\">\r\n        <div className=\"board-detail-bottom-button-box\">\r\n          <div className=\"board-detail-bottom-button-group\">\r\n            <div className=\"icon-button\" onClick={onFavoriteClickHandler}>\r\n              {isFavorite ? (\r\n                <div className=\"icon favorite-fill-icon\"></div>\r\n              ) : (\r\n                <div className=\"icon favorite-light-icon\"></div>\r\n              )}\r\n            </div>\r\n            <div className=\"board-detail-bottom-button-text\">{`좋아요 ${favoriteList.length}`}</div>\r\n            <div className=\"icon-button\" onClick={onShowFavoriteClickHandler}>\r\n              {showFavorite ? (\r\n                <div className=\"icon up-light-icon\"></div>\r\n              ) : (\r\n                <div className=\"icon down-light-icon\"></div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"board-detail-bottom-button-group\">\r\n            <div className=\"icon-button\">\r\n              <div className=\"icon comment-icon\"></div>\r\n            </div>\r\n            <div className=\"board-detail-bottom-button-text\">{`댓글 ${totalCommentCount}`}</div>\r\n            <div className=\"icon-button\" onClick={onShowCommentClickHandler}>\r\n              {showComment ? (\r\n                <div className=\"icon up-light-icon\"></div>\r\n              ) : (\r\n                <div className=\"icon down-light-icon\"></div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {showFavorite && (\r\n          <div className=\"board-detail-bottom-favorite-box\">\r\n            <div className=\"board-detail-bottom-favorite-container\">\r\n              <div className=\"board-detail-bottom-favorite-title\">\r\n                {\"좋아요 \"}\r\n                <span className=\"emphasis\">{favoriteList.length}</span>\r\n              </div>\r\n              <div className=\"board-detail-bottom-favorite-contents\">\r\n                {favoriteList.map((item) => (\r\n                  <FavoriteItem favoriteListItem={item} />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {showComment && (\r\n          <div className=\"board-detail-bottom-comment-box\">\r\n            <div className=\"board-detail-bottom-comment-container\">\r\n              <div className=\"board-detail-bottom-comment-title\">\r\n                {\"댓글 \"}\r\n                <span className=\"emphasis\">{totalCommentCount}</span>\r\n              </div>\r\n              <div className=\"board-detail-bottom-comment-list-container\">\r\n                {viewList.map((item) => (\r\n                  <CommentItem commentListItem={item} />\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"divider\"></div>\r\n            <div className=\"board-detail-bottom-comment-pagination-box\">\r\n              <Pagination\r\n                currentPage={currentPage}\r\n                currentSection={currentSection}\r\n                setCurrentPage={setCurrentPage}\r\n                setCurrentSection={setCurrentSection}\r\n                viewPageList={viewPageList}\r\n                totalSection={totalSection}\r\n              />\r\n            </div>\r\n            {loginUser !== null && (\r\n              <div className=\"board-detail-bottom-comment-input-box\">\r\n                <div className=\"board-detail-bottom-comment-input-container\">\r\n                  <textarea\r\n                    ref={commentRef}\r\n                    className=\"board-detail-bottom-comment-textarea\"\r\n                    placeholder=\"댓글을 작성해주세요.\"\r\n                    value={comment}\r\n                    onChange={onCommentChangeHandler}\r\n                  />\r\n                  <div className=\"board-detail-bottom-comment-button-box\">\r\n                    <div\r\n                      className={\r\n                        comment === \"\" ? \"disable-button\" : \"black-button\"\r\n                      }\r\n                      onClick={onCommentSubmitButtonClickHandler}\r\n                    >\r\n                      {\"댓글달기\"}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // effect: 게시물 번호 path variable이 바뀔 때마 게시물 조회 수 증가 //\r\n  let effectFlag = false;\r\n  useEffect(() => {\r\n    if (!boardNumber) return;\r\n    if (effectFlag) {\r\n      return;\r\n    }\r\n\r\n    increaseViewCountRequest(boardNumber).then(increaseViewCountResponse);\r\n    effectFlag = true;\r\n  }, [boardNumber]);\r\n\r\n  // render: 게시물 상세 화면 컴포넌트 렌더링 //\r\n  return (\r\n    <div id=\"board-detail-wrapper\">\r\n      <div className=\"board-detail-container\">\r\n        <BoardDetailTop />\r\n        <BoardDetailBottom />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}