{"ast":null,"code":"var _jsxFileName = \"C:\\\\Springboot-React-ts\\\\board-front\\\\src\\\\views\\\\Authentication\\\\index.tsx\",\n  _s3 = $RefreshSig$();\nimport InputBox from \"components/InputBox\";\nimport \"./style.css\";\nimport React, { useState, useRef } from \"react\";\nimport { signInRequest } from \"apis\";\nimport { useCookies } from \"react-cookie\";\nimport { MAIN_PATH } from \"constant\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDaumPostcodePopup } from \"react-daum-postcode\";\n\n// component : 인증 화면 컴포넌트 //\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Authentication() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  // state: 화면 상태 //\n  const [view, setView] = useState(\"sign-in\");\n  // state: 쿠키 상태 //\n  const [cookies, setCookie] = useCookies();\n\n  // function: 네비게이트 함수 //\n  const navigator = useNavigate();\n\n  // component : sign in card 컴포넌트 //\n  const SignInCard = () => {\n    _s();\n    // state: 이메일 요소 참조 상태 //\n    const emailRef = useRef(null);\n    // state: 패스워드 요소 참조 상태 //\n    const passwordRef = useRef(null);\n\n    // state: 이메일 상태 //\n    const [email, setEmail] = useState(\"\");\n    // state: 패스워드 상태 //\n    const [password, setPassword] = useState(\"\");\n    // state: 패스워드 타입 상태 //\n    const [passwordType, setPasswordType] = useState(\"password\");\n    // state: 패스워드 버튼 아이콘 상태 //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState(\"eye-light-off-icon\");\n    // state: 에러 상태 //\n    const [error, setError] = useState(false);\n\n    // function: sign in response 처리 함수 //\n    const signInResponse = responseBody => {\n      if (!responseBody) {\n        alert(\"네트워크 이상입니다.\");\n        return;\n      }\n      if (\"code\" in responseBody) {\n        const {\n          code\n        } = responseBody;\n        if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\n        if (code === \"SF\" || code === \"VF\") setError(true);\n        if (code !== \"SU\") return;\n        const {\n          token,\n          expirationTime\n        } = responseBody;\n        const now = new Date().getTime();\n        const expires = new Date(now + expirationTime * 1000);\n        setCookie(\"accessToken\", token, {\n          expires,\n          path: MAIN_PATH()\n        });\n        navigator(MAIN_PATH());\n      } else {\n        alert(\"응답 형식이 올바르지 않습니다.\");\n      }\n    };\n\n    // event handler: 이메일 변경 이벤트 처리 //\n    const onEmailChangeHandler = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n    };\n\n    // event handler: 비밀번호 변경 이벤트 처리 //\n    const onPasswordChangeHandler = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n    };\n\n    // event handler: 로그인 버튼 클릭 이벤트 처리  함수 //\n    const onSignInButtonClickHandler = () => {\n      const requestBody = {\n        email,\n        password\n      };\n      signInRequest(requestBody).then(signInResponse);\n    };\n    // event handler: 회원가입 링크 클릭 이벤트 처리  함수 //\n    const onSignLinkClickHandler = () => {\n      setView(\"sign-up\");\n    };\n\n    // event handler: 패스워드 버튼 클릭 이벤트 처리  함수 //\n    const onPasswordButtonClickHandler = () => {\n      if (passwordType === \"text\") {\n        setPasswordType(\"password\");\n        setPasswordButtonIcon(\"eye-light-off-icon\");\n      } else {\n        setPasswordType(\"text\");\n        setPasswordButtonIcon(\"eye-light-on-icon\");\n      }\n    };\n\n    // event handler: 이메일 인풋 키 다운 이벤트 처리  함수 //\n    const onEmailKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n    // event handler: 패스워드 인풋 키 다운 이벤트 처리  함수 //\n    const onPasswordKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      onSignInButtonClickHandler();\n    };\n    // render : sign in card 컴포넌트 렌더링 //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title\",\n              children: \"로그인\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: emailRef,\n            label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n            type: \"text\",\n            placeholder: \"'\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            error: error,\n            value: email,\n            onChange: onEmailChangeHandler,\n            onKeyDown: onEmailKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: passwordRef,\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n            type: passwordType,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            error: error,\n            value: password,\n            onChange: onPasswordChangeHandler,\n            icon: passwordButtonIcon,\n            onButtonClick: onPasswordButtonClickHandler,\n            onKeyDown: onPasswordKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-sign-in-error-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-sign-in-error-message\",\n              children: \"이메일 주소 또는 비밀번호를 잘못 입력했습니다.\\n입력하신 내용을 다시 확인해주세요.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onSignInButtonClickHandler,\n            children: \"로그인\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: [\"신규 사용자이신가요? \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-description-link\",\n                onClick: onSignLinkClickHandler,\n                children: \"회원가입\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  };\n\n  // component : sign up card 컴포넌트 //\n  _s(SignInCard, \"9I62EhHqQe1/cdr2r08/oYUs3Lc=\");\n  const SignUpCard = () => {\n    _s2();\n    // state: 이메일 요소 참조 상태 //\n    const emailRef = useRef(null);\n    // state: 패스워드 요소 참조 상태 //\n    const passwordRef = useRef(null);\n    // state: 패스워드 확인 요소 참조 상태 //\n    const passwordCheckRef = useRef(null);\n    // state: 닉네임 요소 참조 상태 //\n    const nicknameRef = useRef(null);\n    // state: 휴대폰 번호 요소 참조 상태 //\n    const telNumberRef = useRef(null);\n    // state: 주소 요소 참조 상태 //\n    const addressRef = useRef(null);\n    // state: 상세 주소 요소 참조 상태 //\n    const addressDetailRef = useRef(null);\n\n    // state: 페이지 번호 상태 //\n    const [page, setPage] = useState(2);\n    // state: 이메일 상태 //\n    const [email, setEmail] = useState(\"\");\n    // state: 패스워드 상태 //\n    const [password, setPassword] = useState(\"\");\n    // state: 패스워드 확인 상태 //\n    const [passwordCheck, setPasswordCheck] = useState(\"\");\n    // state: 닉네임 상태 //\n    const [nickname, setNickname] = useState(\"\");\n    // state: 핸드폰 번호 상태 //\n    const [telNumber, setTelNumber] = useState(\"\");\n    // state: 주소 상태 //\n    const [address, setAddress] = useState(\"\");\n    // state: 상세 주소 상태 //\n    const [addressDetail, setAddressDetail] = useState(\"\");\n    // state: 개인 정보 동의 상태 //\n    const [agreedPersonal, setAgreedPersonal] = useState(false);\n\n    // state: 패스워드 타입 상태 //\n    const [passwordType, setPasswordType] = useState(\"password\");\n    // state: 패스워드 확인 타입 상태 //\n    const [passwordCheckType, setPasswordCheckType] = useState(\"password\");\n    const [isEmailError, setEmailError] = useState(false);\n    // state: 패스워드 에러 상태 //\n    const [isPasswordError, setPasswordError] = useState(false);\n    // state: 패스워드 확인 에러 상태 //\n    const [isPasswordCheckError, setPasswordCheckError] = useState(false);\n    // state: 닉네임 에러 상태 //\n    const [isNicknameError, setNicknameError] = useState(false);\n    // state: 핸드폰 번호 에러 상태 //\n    const [isTelNumberError, setTelNumberError] = useState(false);\n    // state: 주소 에러 상태 //\n    const [isAddressError, setAddressError] = useState(false);\n    // state: 개인 정보 동의 에러 상태 //\n    const [isAgreedPersonalError, setAgreedPersonalError] = useState(false);\n    // state: 이메일 에러 메세지 상태 //\n    const [emailErrorMessage, setEmailErrorMessage] = useState(\"\");\n    // state: 패스워드 에러 메세지 상태 //\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState(\"\");\n    // state: 패스워드 확인 에러 메세지 상태 //\n    const [passwordCheckErrorMessage, setPasswordCheckErrorMessage] = useState(\"\");\n    // state: 닉네임 에러 메세지 상태 //\n    const [nicknameErrorMessage, setNicknameErrorMessage] = useState(\"\");\n    // state: 핸드폰 번호 에러 메세지 상태 //\n    const [telNumberErrorMessage, setTelNumberErrorMessage] = useState(\"\");\n    // state: 주소 에러 메세지 상태 //\n    const [addressErrorMessage, setAddressErrorMessage] = useState(\"\");\n\n    // state: 패스워드 버튼 아이콘 상태 //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState(\"eye-light-off-icon\");\n    // state: 패스워드 확인 버튼 아이콘 상태 //\n    const [passwordCheckButtonIcon, setPasswordCheckButtonIcon] = useState(\"eye-light-off-icon\");\n\n    // function: 다음 주소 검색 팝업 오픈 함수 //\n    const open = useDaumPostcodePopup();\n\n    // event handler: 이메일 변경 이벤트 처리 //\n    const onEmailChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n      setEmailError(false);\n      setEmailErrorMessage(\"\");\n    };\n\n    // event handler: 패스워드 변경 이벤트 처리 //\n    const onPasswordChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n      setPasswordError(false);\n      setPasswordErrorMessage(\"\");\n    };\n    // event handler: 패스워드 확인 변경 이벤트 처리 //\n    const onPasswordCheckChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPasswordCheck(value);\n      setPasswordCheckError(false);\n      setPasswordCheckErrorMessage(\"\");\n    };\n    // event handler: 닉네임 변경 이벤트 처리 //\n    const onNicknameChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setNickname(value);\n      setNicknameError(false);\n      setNicknameErrorMessage(\"\");\n    };\n    // event handler: 핸드폰 번호 변경 이벤트 처리 //\n    const onTelNumberChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setTelNumber(value);\n      setTelNumberError(false);\n      setTelNumberErrorMessage(\"\");\n    };\n    // event handler: 주소 변경 이벤트 처리 //\n    const onAddressChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setAddress(value);\n      setAddressError(false);\n      setAddressErrorMessage(\"\");\n    };\n    // event handler: 상세 주소 변경 이벤트 처리 //\n    const onAddressDetailChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setAddressDetail(value);\n    };\n    // event handler: 개인 정보 동의 체크 박스 클릭 이벤트 처리 //\n    const onAgreedPersonalClickHandler = () => {\n      setAgreedPersonal(!agreedPersonal);\n      setAgreedPersonalError(false);\n    };\n    // event handler: 패스워드 버튼 클릭 이벤트 처리 //\n    const onPasswordButtonClickHandler = () => {\n      if (passwordButtonIcon === \"eye-light-off-icon\") {\n        setPasswordButtonIcon(\"eye-light-on-icon\");\n        setPasswordType(\"text\");\n      } else {\n        setPasswordButtonIcon(\"eye-light-off-icon\");\n        setPasswordType(\"password\");\n      }\n    };\n    // event handler: 패스워드 확인 버튼 클릭 이벤트 처리 //\n    const onPasswordCheckButtonClickHandler = () => {\n      if (passwordCheckButtonIcon === \"eye-light-off-icon\") {\n        setPasswordCheckButtonIcon(\"eye-light-on-icon\");\n        setPasswordCheckType(\"text\");\n      } else {\n        setPasswordCheckButtonIcon(\"eye-light-off-icon\");\n        setPasswordCheckType(\"password\");\n      }\n    };\n    // event handler: 주소 버튼 클릭 이벤트 처리 //\n    const onAddressButtonClickHandler = () => {\n      open({\n        onComplete\n      });\n    };\n    // event handler: 다음 단계 버튼 클릭 이벤트 처리 //\n    const onNextButtonClickHandler = () => {\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;\n      const isEmailPattern = emailPattern.test(email);\n      if (!isEmailPattern) {\n        setEmailError(true);\n        setEmailErrorMessage(\"이메일 주소 포멧이 맞지 않습니다.\");\n      }\n      const isCheckedPassword = password.trim().length >= 8;\n      if (!isCheckedPassword) {\n        setPasswordError(true);\n        setPasswordErrorMessage(\"비밀번호는 8자 이상 입력해주세요.\");\n      }\n      const isEqualPassword = password === passwordCheck;\n      if (!isEqualPassword) {\n        setPasswordCheckError(true);\n        setPasswordCheckErrorMessage(\"비밀번호가 일치하지 않습니다.\");\n      }\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) return;\n      setPage(2);\n    };\n    // event handler: 회원가입 버튼 클릭 이벤트 처리 //\n    const onSignUpButtonClickHandler = () => {\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;\n      const isEmailPattern = emailPattern.test(email);\n      if (!isEmailPattern) {\n        setEmailError(true);\n        setEmailErrorMessage(\"이메일 주소 포멧이 맞지 않습니다.\");\n      }\n      const isCheckedPassword = password.trim().length >= 8;\n      if (!isCheckedPassword) {\n        setPasswordError(true);\n        setPasswordErrorMessage(\"비밀번호는 8자 이상 입력해주세요.\");\n      }\n      const isEqualPassword = password === passwordCheck;\n      if (!isEqualPassword) {\n        setPasswordCheckError(true);\n        setPasswordCheckErrorMessage(\"비밀번호가 일치하지 않습니다.\");\n      }\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) {\n        setPage(1);\n        return;\n      }\n      const hasNickname = nickname.length !== 0;\n      if (!hasNickname) {\n        setNicknameError(true);\n        setNicknameErrorMessage(\"닉네임을 입력해주세요.\");\n      }\n      const telNumberPattern = /^[0-9]{11,13}$/;\n    };\n    // event handler: 로그인 링크 클릭 이벤트 처리 //\n    const onSignInLinkClickHandler = () => {\n      setView(\"sign-in\");\n    };\n    // event handler: 이메일 키 다운 이벤트 처리 //\n    const onEmailKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n    // event handler: 패스워드 키 다운 이벤트 처리 //\n    const onPasswordKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      if (!passwordCheckRef.current) return;\n      passwordCheckRef.current.focus();\n    };\n    // event handler: 패스워드 확인 키 다운 이벤트 처리 //\n    const onPasswordCheckKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      if (!nicknameRef.current) return;\n      onNextButtonClickHandler();\n      nicknameRef.current.focus();\n    };\n    // event handler: 닉네임 키 다운 이벤트 처리 //\n    const onNicknameKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      if (!telNumberRef.current) return;\n      onNextButtonClickHandler();\n      telNumberRef.current.focus();\n    };\n    // event handler: 핸드폰 번호 키 다운 이벤트 처리 //\n    const onTelNumberKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      onAddressButtonClickHandler();\n    };\n    // event handler: 주소 키 다운 이벤트 처리 //\n    const onAddressKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      if (!addressDetailRef.current) return;\n      addressDetailRef.current.focus();\n    };\n    // event handler: 상세 주소 키 다운 이벤트 처리 //\n    const onAddressDetailKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      onSignUpButtonClickHandler();\n    };\n\n    // event handler: 다음 주소 검색 완료 이벤트 처리 //\n    const onComplete = data => {\n      const {\n        address\n      } = data;\n      setAddress(address);\n      if (!addressDetailRef.current) return;\n      addressDetailRef.current.focus();\n    };\n\n    // render : sign up card 컴포넌트 렌더링 //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title\",\n              children: \"회원가입\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-page\",\n              children: `${page}/2`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this), page === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(InputBox, {\n              ref: emailRef,\n              label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C*\",\n              type: \"text\",\n              placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: email,\n              onChange: onEmailChangeHandler,\n              error: isEmailError,\n              message: emailErrorMessage,\n              onKeyDown: onEmailKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: passwordRef,\n              label: \"\\uBE44\\uBC00\\uBC88\\uD638*\",\n              type: passwordType,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: password,\n              onChange: onPasswordChangeHandler,\n              error: isPasswordError,\n              message: passwordErrorMessage,\n              icon: passwordButtonIcon,\n              onButtonClick: onPasswordButtonClickHandler,\n              onKeyDown: onPasswordKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: passwordCheckRef,\n              label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778*\",\n              type: passwordCheckType,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: passwordCheck,\n              onChange: onPasswordCheckChangeHandler,\n              error: isPasswordCheckError,\n              message: passwordCheckErrorMessage,\n              icon: passwordCheckButtonIcon,\n              onButtonClick: onPasswordCheckButtonClickHandler,\n              onKeyDown: onPasswordCheckKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), page === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(InputBox, {\n              ref: nicknameRef,\n              label: \"\\uB2C9\\uB124\\uC784*\",\n              type: \"text\",\n              placeholder: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: nickname,\n              onChange: onNicknameChangeHandler,\n              error: isNicknameError,\n              message: nicknameErrorMessage,\n              onKeyDown: onNicknameKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: telNumberRef,\n              label: \"\\uD578\\uB4DC\\uD3F0 \\uBC88\\uD638*\",\n              type: \"text\",\n              placeholder: \"\\uD578\\uB4DC\\uD3F0 \\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: telNumber,\n              onChange: onTelNumberChangeHandler,\n              error: isTelNumberError,\n              message: telNumberErrorMessage,\n              onKeyDown: onTelNumberKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: addressRef,\n              label: \"\\uC8FC\\uC18C*\",\n              type: \"text\",\n              placeholder: \"\\uC6B0\\uD3B8\\uBC88\\uD638 \\uCC3E\\uAE30\",\n              value: address,\n              onChange: onAddressChangeHandler,\n              error: isAddressError,\n              message: addressErrorMessage,\n              icon: \"expand-right-light-icon\",\n              onButtonClick: onAddressButtonClickHandler,\n              onKeyDown: onAddressKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: addressDetailRef,\n              label: \"\\uC0C1\\uC138 \\uC8FC\\uC18C\",\n              type: \"text\",\n              placeholder: \"\\uC0C1\\uC138 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: addressDetail,\n              onChange: onAddressDetailChangeHandler,\n              error: false,\n              onKeyDown: onAddressDetailKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [page === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onNextButtonClickHandler,\n            children: \"다음 단계\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 15\n          }, this), page === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-consent-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-check-box\",\n                onClick: onAgreedPersonalClickHandler,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `icon ${agreedPersonal ? \"check-round-fill-icon\" : \"check-ring-light-icon\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isAgreedPersonalError ? \"auth-consent-title-error\" : \"auth-consent-title\",\n                children: \"개인정보동의\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-consent-link\",\n                children: \"더보기 >\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"black-large-full-button\",\n              onClick: onSignUpButtonClickHandler,\n              children: \"회원가입\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: [\"이미 계정이 있으신가요? \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-description-link\",\n                onClick: onSignInLinkClickHandler,\n                children: \"로그인\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this);\n  };\n\n  // render : 인증화면 컴포넌트 렌더링 //\n  _s2(SignUpCard, \"Ex+rSGXZPfHf1I72HIdpK0jri6k=\", false, function () {\n    return [useDaumPostcodePopup];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"auth-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-jumbotron-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-jumbotron-contents\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-logo-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-jumbotron-text-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: \"운동 커뮤니티\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: \"Play Fit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 9\n      }, this), view === \"sign-in\" && /*#__PURE__*/_jsxDEV(SignInCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 32\n      }, this), view === \"sign-up\" && /*#__PURE__*/_jsxDEV(SignUpCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 633,\n    columnNumber: 5\n  }, this);\n}\n_s3(Authentication, \"euhi3nYfLo/Y//WG4GlhJ4mPI/8=\", false, function () {\n  return [useCookies, useNavigate];\n});\n_c = Authentication;\nvar _c;\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"names":["InputBox","React","useState","useRef","signInRequest","useCookies","MAIN_PATH","useNavigate","useDaumPostcodePopup","jsxDEV","_jsxDEV","Fragment","_Fragment","Authentication","_s3","_s","$RefreshSig$","_s2","view","setView","cookies","setCookie","navigator","SignInCard","emailRef","passwordRef","email","setEmail","password","setPassword","passwordType","setPasswordType","passwordButtonIcon","setPasswordButtonIcon","error","setError","signInResponse","responseBody","alert","code","token","expirationTime","now","Date","getTime","expires","path","onEmailChangeHandler","event","value","target","onPasswordChangeHandler","onSignInButtonClickHandler","requestBody","then","onSignLinkClickHandler","onPasswordButtonClickHandler","onEmailKeyDownHandler","key","current","focus","onPasswordKeyDownHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","label","type","placeholder","onChange","onKeyDown","icon","onButtonClick","onClick","SignUpCard","passwordCheckRef","nicknameRef","telNumberRef","addressRef","addressDetailRef","page","setPage","passwordCheck","setPasswordCheck","nickname","setNickname","telNumber","setTelNumber","address","setAddress","addressDetail","setAddressDetail","agreedPersonal","setAgreedPersonal","passwordCheckType","setPasswordCheckType","isEmailError","setEmailError","isPasswordError","setPasswordError","isPasswordCheckError","setPasswordCheckError","isNicknameError","setNicknameError","isTelNumberError","setTelNumberError","isAddressError","setAddressError","isAgreedPersonalError","setAgreedPersonalError","emailErrorMessage","setEmailErrorMessage","passwordErrorMessage","setPasswordErrorMessage","passwordCheckErrorMessage","setPasswordCheckErrorMessage","nicknameErrorMessage","setNicknameErrorMessage","telNumberErrorMessage","setTelNumberErrorMessage","addressErrorMessage","setAddressErrorMessage","passwordCheckButtonIcon","setPasswordCheckButtonIcon","open","onPasswordCheckChangeHandler","onNicknameChangeHandler","onTelNumberChangeHandler","onAddressChangeHandler","onAddressDetailChangeHandler","onAgreedPersonalClickHandler","onPasswordCheckButtonClickHandler","onAddressButtonClickHandler","onComplete","onNextButtonClickHandler","emailPattern","isEmailPattern","test","isCheckedPassword","trim","length","isEqualPassword","onSignUpButtonClickHandler","hasNickname","telNumberPattern","onSignInLinkClickHandler","onPasswordCheckKeyDownHandler","onNicknameKeyDownHandler","onTelNumberKeyDownHandler","onAddressKeyDownHandler","onAddressDetailKeyDownHandler","data","message","id","_c","$RefreshReg$"],"sources":["C:/Springboot-React-ts/board-front/src/views/Authentication/index.tsx"],"sourcesContent":["import InputBox from \"components/InputBox\";\r\nimport \"./style.css\";\r\nimport React, { useState, KeyboardEvent, useRef, ChangeEvent } from \"react\";\r\nimport { SignInRequestDto } from \"apis/request/auth\";\r\nimport { signInRequest } from \"apis\";\r\nimport { ResponseDto } from \"apis/response\";\r\nimport SignInResponseDto from \"apis/response/sign-in.response.dto\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { MAIN_PATH } from \"constant\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Address, useDaumPostcodePopup } from \"react-daum-postcode\";\r\n\r\n// component : 인증 화면 컴포넌트 //\r\nexport default function Authentication() {\r\n  // state: 화면 상태 //\r\n  const [view, setView] = useState<\"sign-in\" | \"sign-up\">(\"sign-in\");\r\n  // state: 쿠키 상태 //\r\n  const [cookies, setCookie] = useCookies();\r\n\r\n  // function: 네비게이트 함수 //\r\n  const navigator = useNavigate();\r\n\r\n  // component : sign in card 컴포넌트 //\r\n  const SignInCard = () => {\r\n    // state: 이메일 요소 참조 상태 //\r\n    const emailRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 패스워드 요소 참조 상태 //\r\n    const passwordRef = useRef<HTMLInputElement | null>(null);\r\n\r\n    // state: 이메일 상태 //\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    // state: 패스워드 상태 //\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    // state: 패스워드 타입 상태 //\r\n    const [passwordType, setPasswordType] = useState<\"text\" | \"password\">(\r\n      \"password\"\r\n    );\r\n    // state: 패스워드 버튼 아이콘 상태 //\r\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState<\r\n      \"eye-light-off-icon\" | \"eye-light-on-icon\"\r\n    >(\"eye-light-off-icon\");\r\n    // state: 에러 상태 //\r\n    const [error, setError] = useState<boolean>(false);\r\n\r\n    // function: sign in response 처리 함수 //\r\n    const signInResponse = (\r\n      responseBody: SignInRequestDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) {\r\n        alert(\"네트워크 이상입니다.\");\r\n        return;\r\n      }\r\n      if (\"code\" in responseBody) {\r\n        const { code } = responseBody;\r\n        if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n        if (code === \"SF\" || code === \"VF\") setError(true);\r\n        if (code !== \"SU\") return;\r\n\r\n        const { token, expirationTime } = responseBody as SignInResponseDto;\r\n        const now = new Date().getTime();\r\n        const expires = new Date(now + expirationTime * 1000);\r\n\r\n        setCookie(\"accessToken\", token, { expires, path: MAIN_PATH() });\r\n        navigator(MAIN_PATH());\r\n      } else {\r\n        alert(\"응답 형식이 올바르지 않습니다.\");\r\n      }\r\n    };\r\n\r\n    // event handler: 이메일 변경 이벤트 처리 //\r\n    const onEmailChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      setError(false);\r\n      const { value } = event.target;\r\n      setEmail(value);\r\n    };\r\n\r\n    // event handler: 비밀번호 변경 이벤트 처리 //\r\n    const onPasswordChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      setError(false);\r\n      const { value } = event.target;\r\n      setPassword(value);\r\n    };\r\n\r\n    // event handler: 로그인 버튼 클릭 이벤트 처리  함수 //\r\n    const onSignInButtonClickHandler = () => {\r\n      const requestBody: SignInRequestDto = {\r\n        email,\r\n        password,\r\n      };\r\n      signInRequest(requestBody).then(signInResponse);\r\n    };\r\n    // event handler: 회원가입 링크 클릭 이벤트 처리  함수 //\r\n    const onSignLinkClickHandler = () => {\r\n      setView(\"sign-up\");\r\n    };\r\n\r\n    // event handler: 패스워드 버튼 클릭 이벤트 처리  함수 //\r\n    const onPasswordButtonClickHandler = () => {\r\n      if (passwordType === \"text\") {\r\n        setPasswordType(\"password\");\r\n        setPasswordButtonIcon(\"eye-light-off-icon\");\r\n      } else {\r\n        setPasswordType(\"text\");\r\n        setPasswordButtonIcon(\"eye-light-on-icon\");\r\n      }\r\n    };\r\n\r\n    // event handler: 이메일 인풋 키 다운 이벤트 처리  함수 //\r\n    const onEmailKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!passwordRef.current) return;\r\n      passwordRef.current.focus();\r\n    };\r\n    // event handler: 패스워드 인풋 키 다운 이벤트 처리  함수 //\r\n    const onPasswordKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      onSignInButtonClickHandler();\r\n    };\r\n    // render : sign in card 컴포넌트 렌더링 //\r\n    return (\r\n      <div className=\"auth-card\">\r\n        <div className=\"auth-card-box\">\r\n          <div className=\"auth-card-top\">\r\n            <div className=\"auth-card-title-box\">\r\n              <div className=\"auth-card-title\">{\"로그인\"}</div>\r\n            </div>\r\n            <InputBox\r\n              ref={emailRef}\r\n              label=\"이메일 주소\"\r\n              type=\"text\"\r\n              placeholder=\"'이메일 주소를 입력해주세요.\"\r\n              error={error}\r\n              value={email}\r\n              onChange={onEmailChangeHandler}\r\n              onKeyDown={onEmailKeyDownHandler}\r\n            />\r\n            <InputBox\r\n              ref={passwordRef}\r\n              label=\"비밀번호\"\r\n              type={passwordType}\r\n              placeholder=\"비밀번호를 입력해주세요.\"\r\n              error={error}\r\n              value={password}\r\n              onChange={onPasswordChangeHandler}\r\n              icon={passwordButtonIcon}\r\n              onButtonClick={onPasswordButtonClickHandler}\r\n              onKeyDown={onPasswordKeyDownHandler}\r\n            />\r\n          </div>\r\n          <div className=\"auth-card-bottom\">\r\n            {error && (\r\n              <div className=\"auth-sign-in-error-box\">\r\n                <div className=\"auth-sign-in-error-message\">\r\n                  {\r\n                    \"이메일 주소 또는 비밀번호를 잘못 입력했습니다.\\n입력하신 내용을 다시 확인해주세요.\"\r\n                  }\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div\r\n              className=\"black-large-full-button\"\r\n              onClick={onSignInButtonClickHandler}\r\n            >\r\n              {\"로그인\"}\r\n            </div>\r\n            <div className=\"auth-description-box\">\r\n              <div className=\"auth-description\">\r\n                {\"신규 사용자이신가요? \"}\r\n                <span\r\n                  className=\"auth-description-link\"\r\n                  onClick={onSignLinkClickHandler}\r\n                >\r\n                  {\"회원가입\"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // component : sign up card 컴포넌트 //\r\n  const SignUpCard = () => {\r\n    // state: 이메일 요소 참조 상태 //\r\n    const emailRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 패스워드 요소 참조 상태 //\r\n    const passwordRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 패스워드 확인 요소 참조 상태 //\r\n    const passwordCheckRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 닉네임 요소 참조 상태 //\r\n    const nicknameRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 휴대폰 번호 요소 참조 상태 //\r\n    const telNumberRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 주소 요소 참조 상태 //\r\n    const addressRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 상세 주소 요소 참조 상태 //\r\n    const addressDetailRef = useRef<HTMLInputElement | null>(null);\r\n\r\n    // state: 페이지 번호 상태 //\r\n    const [page, setPage] = useState<1 | 2>(2);\r\n    // state: 이메일 상태 //\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    // state: 패스워드 상태 //\r\n    const [password, setPassword] = useState<string>(\"\");\r\n    // state: 패스워드 확인 상태 //\r\n    const [passwordCheck, setPasswordCheck] = useState<string>(\"\");\r\n    // state: 닉네임 상태 //\r\n    const [nickname, setNickname] = useState<string>(\"\");\r\n    // state: 핸드폰 번호 상태 //\r\n    const [telNumber, setTelNumber] = useState<string>(\"\");\r\n    // state: 주소 상태 //\r\n    const [address, setAddress] = useState<string>(\"\");\r\n    // state: 상세 주소 상태 //\r\n    const [addressDetail, setAddressDetail] = useState<string>(\"\");\r\n    // state: 개인 정보 동의 상태 //\r\n    const [agreedPersonal, setAgreedPersonal] = useState<boolean>(false);\r\n\r\n    // state: 패스워드 타입 상태 //\r\n    const [passwordType, setPasswordType] = useState<\"text\" | \"password\">(\r\n      \"password\"\r\n    );\r\n    // state: 패스워드 확인 타입 상태 //\r\n    const [passwordCheckType, setPasswordCheckType] = useState<\r\n      \"text\" | \"password\"\r\n    >(\"password\");\r\n    const [isEmailError, setEmailError] = useState<boolean>(false);\r\n    // state: 패스워드 에러 상태 //\r\n    const [isPasswordError, setPasswordError] = useState<boolean>(false);\r\n    // state: 패스워드 확인 에러 상태 //\r\n    const [isPasswordCheckError, setPasswordCheckError] =\r\n      useState<boolean>(false);\r\n    // state: 닉네임 에러 상태 //\r\n    const [isNicknameError, setNicknameError] = useState<boolean>(false);\r\n    // state: 핸드폰 번호 에러 상태 //\r\n    const [isTelNumberError, setTelNumberError] = useState<boolean>(false);\r\n    // state: 주소 에러 상태 //\r\n    const [isAddressError, setAddressError] = useState<boolean>(false);\r\n    // state: 개인 정보 동의 에러 상태 //\r\n    const [isAgreedPersonalError, setAgreedPersonalError] =\r\n      useState<boolean>(false);\r\n    // state: 이메일 에러 메세지 상태 //\r\n    const [emailErrorMessage, setEmailErrorMessage] = useState<string>(\"\");\r\n    // state: 패스워드 에러 메세지 상태 //\r\n    const [passwordErrorMessage, setPasswordErrorMessage] =\r\n      useState<string>(\"\");\r\n    // state: 패스워드 확인 에러 메세지 상태 //\r\n    const [passwordCheckErrorMessage, setPasswordCheckErrorMessage] =\r\n      useState<string>(\"\");\r\n    // state: 닉네임 에러 메세지 상태 //\r\n    const [nicknameErrorMessage, setNicknameErrorMessage] =\r\n      useState<string>(\"\");\r\n    // state: 핸드폰 번호 에러 메세지 상태 //\r\n    const [telNumberErrorMessage, setTelNumberErrorMessage] =\r\n      useState<string>(\"\");\r\n    // state: 주소 에러 메세지 상태 //\r\n    const [addressErrorMessage, setAddressErrorMessage] = useState<string>(\"\");\r\n\r\n    // state: 패스워드 버튼 아이콘 상태 //\r\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState<\r\n      \"eye-light-off-icon\" | \"eye-light-on-icon\"\r\n    >(\"eye-light-off-icon\");\r\n    // state: 패스워드 확인 버튼 아이콘 상태 //\r\n    const [passwordCheckButtonIcon, setPasswordCheckButtonIcon] = useState<\r\n      \"eye-light-off-icon\" | \"eye-light-on-icon\"\r\n    >(\"eye-light-off-icon\");\r\n\r\n    // function: 다음 주소 검색 팝업 오픈 함수 //\r\n    const open = useDaumPostcodePopup();\r\n\r\n    // event handler: 이메일 변경 이벤트 처리 //\r\n    const onEmailChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setEmail(value);\r\n      setEmailError(false);\r\n      setEmailErrorMessage(\"\");\r\n    };\r\n\r\n    // event handler: 패스워드 변경 이벤트 처리 //\r\n    const onPasswordChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setPassword(value);\r\n      setPasswordError(false);\r\n      setPasswordErrorMessage(\"\");\r\n    };\r\n    // event handler: 패스워드 확인 변경 이벤트 처리 //\r\n    const onPasswordCheckChangeHandler = (\r\n      event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n      const { value } = event.target;\r\n      setPasswordCheck(value);\r\n      setPasswordCheckError(false);\r\n      setPasswordCheckErrorMessage(\"\");\r\n    };\r\n    // event handler: 닉네임 변경 이벤트 처리 //\r\n    const onNicknameChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setNickname(value);\r\n      setNicknameError(false);\r\n      setNicknameErrorMessage(\"\");\r\n    };\r\n    // event handler: 핸드폰 번호 변경 이벤트 처리 //\r\n    const onTelNumberChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setTelNumber(value);\r\n      setTelNumberError(false);\r\n      setTelNumberErrorMessage(\"\");\r\n    };\r\n    // event handler: 주소 변경 이벤트 처리 //\r\n    const onAddressChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setAddress(value);\r\n      setAddressError(false);\r\n      setAddressErrorMessage(\"\");\r\n    };\r\n    // event handler: 상세 주소 변경 이벤트 처리 //\r\n    const onAddressDetailChangeHandler = (\r\n      event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n      const { value } = event.target;\r\n      setAddressDetail(value);\r\n    };\r\n    // event handler: 개인 정보 동의 체크 박스 클릭 이벤트 처리 //\r\n    const onAgreedPersonalClickHandler = () => {\r\n      setAgreedPersonal(!agreedPersonal);\r\n      setAgreedPersonalError(false);\r\n    };\r\n    // event handler: 패스워드 버튼 클릭 이벤트 처리 //\r\n    const onPasswordButtonClickHandler = () => {\r\n      if (passwordButtonIcon === \"eye-light-off-icon\") {\r\n        setPasswordButtonIcon(\"eye-light-on-icon\");\r\n        setPasswordType(\"text\");\r\n      } else {\r\n        setPasswordButtonIcon(\"eye-light-off-icon\");\r\n        setPasswordType(\"password\");\r\n      }\r\n    };\r\n    // event handler: 패스워드 확인 버튼 클릭 이벤트 처리 //\r\n    const onPasswordCheckButtonClickHandler = () => {\r\n      if (passwordCheckButtonIcon === \"eye-light-off-icon\") {\r\n        setPasswordCheckButtonIcon(\"eye-light-on-icon\");\r\n        setPasswordCheckType(\"text\");\r\n      } else {\r\n        setPasswordCheckButtonIcon(\"eye-light-off-icon\");\r\n        setPasswordCheckType(\"password\");\r\n      }\r\n    };\r\n    // event handler: 주소 버튼 클릭 이벤트 처리 //\r\n    const onAddressButtonClickHandler = () => {\r\n      open({ onComplete });\r\n    };\r\n    // event handler: 다음 단계 버튼 클릭 이벤트 처리 //\r\n    const onNextButtonClickHandler = () => {\r\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;\r\n      const isEmailPattern = emailPattern.test(email);\r\n      if (!isEmailPattern) {\r\n        setEmailError(true);\r\n        setEmailErrorMessage(\"이메일 주소 포멧이 맞지 않습니다.\");\r\n      }\r\n      const isCheckedPassword = password.trim().length >= 8;\r\n      if (!isCheckedPassword) {\r\n        setPasswordError(true);\r\n        setPasswordErrorMessage(\"비밀번호는 8자 이상 입력해주세요.\");\r\n      }\r\n      const isEqualPassword = password === passwordCheck;\r\n      if (!isEqualPassword) {\r\n        setPasswordCheckError(true);\r\n        setPasswordCheckErrorMessage(\"비밀번호가 일치하지 않습니다.\");\r\n      }\r\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) return;\r\n      setPage(2);\r\n    };\r\n    // event handler: 회원가입 버튼 클릭 이벤트 처리 //\r\n    const onSignUpButtonClickHandler = () => {\r\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-Z]{2,4}$/;\r\n      const isEmailPattern = emailPattern.test(email);\r\n      if (!isEmailPattern) {\r\n        setEmailError(true);\r\n        setEmailErrorMessage(\"이메일 주소 포멧이 맞지 않습니다.\");\r\n      }\r\n      const isCheckedPassword = password.trim().length >= 8;\r\n      if (!isCheckedPassword) {\r\n        setPasswordError(true);\r\n        setPasswordErrorMessage(\"비밀번호는 8자 이상 입력해주세요.\");\r\n      }\r\n      const isEqualPassword = password === passwordCheck;\r\n      if (!isEqualPassword) {\r\n        setPasswordCheckError(true);\r\n        setPasswordCheckErrorMessage(\"비밀번호가 일치하지 않습니다.\");\r\n      }\r\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) {\r\n        setPage(1);\r\n        return;\r\n      }\r\n      const hasNickname = nickname.length !== 0;\r\n      if (!hasNickname) {\r\n        setNicknameError(true);\r\n        setNicknameErrorMessage(\"닉네임을 입력해주세요.\");\r\n      }\r\n      const telNumberPattern = /^[0-9]{11,13}$/;\r\n    };\r\n    // event handler: 로그인 링크 클릭 이벤트 처리 //\r\n    const onSignInLinkClickHandler = () => {\r\n      setView(\"sign-in\");\r\n    };\r\n    // event handler: 이메일 키 다운 이벤트 처리 //\r\n    const onEmailKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!passwordRef.current) return;\r\n      passwordRef.current.focus();\r\n    };\r\n    // event handler: 패스워드 키 다운 이벤트 처리 //\r\n    const onPasswordKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!passwordCheckRef.current) return;\r\n      passwordCheckRef.current.focus();\r\n    };\r\n    // event handler: 패스워드 확인 키 다운 이벤트 처리 //\r\n    const onPasswordCheckKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!nicknameRef.current) return;\r\n      onNextButtonClickHandler();\r\n      nicknameRef.current.focus();\r\n    };\r\n    // event handler: 닉네임 키 다운 이벤트 처리 //\r\n    const onNicknameKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!telNumberRef.current) return;\r\n      onNextButtonClickHandler();\r\n      telNumberRef.current.focus();\r\n    };\r\n    // event handler: 핸드폰 번호 키 다운 이벤트 처리 //\r\n    const onTelNumberKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      onAddressButtonClickHandler();\r\n    };\r\n    // event handler: 주소 키 다운 이벤트 처리 //\r\n    const onAddressKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!addressDetailRef.current) return;\r\n      addressDetailRef.current.focus();\r\n    };\r\n    // event handler: 상세 주소 키 다운 이벤트 처리 //\r\n    const onAddressDetailKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      onSignUpButtonClickHandler();\r\n    };\r\n\r\n    // event handler: 다음 주소 검색 완료 이벤트 처리 //\r\n    const onComplete = (data: Address) => {\r\n      const { address } = data;\r\n      setAddress(address);\r\n      if (!addressDetailRef.current) return;\r\n      addressDetailRef.current.focus();\r\n    };\r\n\r\n    // render : sign up card 컴포넌트 렌더링 //\r\n    return (\r\n      <div className=\"auth-card\">\r\n        <div className=\"auth-card-box\">\r\n          <div className=\"auth-card-top\">\r\n            <div className=\"auth-card-title-box\">\r\n              <div className=\"auth-card-title\">{\"회원가입\"}</div>\r\n              <div className=\"auth-card-page\">{`${page}/2`}</div>\r\n            </div>\r\n            {page === 1 && (\r\n              <>\r\n                <InputBox\r\n                  ref={emailRef}\r\n                  label=\"이메일 주소*\"\r\n                  type=\"text\"\r\n                  placeholder=\"이메일 주소를 입력해주세요.\"\r\n                  value={email}\r\n                  onChange={onEmailChangeHandler}\r\n                  error={isEmailError}\r\n                  message={emailErrorMessage}\r\n                  onKeyDown={onEmailKeyDownHandler}\r\n                />\r\n                <InputBox\r\n                  ref={passwordRef}\r\n                  label=\"비밀번호*\"\r\n                  type={passwordType}\r\n                  placeholder=\"비밀번호를 입력해주세요.\"\r\n                  value={password}\r\n                  onChange={onPasswordChangeHandler}\r\n                  error={isPasswordError}\r\n                  message={passwordErrorMessage}\r\n                  icon={passwordButtonIcon}\r\n                  onButtonClick={onPasswordButtonClickHandler}\r\n                  onKeyDown={onPasswordKeyDownHandler}\r\n                />\r\n                <InputBox\r\n                  ref={passwordCheckRef}\r\n                  label=\"비밀번호 확인*\"\r\n                  type={passwordCheckType}\r\n                  placeholder=\"비밀번호를 다시 입력해주세요.\"\r\n                  value={passwordCheck}\r\n                  onChange={onPasswordCheckChangeHandler}\r\n                  error={isPasswordCheckError}\r\n                  message={passwordCheckErrorMessage}\r\n                  icon={passwordCheckButtonIcon}\r\n                  onButtonClick={onPasswordCheckButtonClickHandler}\r\n                  onKeyDown={onPasswordCheckKeyDownHandler}\r\n                />\r\n              </>\r\n            )}\r\n            {page === 2 && (\r\n              <>\r\n                <InputBox\r\n                  ref={nicknameRef}\r\n                  label=\"닉네임*\"\r\n                  type=\"text\"\r\n                  placeholder=\"닉네임을 입력해주세요.\"\r\n                  value={nickname}\r\n                  onChange={onNicknameChangeHandler}\r\n                  error={isNicknameError}\r\n                  message={nicknameErrorMessage}\r\n                  onKeyDown={onNicknameKeyDownHandler}\r\n                />\r\n                <InputBox\r\n                  ref={telNumberRef}\r\n                  label=\"핸드폰 번호*\"\r\n                  type=\"text\"\r\n                  placeholder=\"핸드폰 번호를 입력해주세요.\"\r\n                  value={telNumber}\r\n                  onChange={onTelNumberChangeHandler}\r\n                  error={isTelNumberError}\r\n                  message={telNumberErrorMessage}\r\n                  onKeyDown={onTelNumberKeyDownHandler}\r\n                />\r\n                <InputBox\r\n                  ref={addressRef}\r\n                  label=\"주소*\"\r\n                  type=\"text\"\r\n                  placeholder=\"우편번호 찾기\"\r\n                  value={address}\r\n                  onChange={onAddressChangeHandler}\r\n                  error={isAddressError}\r\n                  message={addressErrorMessage}\r\n                  icon=\"expand-right-light-icon\"\r\n                  onButtonClick={onAddressButtonClickHandler}\r\n                  onKeyDown={onAddressKeyDownHandler}\r\n                />\r\n                <InputBox\r\n                  ref={addressDetailRef}\r\n                  label=\"상세 주소\"\r\n                  type=\"text\"\r\n                  placeholder=\"상세 주소를 입력해주세요.\"\r\n                  value={addressDetail}\r\n                  onChange={onAddressDetailChangeHandler}\r\n                  error={false}\r\n                  onKeyDown={onAddressDetailKeyDownHandler}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"auth-card-bottom\">\r\n            {page === 1 && (\r\n              <div\r\n                className=\"black-large-full-button\"\r\n                onClick={onNextButtonClickHandler}\r\n              >\r\n                {\"다음 단계\"}\r\n              </div>\r\n            )}\r\n            {page === 2 && (\r\n              <>\r\n                <div className=\"auth-consent-box\">\r\n                  <div\r\n                    className=\"auth-check-box\"\r\n                    onClick={onAgreedPersonalClickHandler}\r\n                  >\r\n                    <div\r\n                      className={`icon ${\r\n                        agreedPersonal\r\n                          ? \"check-round-fill-icon\"\r\n                          : \"check-ring-light-icon\"\r\n                      }`}\r\n                    ></div>\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      isAgreedPersonalError\r\n                        ? \"auth-consent-title-error\"\r\n                        : \"auth-consent-title\"\r\n                    }\r\n                  >\r\n                    {\"개인정보동의\"}\r\n                  </div>\r\n                  <div className=\"auth-consent-link\">{\"더보기 >\"}</div>\r\n                </div>\r\n                <div\r\n                  className=\"black-large-full-button\"\r\n                  onClick={onSignUpButtonClickHandler}\r\n                >\r\n                  {\"회원가입\"}\r\n                </div>\r\n              </>\r\n            )}\r\n            <div className=\"auth-description-box\">\r\n              <div className=\"auth-description\">\r\n                {\"이미 계정이 있으신가요? \"}\r\n                <span\r\n                  className=\"auth-description-link\"\r\n                  onClick={onSignInLinkClickHandler}\r\n                >\r\n                  {\"로그인\"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // render : 인증화면 컴포넌트 렌더링 //\r\n  return (\r\n    <div id=\"auth-wrapper\">\r\n      <div className=\"auth-container\">\r\n        <div className=\"auth-jumbotron-box\">\r\n          <div className=\"auth-jumbotron-contents\">\r\n            <div className=\"auth-logo-icon\"></div>\r\n            <div className=\"auth-jumbotron-text-box\">\r\n              <div className=\"auth-jumbotron-text\">{\"운동 커뮤니티\"}</div>\r\n              <div className=\"auth-jumbotron-text\">{\"Play Fit\"}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {view === \"sign-in\" && <SignInCard />}\r\n        {view === \"sign-up\" && <SignUpCard />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}