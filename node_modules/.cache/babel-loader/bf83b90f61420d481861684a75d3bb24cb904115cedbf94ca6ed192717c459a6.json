{"ast":null,"code":"var _jsxFileName = \"C:\\\\Springboot-React-ts\\\\board-front\\\\src\\\\views\\\\Search\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport { useParams } from \"react-router-dom\";\nimport { latestBoardListMock } from \"mocks\";\nimport BoardItem from \"components/BoardItem\";\n\n// component: 검색 화면 컴포넌트 //\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n  // state: searchWord path variable 상태 //\n  const {\n    searchWord\n  } = useParams();\n\n  // state: 검색 게시물 개수 상태 //\n  const [count, setCount] = useState(2);\n  // state: 검색 게시물 리스트 상태 (임시) //\n  const [searchBoardList, setSearchBoardList] = useState([]);\n  // state: 관련 검색어 리스트 상태 //\n  const [relationList, setRelationList] = useState([]);\n\n  // effect: 첫 마운트 시 실행될 함수 //\n  useEffect(() => {\n    setSearchBoardList(latestBoardListMock);\n  }, []);\n\n  // render: 검색 화면 컴포넌트 렌더링 //\n  if (!searchWord) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"search-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-title-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"emphasis\",\n            children: searchWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), \"에 대한 검색결과 입니다.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-count\",\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-contents-box\",\n        children: [count === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-contents-nothing\",\n          children: \"검색 결과가 없습니다.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-contents\",\n          children: searchBoardList.map(boardListItem => /*#__PURE__*/_jsxDEV(BoardItem, {\n            boardListItem: boardListItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-relation-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-relation-card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-relation-card-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-relation-card-title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), relationList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-relation-card-contents-nothing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-relation-card-contents\",\n                children: relationList.map(word => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"word-badge\",\n                  onClick: () => onPopularWordClickHandler(word),\n                  children: word\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-pagination-box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"qBVMkmhWY7l2eMpXm/6EXXYya00=\", false, function () {\n  return [useParams];\n});\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useEffect","useState","useParams","latestBoardListMock","BoardItem","Fragment","_Fragment","jsxDEV","_jsxDEV","Search","_s","searchWord","count","setCount","searchBoardList","setSearchBoardList","relationList","setRelationList","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","boardListItem","length","word","onClick","onPopularWordClickHandler","_c","$RefreshReg$"],"sources":["C:/Springboot-React-ts/board-front/src/views/Search/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { BoardListItem } from \"types/interface\";\r\nimport { latestBoardListMock } from \"mocks\";\r\nimport BoardItem from \"components/BoardItem\";\r\n\r\n// component: 검색 화면 컴포넌트 //\r\nexport default function Search() {\r\n  // state: searchWord path variable 상태 //\r\n  const { searchWord } = useParams();\r\n\r\n  // state: 검색 게시물 개수 상태 //\r\n  const [count, setCount] = useState<number>(2);\r\n  // state: 검색 게시물 리스트 상태 (임시) //\r\n  const [searchBoardList, setSearchBoardList] = useState<BoardListItem[]>([]);\r\n  // state: 관련 검색어 리스트 상태 //\r\n  const [relationList, setRelationList] = useState<string[]>([]);\r\n\r\n  // effect: 첫 마운트 시 실행될 함수 //\r\n  useEffect(() => {\r\n    setSearchBoardList(latestBoardListMock);\r\n  }, []);\r\n\r\n  // render: 검색 화면 컴포넌트 렌더링 //\r\n  if (!searchWord) return <></>;\r\n  return (\r\n    <div id=\"search-wrapper\">\r\n      <div className=\"search-container\">\r\n        <div className=\"search-title-box\">\r\n          <div className=\"search-title\">\r\n            <span className=\"emphasis\">{searchWord}</span>\r\n            {\"에 대한 검색결과 입니다.\"}\r\n          </div>\r\n          <div className=\"search-count\">{count}</div>\r\n        </div>\r\n        <div className=\"search-contents-box\">\r\n          {count === 0 ? (\r\n            <div className=\"search-contents-nothing\">\r\n              {\"검색 결과가 없습니다.\"}\r\n            </div>\r\n          ) : (\r\n            <div className=\"search-contents\">\r\n              {searchBoardList.map((boardListItem) => (\r\n                <BoardItem boardListItem={boardListItem} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          <div className=\"search-relation-box\">\r\n            <div className=\"search-relation-card\">\r\n              <div className=\"search-relation-card-container\">\r\n                <div className=\"search-relation-card-title\"></div>\r\n                {relationList.length === 0 ? (\r\n                  <div className=\"search-relation-card-contents-nothing\"></div>\r\n                ) : (\r\n                  <div className=\"search-relation-card-contents\">\r\n                    {relationList.map((word) => (\r\n                      <div\r\n                        className=\"word-badge\"\r\n                        onClick={() => onPopularWordClickHandler(word)}\r\n                      >\r\n                        {word}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"search-pagination-box\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}