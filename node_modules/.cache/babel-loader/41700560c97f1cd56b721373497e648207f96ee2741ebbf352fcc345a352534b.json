{"ast":null,"code":"var _jsxFileName = \"C:\\\\Springboot-React-ts\\\\board-front\\\\src\\\\views\\\\User\\\\index.tsx\",\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./style.css\";\nimport defaultProfileImage from \"assets/image/default-profile-image.png\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { latestBoardListMock } from \"mocks\";\nimport BoardItem from \"components/BoardItem\";\nimport { BOARD_PATH, BOARD_WRITE_PATH, MAIN_PATH, USER_PATH } from \"constant\";\nimport { useLoginUserStore } from \"stores\";\nimport { fileUploadRequest, getUserRequest, patchNicknameRequest, patchProfileImageRequest } from \"apis\";\nimport { useCookies } from \"react-cookie\";\n\n// component: 유저 화면 컴포넌트 //\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function User() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  // state: userEmail path vaariable 상태 //\n  const {\n    userEmail\n  } = useParams();\n  // state: 로그인 유저 상태 //\n  const {\n    loginUser\n  } = useLoginUserStore();\n  // state: cookie 상태 //\n  const [cookies, setCookie] = useCookies();\n  // state: 마이페이지 여부 상태 //\n  const [isMyPage, setMyPage] = useState(false);\n\n  // function: 네비게이트 함수 //\n  const navigate = useNavigate();\n\n  // component: 유저 화면 상단 컴포넌트 //\n  const UserTop = () => {\n    _s();\n    // state: 이미지 파일 인풋 참조 상태 //\n    const imageInputRef = useRef(null);\n    // state: 닉네임 변경 여부 상태 //\n    const [isNicknameChange, setNicknameChange] = useState(false);\n    // state: 닉네임 상태 //\n    const [nickname, setNickname] = useState(\"\");\n    // state: 변경 닉네임 상태, 초기값을 닉네임으로 설정 //\n    const [changeNickname, setChangeNickname] = useState(\"\");\n    // state: 프로필 이미지 상태 //\n    const [profileImage, setProfileImage] = useState(null);\n\n    // function: get user response 처리 함수 //\n    const getUserResponse = responseBody => {\n      if (!responseBody) return;\n      const {\n        code\n      } = responseBody;\n      if (code === \"NU\") alert(\"존재하지 않는 유저입니다.\");\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\n      if (code !== \"SU\") {\n        navigate(MAIN_PATH());\n        return;\n      }\n      const {\n        email,\n        nickname,\n        profileImage\n      } = responseBody;\n      setNickname(nickname);\n      setProfileImage(profileImage);\n      const isMyPage = email === (loginUser === null || loginUser === void 0 ? void 0 : loginUser.email);\n      setMyPage(isMyPage);\n    };\n\n    // function: file upload response 처리 함수 //\n    const fileUploadResponse = profileImage => {\n      if (!profileImage) return;\n      if (!cookies.accessToken) return;\n      const requestBody = {\n        profileImage\n      };\n      patchProfileImageRequest(requestBody, cookies.accessToken).then(patchProfileImageResponse);\n    };\n\n    // function: patch profile image response 처리 함수 //\n    const patchProfileImageResponse = responseBody => {\n      if (!responseBody) return;\n      const {\n        code\n      } = responseBody;\n      if (code === \"AF\") alert(\"인증에 실패했습니다.\");\n      if (code === \"NU\") alert(\"존재하지 않는 유저입니다.\");\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\n      if (code !== \"SU\") return;\n      if (!userEmail) return;\n      getUserRequest(userEmail).then(getUserResponse);\n    };\n\n    // function: patch nickname response 처리 함수 //\n    const patchNicknameResponse = responseBody => {\n      if (!responseBody) return;\n      const {\n        code\n      } = responseBody;\n      if (code === \"VF\") alert(\"닉네임은 필수입니다.\");\n      if (code === \"AF\") alert(\"인증에 실패했습니다.\");\n      if (code === \"DN\") alert(\"중복되는 닉네임입니다.\");\n      if (code === \"NP\") alert(\"권한이 없습니다.\");\n      if (code === \"NU\") alert(\"존재하지 않는 유저입니다.\");\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\n      if (code !== \"SU\") return;\n      if (!userEmail) return;\n      getUserRequest(userEmail).then(getUserResponse);\n    };\n    // event handler:프로필 박스 클릭 이벤트 처리 //\n    const onProfileBoxClickHandler = () => {\n      if (!isMyPage) return;\n      if (!imageInputRef.current) return;\n      imageInputRef.current.click();\n    };\n    // event handler: 닉네임 수정 버튼 클릭 이벤트 처리 //\n    const onNicknameEditButtonClickHandler = () => {\n      if (isNicknameChange) {\n        // 변경된 닉네임을 현재 닉네임으로 설정\n        if (changeNickname.trim() === \"\") {\n          alert(\"닉네임은 필수입니다.\"); // 닉네임이 비어있을 경우 경고\n          return;\n        }\n        setNickname(changeNickname);\n        setNicknameChange(!isNicknameChange); // 닉네임 변경 모드 토글\n        return;\n      }\n      if (!cookies.accessToken) return;\n\n      // 닉네임이 비어있지 않은 경우에만 요청\n      if (changeNickname.trim() === \"\") {\n        alert(\"닉네임은 필수입니다.\");\n        return;\n      }\n      const requestBody = {\n        nickname: changeNickname\n      };\n      patchNicknameRequest(requestBody, cookies.accessToken).then(patchNicknameResponse);\n    };\n\n    // event handler:프로필 이미지 변경 이벤트 처리 //\n    const onProfileImageChangeHandler = event => {\n      if (!event.target.files || !event.target.files.length) return;\n      const file = event.target.files[0];\n      const data = new FormData();\n      data.append(\"file\", file);\n      fileUploadRequest(data).then(fileUploadResponse);\n    };\n    // event handler: 닉네임 변경 이벤트 처리 //\n    const onNicknameChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setChangeNickname(value); // 사용자 입력에 따라 상태 업데이트\n    };\n\n    // Effect: email path variable 변경 시 실행 할 함수 //\n    useEffect(() => {\n      if (!userEmail) return;\n      getUserRequest(userEmail).then(getUserResponse);\n    }, [userEmail]);\n\n    // render: 유저 화면 상단 컴포넌트 렌더링 //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"user-top-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-top-container\",\n        children: [isMyPage ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-top-my-profile-image-box\",\n          onClick: onProfileBoxClickHandler,\n          children: [profileImage !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-top-profile-image\",\n            style: {\n              backgroundImage: `url(${profileImage})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-top-my-profile-image-nothing-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"icon-box-large\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"icon image-box-white-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: imageInputRef,\n            type: \"file\",\n            accept: \"image/*\",\n            style: {\n              display: \"none\"\n            },\n            onChange: onProfileImageChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-top-profile-image-box\",\n          style: {\n            backgroundImage: `url(${profileImage ? profileImage : defaultProfileImage})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-top-info-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-top-info-nickname-box\",\n            children: isMyPage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [isNicknameChange ? /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"user-top-info-nickname-input\",\n                type: \"text\",\n                size: changeNickname.length + 2,\n                value: changeNickname,\n                onChange: onNicknameChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-top-info-nickname\",\n                children: nickname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"icon-button\",\n                onClick: onNicknameEditButtonClickHandler,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"icon edit-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-top-info-nickname\",\n              children: nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-top-info-email\",\n            children: \"email3@email3.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  };\n\n  // component: 유저 화면 하단 컴포넌트 //\n  _s(UserTop, \"FOFgBoHRbc+57CYu6sS5sTk7+P4=\");\n  const UserBottom = () => {\n    _s2();\n    // state: 게시물 개수 상태 //\n    const [count, setCount] = useState(2);\n    // state: 게시물 리스트 상태 임시 //\n    const [userBoardList, setUserBoardList] = useState([]);\n\n    // event handler: 사이드 카드 클릭 이벤트 처리 //\n    const onSideCardClickHandler = () => {\n      if (isMyPage) navigate(BOARD_PATH() + \"/\" + BOARD_WRITE_PATH());else if (loginUser) navigate(USER_PATH(loginUser.email));\n    };\n\n    // effect: userEmail path variable이 변경될 때마다 실행할 함수 //\n    useEffect(() => {\n      setUserBoardList(latestBoardListMock);\n    }, [userEmail]);\n\n    // render: 유저 화면 하단 컴포넌트 렌더링 //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"user-bottom-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-bottom-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-bottom-title\",\n          children: [isMyPage ? \"내 게시물 \" : \"게시물 \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"emphasis\",\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-bottom-contents-box\",\n          children: [count === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-bottom-contents-nothing\",\n            children: \"게시물이 없습니다.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-bottom-contents\",\n            children: userBoardList.map(boardListItem => /*#__PURE__*/_jsxDEV(BoardItem, {\n              boardListItem: boardListItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-bottom-side-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-bottom-side-card\",\n              onClick: onSideCardClickHandler,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-bottom-side-container\",\n                children: isMyPage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"icon-box\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"icon edit-icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"user-bottom-side-text\",\n                    children: \"글쓰기\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"user-bottom-side-text\",\n                    children: \"내 게시물로 가기\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"icon-box\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"icon arrow-right-icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-bottom-pagination-box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this);\n  };\n\n  // render: 유저 화면 컴포넌트 렌더링 //\n  _s2(UserBottom, \"8Sin8O/KpxDKiUSNgEauQjJniKQ=\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(UserTop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserBottom, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s3(User, \"uDjoLGUZg3lPSG961XzF/Zng2ao=\", false, function () {\n  return [useParams, useLoginUserStore, useCookies, useNavigate];\n});\n_c = User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useEffect","useRef","useState","defaultProfileImage","useNavigate","useParams","latestBoardListMock","BoardItem","BOARD_PATH","BOARD_WRITE_PATH","MAIN_PATH","USER_PATH","useLoginUserStore","fileUploadRequest","getUserRequest","patchNicknameRequest","patchProfileImageRequest","useCookies","jsxDEV","_jsxDEV","Fragment","_Fragment","User","_s3","_s","$RefreshSig$","_s2","userEmail","loginUser","cookies","setCookie","isMyPage","setMyPage","navigate","UserTop","imageInputRef","isNicknameChange","setNicknameChange","nickname","setNickname","changeNickname","setChangeNickname","profileImage","setProfileImage","getUserResponse","responseBody","code","alert","email","fileUploadResponse","accessToken","requestBody","then","patchProfileImageResponse","patchNicknameResponse","onProfileBoxClickHandler","current","click","onNicknameEditButtonClickHandler","trim","onProfileImageChangeHandler","event","target","files","length","file","data","FormData","append","onNicknameChangeHandler","value","id","children","className","onClick","style","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","accept","display","onChange","size","UserBottom","count","setCount","userBoardList","setUserBoardList","onSideCardClickHandler","map","boardListItem","_c","$RefreshReg$"],"sources":["C:/Springboot-React-ts/board-front/src/views/User/index.tsx"],"sourcesContent":["import React, { ChangeEvent, useEffect, useRef, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport defaultProfileImage from \"assets/image/default-profile-image.png\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { BoardListItem } from \"types/interface\";\r\nimport { latestBoardListMock } from \"mocks\";\r\nimport BoardItem from \"components/BoardItem\";\r\nimport { BOARD_PATH, BOARD_WRITE_PATH, MAIN_PATH, USER_PATH } from \"constant\";\r\nimport { useLoginUserStore } from \"stores\";\r\nimport {\r\n  fileUploadRequest,\r\n  getUserRequest,\r\n  patchNicknameRequest,\r\n  patchProfileImageRequest,\r\n} from \"apis\";\r\nimport {\r\n  GetUserResponseDto,\r\n  PatchNicknameResponseDto,\r\n  PatchProfileImageResponseDto,\r\n} from \"apis/response/user\";\r\nimport { ResponseDto } from \"apis/response\";\r\nimport {\r\n  PatchNicknameRequestDto,\r\n  PatchProfileImageRequestDto,\r\n} from \"apis/request/user\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\n// component: 유저 화면 컴포넌트 //\r\nexport default function User() {\r\n  // state: userEmail path vaariable 상태 //\r\n  const { userEmail } = useParams();\r\n  // state: 로그인 유저 상태 //\r\n  const { loginUser } = useLoginUserStore();\r\n  // state: cookie 상태 //\r\n  const [cookies, setCookie] = useCookies();\r\n  // state: 마이페이지 여부 상태 //\r\n  const [isMyPage, setMyPage] = useState<boolean>(false);\r\n\r\n  // function: 네비게이트 함수 //\r\n  const navigate = useNavigate();\r\n\r\n  // component: 유저 화면 상단 컴포넌트 //\r\n  const UserTop = () => {\r\n    // state: 이미지 파일 인풋 참조 상태 //\r\n    const imageInputRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 닉네임 변경 여부 상태 //\r\n    const [isNicknameChange, setNicknameChange] = useState<boolean>(false);\r\n    // state: 닉네임 상태 //\r\n    const [nickname, setNickname] = useState<string>(\"\");\r\n    // state: 변경 닉네임 상태, 초기값을 닉네임으로 설정 //\r\n    const [changeNickname, setChangeNickname] = useState<string>(\"\");\r\n    // state: 프로필 이미지 상태 //\r\n    const [profileImage, setProfileImage] = useState<string | null>(null);\r\n\r\n    // function: get user response 처리 함수 //\r\n    const getUserResponse = (\r\n      responseBody: GetUserResponseDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === \"NU\") alert(\"존재하지 않는 유저입니다.\");\r\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n      if (code !== \"SU\") {\r\n        navigate(MAIN_PATH());\r\n        return;\r\n      }\r\n\r\n      const { email, nickname, profileImage } =\r\n        responseBody as GetUserResponseDto;\r\n      setNickname(nickname);\r\n      setProfileImage(profileImage);\r\n      const isMyPage = email === loginUser?.email;\r\n      setMyPage(isMyPage);\r\n    };\r\n\r\n    // function: file upload response 처리 함수 //\r\n    const fileUploadResponse = (profileImage: string | null) => {\r\n      if (!profileImage) return;\r\n\r\n      if (!cookies.accessToken) return;\r\n      const requestBody: PatchProfileImageRequestDto = { profileImage };\r\n      patchProfileImageRequest(requestBody, cookies.accessToken).then(\r\n        patchProfileImageResponse\r\n      );\r\n    };\r\n\r\n    // function: patch profile image response 처리 함수 //\r\n    const patchProfileImageResponse = (\r\n      responseBody: PatchProfileImageResponseDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === \"AF\") alert(\"인증에 실패했습니다.\");\r\n      if (code === \"NU\") alert(\"존재하지 않는 유저입니다.\");\r\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n      if (code !== \"SU\") return;\r\n\r\n      if (!userEmail) return;\r\n      getUserRequest(userEmail).then(getUserResponse);\r\n    };\r\n\r\n    // function: patch nickname response 처리 함수 //\r\n    const patchNicknameResponse = (\r\n      responseBody: PatchNicknameResponseDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === \"VF\") alert(\"닉네임은 필수입니다.\");\r\n      if (code === \"AF\") alert(\"인증에 실패했습니다.\");\r\n      if (code === \"DN\") alert(\"중복되는 닉네임입니다.\");\r\n      if (code === \"NP\") alert(\"권한이 없습니다.\");\r\n      if (code === \"NU\") alert(\"존재하지 않는 유저입니다.\");\r\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n      if (code !== \"SU\") return;\r\n\r\n      if (!userEmail) return;\r\n      getUserRequest(userEmail).then(getUserResponse);\r\n    };\r\n    // event handler:프로필 박스 클릭 이벤트 처리 //\r\n    const onProfileBoxClickHandler = () => {\r\n      if (!isMyPage) return;\r\n      if (!imageInputRef.current) return;\r\n      imageInputRef.current.click();\r\n    };\r\n    // event handler: 닉네임 수정 버튼 클릭 이벤트 처리 //\r\n    const onNicknameEditButtonClickHandler = () => {\r\n      if (isNicknameChange) {\r\n        // 변경된 닉네임을 현재 닉네임으로 설정\r\n        if (changeNickname.trim() === \"\") {\r\n          alert(\"닉네임은 필수입니다.\"); // 닉네임이 비어있을 경우 경고\r\n          return;\r\n        }\r\n        setNickname(changeNickname);\r\n        setNicknameChange(!isNicknameChange); // 닉네임 변경 모드 토글\r\n        return;\r\n      }\r\n      if (!cookies.accessToken) return;\r\n\r\n      // 닉네임이 비어있지 않은 경우에만 요청\r\n      if (changeNickname.trim() === \"\") {\r\n        alert(\"닉네임은 필수입니다.\");\r\n        return;\r\n      }\r\n\r\n      const requestBody: PatchNicknameRequestDto = {\r\n        nickname: changeNickname,\r\n      };\r\n      patchNicknameRequest(requestBody, cookies.accessToken).then(\r\n        patchNicknameResponse\r\n      );\r\n    };\r\n\r\n    // event handler:프로필 이미지 변경 이벤트 처리 //\r\n    const onProfileImageChangeHandler = (\r\n      event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n      if (!event.target.files || !event.target.files.length) return;\r\n\r\n      const file = event.target.files[0];\r\n      const data = new FormData();\r\n      data.append(\"file\", file);\r\n\r\n      fileUploadRequest(data).then(fileUploadResponse);\r\n    };\r\n    // event handler: 닉네임 변경 이벤트 처리 //\r\n    const onNicknameChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setChangeNickname(value); // 사용자 입력에 따라 상태 업데이트\r\n    };\r\n\r\n    // Effect: email path variable 변경 시 실행 할 함수 //\r\n    useEffect(() => {\r\n      if (!userEmail) return;\r\n      getUserRequest(userEmail).then(getUserResponse);\r\n    }, [userEmail]);\r\n\r\n    // render: 유저 화면 상단 컴포넌트 렌더링 //\r\n    return (\r\n      <div id=\"user-top-wrapper\">\r\n        <div className=\"user-top-container\">\r\n          {isMyPage ? (\r\n            <div\r\n              className=\"user-top-my-profile-image-box\"\r\n              onClick={onProfileBoxClickHandler}\r\n            >\r\n              {profileImage !== null ? (\r\n                <div\r\n                  className=\"user-top-profile-image\"\r\n                  style={{\r\n                    backgroundImage: `url(${profileImage})`,\r\n                  }}\r\n                ></div>\r\n              ) : (\r\n                <div className=\"user-top-my-profile-image-nothing-box\">\r\n                  <div className=\"icon-box-large\">\r\n                    <div className=\"icon image-box-white-icon\"></div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <input\r\n                ref={imageInputRef}\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                style={{ display: \"none\" }}\r\n                onChange={onProfileImageChangeHandler}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div\r\n              className=\"user-top-profile-image-box\"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  profileImage ? profileImage : defaultProfileImage\r\n                })`,\r\n              }}\r\n            ></div>\r\n          )}\r\n          <div className=\"user-top-info-box\">\r\n            <div className=\"user-top-info-nickname-box\">\r\n              {isMyPage ? (\r\n                <>\r\n                  {isNicknameChange ? (\r\n                    <input\r\n                      className=\"user-top-info-nickname-input\"\r\n                      type=\"text\"\r\n                      size={changeNickname.length + 2}\r\n                      value={changeNickname}\r\n                      onChange={onNicknameChangeHandler}\r\n                    />\r\n                  ) : (\r\n                    <div className=\"user-top-info-nickname\">{nickname}</div>\r\n                  )}\r\n\r\n                  <div\r\n                    className=\"icon-button\"\r\n                    onClick={onNicknameEditButtonClickHandler}\r\n                  >\r\n                    <div className=\"icon edit-icon\"></div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"user-top-info-nickname\">{nickname}</div>\r\n              )}\r\n            </div>\r\n            <div className=\"user-top-info-email\">{\"email3@email3.com\"}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // component: 유저 화면 하단 컴포넌트 //\r\n\r\n  const UserBottom = () => {\r\n    // state: 게시물 개수 상태 //\r\n    const [count, setCount] = useState<number>(2);\r\n    // state: 게시물 리스트 상태 임시 //\r\n    const [userBoardList, setUserBoardList] = useState<BoardListItem[]>([]);\r\n\r\n    // event handler: 사이드 카드 클릭 이벤트 처리 //\r\n    const onSideCardClickHandler = () => {\r\n      if (isMyPage) navigate(BOARD_PATH() + \"/\" + BOARD_WRITE_PATH());\r\n      else if (loginUser) navigate(USER_PATH(loginUser.email));\r\n    };\r\n\r\n    // effect: userEmail path variable이 변경될 때마다 실행할 함수 //\r\n    useEffect(() => {\r\n      setUserBoardList(latestBoardListMock);\r\n    }, [userEmail]);\r\n\r\n    // render: 유저 화면 하단 컴포넌트 렌더링 //\r\n    return (\r\n      <div id=\"user-bottom-wrapper\">\r\n        <div className=\"user-bottom-container\">\r\n          <div className=\"user-bottom-title\">\r\n            {isMyPage ? \"내 게시물 \" : \"게시물 \"}\r\n            <span className=\"emphasis\">{count}</span>\r\n          </div>\r\n          <div className=\"user-bottom-contents-box\">\r\n            {count === 0 ? (\r\n              <div className=\"user-bottom-contents-nothing\">\r\n                {\"게시물이 없습니다.\"}\r\n              </div>\r\n            ) : (\r\n              <div className=\"user-bottom-contents\">\r\n                {userBoardList.map((boardListItem) => (\r\n                  <BoardItem boardListItem={boardListItem} />\r\n                ))}\r\n              </div>\r\n            )}\r\n            <div className=\"user-bottom-side-box\">\r\n              <div\r\n                className=\"user-bottom-side-card\"\r\n                onClick={onSideCardClickHandler}\r\n              >\r\n                <div className=\"user-bottom-side-container\">\r\n                  {isMyPage ? (\r\n                    <>\r\n                      <div className=\"icon-box\">\r\n                        <div className=\"icon edit-icon\"></div>\r\n                      </div>\r\n                      <div className=\"user-bottom-side-text\">{\"글쓰기\"}</div>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <div className=\"user-bottom-side-text\">\r\n                        {\"내 게시물로 가기\"}\r\n                      </div>\r\n                      <div className=\"icon-box\">\r\n                        <div className=\"icon arrow-right-icon\"></div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"user-bottom-pagination-box\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // render: 유저 화면 컴포넌트 렌더링 //\r\n  return (\r\n    <>\r\n      <UserTop />\r\n      <UserBottom />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}