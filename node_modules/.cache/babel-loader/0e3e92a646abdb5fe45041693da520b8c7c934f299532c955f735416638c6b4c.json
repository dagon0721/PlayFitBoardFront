{"ast":null,"code":"var _jsxFileName = \"C:\\\\Springboot-React-ts\\\\board-front\\\\src\\\\views\\\\Search\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport BoardItem from \"components/BoardItem\";\nimport { SEARCH_PATH } from \"constant\";\nimport { getSearchBoardListRequest } from \"apis\";\n\n// component: 검색 화면 컴포넌트 //\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n  // state: searchWord path variable 상태 //\n  const {\n    searchWord\n  } = useParams();\n  // state:이전 검색어 상태 //\n  const [preSearchWord, setPreSearchWord] = useState(null);\n  // state: 검색 게시물 개수 상태 //\n  const [count, setCount] = useState(0);\n\n  // state: 관련 검색어 리스트 상태 //\n  const [relationList, setRelationList] = useState([]);\n\n  // function: 네비게이트 함수 //\n  const navigate = useNavigate();\n\n  // event handler: 연관 검색어 클릭 이벤트 처리 //\n  const onRelationWordClickHandler = word => {\n    navigate(SEARCH_PATH(word));\n  };\n\n  // effect: 첫 마운트 시 실행될 함수 //\n  useEffect(() => {\n    if (!searchWord) return;\n    getSearchBoardListRequest(searchWord, preSearchWord).then;\n  }, [searchWord]);\n\n  // render: 검색 화면 컴포넌트 렌더링 //\n  if (!searchWord) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"search-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-title-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"search-title-emphasis\",\n            children: searchWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), \"에 대한 검색결과 입니다.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-count\",\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-contents-box\",\n        children: [count === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-contents-nothing\",\n          children: \"검색 결과가 없습니다.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-contents\",\n          children: searchBoardList.map(boardListItem => /*#__PURE__*/_jsxDEV(BoardItem, {\n            boardListItem: boardListItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-relation-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-relation-card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-relation-card-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-relation-card-title\",\n                children: \"관련검색어\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), relationList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-relation-card-contents-nothing\",\n                children: \"관련 검색어가 없습니다\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-relation-card-contents\",\n                children: relationList.map(word => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"word-badge\",\n                  onClick: () => onRelationWordClickHandler(word),\n                  children: word\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-pagination-box\",\n        children: count !== 0 && {\n          /* <Pagination /> */\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"ROSYShoSlHJXQ2saygOp8KW0g0M=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","BoardItem","SEARCH_PATH","getSearchBoardListRequest","Fragment","_Fragment","jsxDEV","_jsxDEV","Search","_s","searchWord","preSearchWord","setPreSearchWord","count","setCount","relationList","setRelationList","navigate","onRelationWordClickHandler","word","then","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","searchBoardList","map","boardListItem","length","onClick","_c","$RefreshReg$"],"sources":["C:/Springboot-React-ts/board-front/src/views/Search/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { BoardListItem } from \"types/interface\";\r\nimport { latestBoardListMock } from \"mocks\";\r\nimport BoardItem from \"components/BoardItem\";\r\nimport { SEARCH_PATH } from \"constant\";\r\nimport Pagination from \"components/Pagination\";\r\nimport { getSearchBoardListRequest } from \"apis\";\r\n\r\n// component: 검색 화면 컴포넌트 //\r\nexport default function Search() {\r\n  // state: searchWord path variable 상태 //\r\n  const { searchWord } = useParams();\r\n  // state:이전 검색어 상태 //\r\n  const [preSearchWord, setPreSearchWord] = useState<string | null>(null);\r\n  // state: 검색 게시물 개수 상태 //\r\n  const [count, setCount] = useState<number>(0);\r\n\r\n  // state: 관련 검색어 리스트 상태 //\r\n  const [relationList, setRelationList] = useState<string[]>([]);\r\n\r\n  // function: 네비게이트 함수 //\r\n  const navigate = useNavigate();\r\n\r\n  // event handler: 연관 검색어 클릭 이벤트 처리 //\r\n  const onRelationWordClickHandler = (word: string) => {\r\n    navigate(SEARCH_PATH(word));\r\n  };\r\n\r\n  // effect: 첫 마운트 시 실행될 함수 //\r\n  useEffect(() => {\r\n    if (!searchWord) return;\r\n    getSearchBoardListRequest(searchWord, preSearchWord).then;\r\n  }, [searchWord]);\r\n\r\n  // render: 검색 화면 컴포넌트 렌더링 //\r\n  if (!searchWord) return <></>;\r\n  return (\r\n    <div id=\"search-wrapper\">\r\n      <div className=\"search-container\">\r\n        <div className=\"search-title-box\">\r\n          <div className=\"search-title\">\r\n            <span className=\"search-title-emphasis\">{searchWord}</span>\r\n            {\"에 대한 검색결과 입니다.\"}\r\n          </div>\r\n          <div className=\"search-count\">{count}</div>\r\n        </div>\r\n        <div className=\"search-contents-box\">\r\n          {count === 0 ? (\r\n            <div className=\"search-contents-nothing\">\r\n              {\"검색 결과가 없습니다.\"}\r\n            </div>\r\n          ) : (\r\n            <div className=\"search-contents\">\r\n              {searchBoardList.map((boardListItem) => (\r\n                <BoardItem boardListItem={boardListItem} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          <div className=\"search-relation-box\">\r\n            <div className=\"search-relation-card\">\r\n              <div className=\"search-relation-card-container\">\r\n                <div className=\"search-relation-card-title\">{\"관련검색어\"}</div>\r\n                {relationList.length === 0 ? (\r\n                  <div className=\"search-relation-card-contents-nothing\">\r\n                    {\"관련 검색어가 없습니다\"}\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"search-relation-card-contents\">\r\n                    {relationList.map((word) => (\r\n                      <div\r\n                        className=\"word-badge\"\r\n                        onClick={() => onRelationWordClickHandler(word)}\r\n                      >\r\n                        {word}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"search-pagination-box\">\r\n          {count !== 0 &&\r\n            {\r\n              /* <Pagination /> */\r\n            }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}