{"ast":null,"code":"var _jsxFileName = \"C:\\\\Springboot-React-ts\\\\board-front\\\\src\\\\layouts\\\\Header\\\\index.tsx\",\n  _s4 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./style.css\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { AUTH_PATH, BOARD_DETAIL_PATH, BOARD_PATH, BOARD_UPDATE_PATH, BOARD_WRITE_PATH, MAIN_PATH, SEARCH_PATH, USER_PATH } from \"constant\";\nimport { useCookies } from \"react-cookie\";\nimport { useBoardStore, useLoginUserStore } from \"stores\";\nimport { fileUploadRequest, postBoardRequest } from \"apis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// component: Header 레이아웃 //\nexport default function Header() {\n  _s4();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  // state: 로그인 유저 상태 //\n  const {\n    loginUser,\n    setLoginUser,\n    resetLoginUser\n  } = useLoginUserStore();\n  // state: path 상태 //\n  const {\n    pathname\n  } = useLocation();\n  // state: cookie 상태 //\n  const [cookies, setCookie] = useCookies();\n  // state: 로그인 상태 //\n  const [isLogin, setLogin] = useState(false);\n  // state: 인증 페이지 상태 //\n  const [isAuthPage, setAuthPage] = useState(false);\n  // state: 메인 페이지 상태 //\n  const [isMainPage, setMainPage] = useState(false);\n  // state: 검색 페이지 상태 //\n  const [isSearchPage, setSearchPage] = useState(false);\n  // state: 게시물 상세 페이지 상태 //\n  const [isBoardDetailPage, setBoardDetailPage] = useState(false);\n  // state: 게시물 작성 페이지 상태 //\n  const [isBoardWritePage, setBoardWritePage] = useState(false);\n  // state: 게시물 수정 페이지 상태 //\n  const [isBoardUpdatePage, setBoardUpdatePage] = useState(false);\n  // state: 유저 페이지 상태 //\n  const [isUserPage, setUserPage] = useState(false);\n\n  // function: 네비게이트 함수 //\n  const navigate = useNavigate();\n\n  // event handler: 로고 클릭 이벤튼 처리 함수//\n  const onLogoClickHandler = () => {\n    navigate(MAIN_PATH());\n  };\n\n  // component: 검색 버튼 컴포넌트 //\n  const SearchButton = () => {\n    _s();\n    // state: 검색어 버튼 요소 참조 상태 //\n    const searchButtonRef = useRef(null);\n    // state: 검색 버튼 상태 //\n    const [status, setStatus] = useState(false);\n    // state: 검색어 상태 //\n    const [word, setWord] = useState(\"\");\n    // state: 검색어 path variable 상태 //\n    const {\n      searchWord\n    } = useParams();\n\n    // event handler: 검색어 변경 이벤트 처리 함수 //\n    const onSearchWordChangeHandler = event => {\n      const value = event.target.value;\n      setWord(value);\n    };\n    // event handler: 검색어 키 이벤트 처리 함수 //\n    const onSearchWordKeyDownHandler = event => {\n      if (event.key !== \"Enter\") return;\n      if (!searchButtonRef.current) return;\n      searchButtonRef.current.click();\n    };\n    // event handler: 검색 버튼 클릭 이벤트 처리 함수 //\n    const onSearchButtonClickHandler = () => {\n      if (!status) {\n        setStatus(!status);\n        return;\n      }\n      navigate(SEARCH_PATH(word));\n    };\n\n    // effect: 검색어 path variable 변경 될때 마다 실행될 함수 //\n    useEffect(() => {\n      if (searchWord) {\n        setWord(searchWord);\n        setStatus(true);\n      }\n    }, [searchWord]);\n    if (!status)\n      // render: 검색 버튼 컴포넌트 렌더링 (클릭 false 상태) //\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-button\",\n        onClick: onSearchButtonClickHandler,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon search-light-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this);\n    // render: 검색 버튼 컴포넌트 렌더링 (클릭 true 상태) //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-search-input-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"header-search-input\",\n        type: \"text\",\n        placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        value: word,\n        onChange: onSearchWordChangeHandler,\n        onKeyDown: onSearchWordKeyDownHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: searchButtonRef,\n        className: \"icon-button\",\n        onClick: onSearchButtonClickHandler,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon search-light-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  };\n\n  // component: 마이페이지 버튼 컴포넌트 //\n  _s(SearchButton, \"imuM2qopR/jDcqWTpYwqpdRqeeo=\", false, function () {\n    return [useParams];\n  });\n  const MyPageButton = () => {\n    _s2();\n    // state: userEmail path variable 상태 //\n    const {\n      userEmail\n    } = useParams();\n    // event handler: 마이페이지 버튼 클릭 이벤트 처리 함수 //\n    const onMyPageButtonClickHandler = () => {\n      if (!loginUser) return;\n      const {\n        email\n      } = loginUser;\n      navigate(USER_PATH(email));\n    };\n    // event handler: 로그아웃 버튼 클릭 이벤트 처리 함수 //\n    const onSignOutButtonClickHandler = () => {\n      resetLoginUser();\n      setCookie(\"accessToken\", \"\", {\n        path: MAIN_PATH(),\n        expires: new Date()\n      });\n      navigate(AUTH_PATH());\n    };\n    // event handler: 로그인 버튼 클릭 이벤트 처리 함수 //\n    const onSignInButtonClickHandler = () => {\n      navigate(AUTH_PATH());\n    };\n\n    // render: 로그아웃 버튼 컴포넌트 렌더링 //\n    if (isLogin && userEmail === (loginUser === null || loginUser === void 0 ? void 0 : loginUser.email)) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"white-button\",\n      onClick: onSignOutButtonClickHandler,\n      children: \"로그아웃\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this);\n    if (isLogin)\n      // render: 마이페이지 버튼 컴포넌트 렌더링 //\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"white-button\",\n        onClick: onMyPageButtonClickHandler,\n        children: \"마이페이지\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this);\n    // render: 로그인 버튼 컴포넌트 렌더링 //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-button\",\n      onClick: onSignInButtonClickHandler,\n      children: \"로그인\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  };\n\n  // component: 업로드 버튼 컴포넌트 //\n  _s2(MyPageButton, \"zjnfNpxfBaJFg90qi/wdBrCGSTw=\", false, function () {\n    return [useParams];\n  });\n  const UploadButton = () => {\n    _s3();\n    // state: 게시물 상태 //\n    const {\n      title,\n      content,\n      boardImageFileList,\n      resetBoard\n    } = useBoardStore();\n\n    // function: post board response 처리 함수 //\n    //\n    // event handler: 업로드 버튼 클릭 이벤트 처리 //\n    const onUploadButtonClickHandler = async () => {\n      const accessToken = cookies.accessToken;\n      if (!accessToken) return;\n      const boardImageList = [];\n      for (const file of boardImageFileList) {\n        const data = new FormData();\n        data.append(\"file\", file);\n        const url = await fileUploadRequest(data);\n        if (url) boardImageList.push(url);\n      }\n      const requestBody = {\n        title,\n        content,\n        boardImageList\n      };\n      postBoardRequest(requestBody, accessToken).then(postBoardResponse);\n    };\n\n    // render: 업로드 버튼 컴포넌트 렌더링 //\n    if (title && content) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-button\",\n      onClick: onUploadButtonClickHandler,\n      children: \"업로드\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this);\n    // render: 업로드 불가 버튼 컴포넌트 렌더링 //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"disable-button\",\n      children: \"업로드\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 12\n    }, this);\n  };\n\n  // effect: path가 변경될 때 마다 실행될 함수 //\n  _s3(UploadButton, \"MdcJ6jjqtJqdHcSz7jkd+0QrwbA=\", false, function () {\n    return [useBoardStore];\n  });\n  useEffect(() => {\n    const isAuthPage = pathname.startsWith(AUTH_PATH());\n    setAuthPage(isAuthPage);\n    const isMainPage = pathname === MAIN_PATH();\n    setMainPage(isMainPage);\n    const isSearchPage = pathname.startsWith(SEARCH_PATH(\"\"));\n    setSearchPage(isSearchPage);\n    const isBoardDetailPage = pathname.startsWith(BOARD_PATH() + \"/\" + BOARD_DETAIL_PATH(\"\"));\n    setBoardDetailPage(isBoardDetailPage);\n    const isBoardWritePage = pathname.startsWith(BOARD_PATH() + \"/\" + BOARD_WRITE_PATH());\n    setBoardWritePage(isBoardWritePage);\n    const isBoardUpdatePage = pathname.startsWith(BOARD_PATH() + \"/\" + BOARD_UPDATE_PATH(\"\"));\n    setBoardUpdatePage(isBoardUpdatePage);\n    const isUserPage = pathname.startsWith(USER_PATH(\"\"));\n    setUserPage(isUserPage);\n  }, [pathname]);\n  // effect: login User가 변경될 때 마다 실행될 함수 //\n  useEffect(() => {\n    setLogin(loginUser !== null);\n  }, [loginUser]);\n\n  // render: Header 레이아웃 렌더링 //\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left-box\",\n        onClick: onLogoClickHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon logo-dark-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-logo\",\n          children: \"PlayFit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right-box\",\n        children: [(isAuthPage || isMainPage || isSearchPage || isBoardDetailPage) && /*#__PURE__*/_jsxDEV(SearchButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), (isMainPage || isSearchPage || isBoardDetailPage || isUserPage) && /*#__PURE__*/_jsxDEV(MyPageButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), (isBoardWritePage || isBoardUpdatePage) && /*#__PURE__*/_jsxDEV(UploadButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n}\n_s4(Header, \"2IiJRYre8jDJ+kUH88HMBWpEmC0=\", false, function () {\n  return [useLoginUserStore, useLocation, useCookies, useNavigate];\n});\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLocation","useNavigate","useParams","AUTH_PATH","BOARD_DETAIL_PATH","BOARD_PATH","BOARD_UPDATE_PATH","BOARD_WRITE_PATH","MAIN_PATH","SEARCH_PATH","USER_PATH","useCookies","useBoardStore","useLoginUserStore","fileUploadRequest","postBoardRequest","jsxDEV","_jsxDEV","Header","_s4","_s","$RefreshSig$","_s2","_s3","loginUser","setLoginUser","resetLoginUser","pathname","cookies","setCookie","isLogin","setLogin","isAuthPage","setAuthPage","isMainPage","setMainPage","isSearchPage","setSearchPage","isBoardDetailPage","setBoardDetailPage","isBoardWritePage","setBoardWritePage","isBoardUpdatePage","setBoardUpdatePage","isUserPage","setUserPage","navigate","onLogoClickHandler","SearchButton","searchButtonRef","status","setStatus","word","setWord","searchWord","onSearchWordChangeHandler","event","value","target","onSearchWordKeyDownHandler","key","current","click","onSearchButtonClickHandler","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onKeyDown","ref","MyPageButton","userEmail","onMyPageButtonClickHandler","email","onSignOutButtonClickHandler","path","expires","Date","onSignInButtonClickHandler","UploadButton","title","content","boardImageFileList","resetBoard","onUploadButtonClickHandler","accessToken","boardImageList","file","data","FormData","append","url","push","requestBody","then","postBoardResponse","startsWith","id","_c","$RefreshReg$"],"sources":["C:/Springboot-React-ts/board-front/src/layouts/Header/index.tsx"],"sourcesContent":["import React, {\r\n  ChangeEvent,\r\n  KeyboardEvent,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport \"./style.css\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  AUTH_PATH,\r\n  BOARD_DETAIL_PATH,\r\n  BOARD_PATH,\r\n  BOARD_UPDATE_PATH,\r\n  BOARD_WRITE_PATH,\r\n  MAIN_PATH,\r\n  SEARCH_PATH,\r\n  USER_PATH,\r\n} from \"constant\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useBoardStore, useLoginUserStore } from \"stores\";\r\nimport BoardDetail from \"views/Board/Detail\";\r\nimport { fileUploadRequest, postBoardRequest } from \"apis\";\r\nimport { PostBoardRequestDto } from \"apis/request/board\";\r\n\r\n// component: Header 레이아웃 //\r\nexport default function Header() {\r\n  // state: 로그인 유저 상태 //\r\n  const { loginUser, setLoginUser, resetLoginUser } = useLoginUserStore();\r\n  // state: path 상태 //\r\n  const { pathname } = useLocation();\r\n  // state: cookie 상태 //\r\n  const [cookies, setCookie] = useCookies();\r\n  // state: 로그인 상태 //\r\n  const [isLogin, setLogin] = useState<boolean>(false);\r\n  // state: 인증 페이지 상태 //\r\n  const [isAuthPage, setAuthPage] = useState<boolean>(false);\r\n  // state: 메인 페이지 상태 //\r\n  const [isMainPage, setMainPage] = useState<boolean>(false);\r\n  // state: 검색 페이지 상태 //\r\n  const [isSearchPage, setSearchPage] = useState<boolean>(false);\r\n  // state: 게시물 상세 페이지 상태 //\r\n  const [isBoardDetailPage, setBoardDetailPage] = useState<boolean>(false);\r\n  // state: 게시물 작성 페이지 상태 //\r\n  const [isBoardWritePage, setBoardWritePage] = useState<boolean>(false);\r\n  // state: 게시물 수정 페이지 상태 //\r\n  const [isBoardUpdatePage, setBoardUpdatePage] = useState<boolean>(false);\r\n  // state: 유저 페이지 상태 //\r\n  const [isUserPage, setUserPage] = useState<boolean>(false);\r\n\r\n  // function: 네비게이트 함수 //\r\n  const navigate = useNavigate();\r\n\r\n  // event handler: 로고 클릭 이벤튼 처리 함수//\r\n  const onLogoClickHandler = () => {\r\n    navigate(MAIN_PATH());\r\n  };\r\n\r\n  // component: 검색 버튼 컴포넌트 //\r\n  const SearchButton = () => {\r\n    // state: 검색어 버튼 요소 참조 상태 //\r\n    const searchButtonRef = useRef<HTMLDivElement | null>(null);\r\n    // state: 검색 버튼 상태 //\r\n    const [status, setStatus] = useState<Boolean>(false);\r\n    // state: 검색어 상태 //\r\n    const [word, setWord] = useState<string>(\"\");\r\n    // state: 검색어 path variable 상태 //\r\n    const { searchWord } = useParams();\r\n\r\n    // event handler: 검색어 변경 이벤트 처리 함수 //\r\n    const onSearchWordChangeHandler = (\r\n      event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n      const value = event.target.value;\r\n      setWord(value);\r\n    };\r\n    // event handler: 검색어 키 이벤트 처리 함수 //\r\n    const onSearchWordKeyDownHandler = (\r\n      event: KeyboardEvent<HTMLInputElement>\r\n    ) => {\r\n      if (event.key !== \"Enter\") return;\r\n      if (!searchButtonRef.current) return;\r\n      searchButtonRef.current.click();\r\n    };\r\n    // event handler: 검색 버튼 클릭 이벤트 처리 함수 //\r\n    const onSearchButtonClickHandler = () => {\r\n      if (!status) {\r\n        setStatus(!status);\r\n        return;\r\n      }\r\n      navigate(SEARCH_PATH(word));\r\n    };\r\n\r\n    // effect: 검색어 path variable 변경 될때 마다 실행될 함수 //\r\n    useEffect(() => {\r\n      if (searchWord) {\r\n        setWord(searchWord);\r\n        setStatus(true);\r\n      }\r\n    }, [searchWord]);\r\n    if (!status)\r\n      // render: 검색 버튼 컴포넌트 렌더링 (클릭 false 상태) //\r\n      return (\r\n        <div className=\"icon-button\" onClick={onSearchButtonClickHandler}>\r\n          <div className=\"icon search-light-icon\"></div>\r\n        </div>\r\n      );\r\n    // render: 검색 버튼 컴포넌트 렌더링 (클릭 true 상태) //\r\n    return (\r\n      <div className=\"header-search-input-box\">\r\n        <input\r\n          className=\"header-search-input\"\r\n          type=\"text\"\r\n          placeholder=\"검색어를 입력해주세요.\"\r\n          value={word}\r\n          onChange={onSearchWordChangeHandler}\r\n          onKeyDown={onSearchWordKeyDownHandler}\r\n        />\r\n        <div\r\n          ref={searchButtonRef}\r\n          className=\"icon-button\"\r\n          onClick={onSearchButtonClickHandler}\r\n        >\r\n          <div className=\"icon search-light-icon\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // component: 마이페이지 버튼 컴포넌트 //\r\n  const MyPageButton = () => {\r\n    // state: userEmail path variable 상태 //\r\n    const { userEmail } = useParams();\r\n    // event handler: 마이페이지 버튼 클릭 이벤트 처리 함수 //\r\n    const onMyPageButtonClickHandler = () => {\r\n      if (!loginUser) return;\r\n      const { email } = loginUser;\r\n      navigate(USER_PATH(email));\r\n    };\r\n    // event handler: 로그아웃 버튼 클릭 이벤트 처리 함수 //\r\n    const onSignOutButtonClickHandler = () => {\r\n      resetLoginUser();\r\n      setCookie(\"accessToken\", \"\", { path: MAIN_PATH(), expires: new Date() });\r\n      navigate(AUTH_PATH());\r\n    };\r\n    // event handler: 로그인 버튼 클릭 이벤트 처리 함수 //\r\n    const onSignInButtonClickHandler = () => {\r\n      navigate(AUTH_PATH());\r\n    };\r\n\r\n    // render: 로그아웃 버튼 컴포넌트 렌더링 //\r\n    if (isLogin && userEmail === loginUser?.email)\r\n      return (\r\n        <div className=\"white-button\" onClick={onSignOutButtonClickHandler}>\r\n          {\"로그아웃\"}\r\n        </div>\r\n      );\r\n    if (isLogin)\r\n      // render: 마이페이지 버튼 컴포넌트 렌더링 //\r\n      return (\r\n        <div className=\"white-button\" onClick={onMyPageButtonClickHandler}>\r\n          {\"마이페이지\"}\r\n        </div>\r\n      );\r\n    // render: 로그인 버튼 컴포넌트 렌더링 //\r\n    return (\r\n      <div className=\"black-button\" onClick={onSignInButtonClickHandler}>\r\n        {\"로그인\"}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // component: 업로드 버튼 컴포넌트 //\r\n  const UploadButton = () => {\r\n    // state: 게시물 상태 //\r\n    const { title, content, boardImageFileList, resetBoard } = useBoardStore();\r\n\r\n    // function: post board response 처리 함수 //\r\n    //\r\n    // event handler: 업로드 버튼 클릭 이벤트 처리 //\r\n    const onUploadButtonClickHandler = async () => {\r\n      const accessToken = cookies.accessToken;\r\n      if (!accessToken) return;\r\n\r\n      const boardImageList: string[] = [];\r\n\r\n      for (const file of boardImageFileList) {\r\n        const data = new FormData();\r\n        data.append(\"file\", file);\r\n\r\n        const url = await fileUploadRequest(data);\r\n        if (url) boardImageList.push(url);\r\n      }\r\n\r\n      const requestBody: PostBoardRequestDto = {\r\n        title,\r\n        content,\r\n        boardImageList,\r\n      };\r\n      postBoardRequest(requestBody, accessToken).then(postBoardResponse);\r\n    };\r\n\r\n    // render: 업로드 버튼 컴포넌트 렌더링 //\r\n    if (title && content)\r\n      return (\r\n        <div className=\"black-button\" onClick={onUploadButtonClickHandler}>\r\n          {\"업로드\"}\r\n        </div>\r\n      );\r\n    // render: 업로드 불가 버튼 컴포넌트 렌더링 //\r\n    return <div className=\"disable-button\">{\"업로드\"}</div>;\r\n  };\r\n\r\n  // effect: path가 변경될 때 마다 실행될 함수 //\r\n  useEffect(() => {\r\n    const isAuthPage = pathname.startsWith(AUTH_PATH());\r\n    setAuthPage(isAuthPage);\r\n    const isMainPage = pathname === MAIN_PATH();\r\n    setMainPage(isMainPage);\r\n    const isSearchPage = pathname.startsWith(SEARCH_PATH(\"\"));\r\n    setSearchPage(isSearchPage);\r\n    const isBoardDetailPage = pathname.startsWith(\r\n      BOARD_PATH() + \"/\" + BOARD_DETAIL_PATH(\"\")\r\n    );\r\n    setBoardDetailPage(isBoardDetailPage);\r\n    const isBoardWritePage = pathname.startsWith(\r\n      BOARD_PATH() + \"/\" + BOARD_WRITE_PATH()\r\n    );\r\n    setBoardWritePage(isBoardWritePage);\r\n    const isBoardUpdatePage = pathname.startsWith(\r\n      BOARD_PATH() + \"/\" + BOARD_UPDATE_PATH(\"\")\r\n    );\r\n    setBoardUpdatePage(isBoardUpdatePage);\r\n    const isUserPage = pathname.startsWith(USER_PATH(\"\"));\r\n    setUserPage(isUserPage);\r\n  }, [pathname]);\r\n  // effect: login User가 변경될 때 마다 실행될 함수 //\r\n  useEffect(() => {\r\n    setLogin(loginUser !== null);\r\n  }, [loginUser]);\r\n\r\n  // render: Header 레이아웃 렌더링 //\r\n  return (\r\n    <div id=\"header\">\r\n      <div className=\"header-container\">\r\n        <div className=\"header-left-box\" onClick={onLogoClickHandler}>\r\n          <div className=\"icon-box\">\r\n            <div className=\"icon logo-dark-icon\"></div>\r\n          </div>\r\n          <div className=\"header-logo\">{\"PlayFit\"}</div>\r\n        </div>\r\n        <div className=\"header-right-box\">\r\n          {(isAuthPage || isMainPage || isSearchPage || isBoardDetailPage) && (\r\n            <SearchButton />\r\n          )}\r\n          {(isMainPage || isSearchPage || isBoardDetailPage || isUserPage) && (\r\n            <MyPageButton />\r\n          )}\r\n          {(isBoardWritePage || isBoardUpdatePage) && <UploadButton />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}