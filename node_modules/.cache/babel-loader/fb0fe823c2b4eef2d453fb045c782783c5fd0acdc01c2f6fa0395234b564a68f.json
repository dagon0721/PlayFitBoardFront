{"ast":null,"code":"var _jsxFileName = \"C:\\\\Springboot-React-ts\\\\board-front\\\\src\\\\App.tsx\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Main from \"views/Main\";\nimport Authentication from \"views/Authentication\";\n\n// component: Application 컴포넌트 //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // render: Application 컴포넌트 렌더링 //\n  // description: 메인 화면 : '/' - Main //\n  // description: 로그인 + 회원가입 화면 : '/auth' -Authentication //\n  // description: 검색 화면 : '/search/:searchword' - Search //\n  // description: 유저 페이지 : '/user/:userEmail' - User //\n  // description: 게시물 상세보기 : '/board/detail/:boardNumber' - BoardDetail //\n  // description: 게시물 작성하기 : '/board/write' - BoardWrite //\n  // description: 게시물 수정하기 : '/board/update/:boardNumber' - BoardUpdate //\n\n  //로그인 화면 입력 usestate 같이 풀어야됨 주석\n  // const [value, setValue] = useState<string>(\"\");\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/auth\",\n      element: /*#__PURE__*/_jsxDEV(Authentication, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this)\n  //보드 리스트 아이템\n  // <>\n  //   {latestBoardListMock.map((boardListItem) => (\n  //     <BoardItem boardListItem={boardListItem} />\n  //   ))}\n  // </>\n\n  // Top3~6 게시물 리스트\n  // <>\n  //   <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"24px\" }}>\n  //     {top3BoardListMock.map((top3ListItem) => (\n  //       <Top3Item top3ListItem={top3ListItem} />\n  //     ))}\n  //   </div>\n  // </>\n\n  // 댓글 리스트\n  // <>\n  //   <div\n  //     style={{\n  //       padding: \"0 20px\",\n  //       display: \"flex\",\n  //       flexDirection: \"column\",\n  //       gap: \"30px\",\n  //     }}\n  //   >\n  //     {commentListMock.map((commentListItem) => (\n  //       <CommentItem commentListItem={commentListItem} />\n  //     ))}\n  //   </div>\n  // </>\n\n  // 좋아요 리스트\n  // <>\n  //   <div\n  //     style={{\n  //       display: \"flex\",\n  //       columnGap: \"30px\",\n  //       rowGap: \"20px\",\n  //     }}\n  //   >\n  //     {favoriteListMock.map((favoriteListItem) => (\n  //       <FavoriteItem favoriteListItem={favoriteListItem} />\n  //     ))}\n  //   </div>\n  // </>\n\n  //로그인 화면 입력 컴포넌트\n  // <>\n  //   <InputBox\n  //     label=\"이메일\"\n  //     type=\"text\"\n  //     placeholder=\"이메일 주소를 입력해주세요\"\n  //     value={value}\n  //     error={true}\n  //     setValue={setValue}\n  //     message=\"aaaa\"\n  //   />\n  // </>\n\n  //Footer\n  // <>\n  //   <Footer />\n  // </>\n  ;\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Route","Routes","Main","Authentication","jsxDEV","_jsxDEV","App","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Springboot-React-ts/board-front/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport BoardItem from \"components/BoardItem\";\nimport {\n  commentListMock,\n  favoriteListMock,\n  latestBoardListMock,\n  top3BoardListMock,\n} from \"mocks\";\nimport Top3Item from \"components/Top3Item\";\nimport CommentItem from \"components/CommentItem\";\nimport FavoriteItem from \"components/FavoriteItem\";\nimport InputBox from \"components/InputBox\";\nimport Footer from \"layouts/Footer\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Main from \"views/Main\";\nimport Authentication from \"views/Authentication\";\n\n// component: Application 컴포넌트 //\nfunction App() {\n  // render: Application 컴포넌트 렌더링 //\n  // description: 메인 화면 : '/' - Main //\n  // description: 로그인 + 회원가입 화면 : '/auth' -Authentication //\n  // description: 검색 화면 : '/search/:searchword' - Search //\n  // description: 유저 페이지 : '/user/:userEmail' - User //\n  // description: 게시물 상세보기 : '/board/detail/:boardNumber' - BoardDetail //\n  // description: 게시물 작성하기 : '/board/write' - BoardWrite //\n  // description: 게시물 수정하기 : '/board/update/:boardNumber' - BoardUpdate //\n\n  //로그인 화면 입력 usestate 같이 풀어야됨 주석\n  // const [value, setValue] = useState<string>(\"\");\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Main />} />\n      <Route path=\"/auth\" element={<Authentication />} />\n    </Routes>\n    //보드 리스트 아이템\n    // <>\n    //   {latestBoardListMock.map((boardListItem) => (\n    //     <BoardItem boardListItem={boardListItem} />\n    //   ))}\n    // </>\n\n    // Top3~6 게시물 리스트\n    // <>\n    //   <div style={{ display: \"flex\", justifyContent: \"center\", gap: \"24px\" }}>\n    //     {top3BoardListMock.map((top3ListItem) => (\n    //       <Top3Item top3ListItem={top3ListItem} />\n    //     ))}\n    //   </div>\n    // </>\n\n    // 댓글 리스트\n    // <>\n    //   <div\n    //     style={{\n    //       padding: \"0 20px\",\n    //       display: \"flex\",\n    //       flexDirection: \"column\",\n    //       gap: \"30px\",\n    //     }}\n    //   >\n    //     {commentListMock.map((commentListItem) => (\n    //       <CommentItem commentListItem={commentListItem} />\n    //     ))}\n    //   </div>\n    // </>\n\n    // 좋아요 리스트\n    // <>\n    //   <div\n    //     style={{\n    //       display: \"flex\",\n    //       columnGap: \"30px\",\n    //       rowGap: \"20px\",\n    //     }}\n    //   >\n    //     {favoriteListMock.map((favoriteListItem) => (\n    //       <FavoriteItem favoriteListItem={favoriteListItem} />\n    //     ))}\n    //   </div>\n    // </>\n\n    //로그인 화면 입력 컴포넌트\n    // <>\n    //   <InputBox\n    //     label=\"이메일\"\n    //     type=\"text\"\n    //     placeholder=\"이메일 주소를 입력해주세요\"\n    //     value={value}\n    //     error={true}\n    //     setValue={setValue}\n    //     message=\"aaaa\"\n    //   />\n    // </>\n\n    //Footer\n    // <>\n    //   <Footer />\n    // </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAoB,OAAO;AACvC,OAAO,WAAW;AAalB,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,sBAAsB;;AAEjD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA,oBACED,OAAA,CAACJ,MAAM;IAAAM,QAAA,gBACLF,OAAA,CAACL,KAAK;MAACQ,IAAI,EAAC,GAAG;MAACC,OAAO,eAAEJ,OAAA,CAACH,IAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrCR,OAAA,CAACL,KAAK;MAACQ,IAAI,EAAC,OAAO;MAACC,OAAO,eAAEJ,OAAA,CAACF,cAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C;EACR;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EAAA;AAEJ;AAACC,EAAA,GAlFQR,GAAG;AAoFZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}