{"ast":null,"code":"var _jsxFileName = \"C:\\\\Springboot-React-ts\\\\board-front\\\\src\\\\views\\\\Search\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { latestBoardListMock } from \"mocks\";\nimport BoardItem from \"components/BoardItem\";\nimport { SEARCH_PATH } from \"constant\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// component: 검색 화면 컴포넌트 //\nexport default function Search() {\n  _s();\n  // state: searchWord path variable 상태 //\n  const {\n    searchWord\n  } = useParams();\n\n  // state: 검색 게시물 개수 상태 //\n  const [count, setCount] = useState(0);\n  // state: 검색 게시물 리스트 상태 (임시) //\n  const [searchBoardList, setSearchBoardList] = useState([]);\n  // state: 관련 검색어 리스트 상태 //\n  const [relationList, setRelationList] = useState([]);\n\n  // function: 네비게이트 함수 //\n  const navigate = useNavigate();\n\n  // event handler: 연관 검색어 클릭 이벤트 처리 //\n  const onRelationWordClickHandler = word => {\n    navigate(SEARCH_PATH(word));\n  };\n\n  // effect: 첫 마운트 시 실행될 함수 //\n  useEffect(() => {\n    setSearchBoardList(latestBoardListMock);\n    setRelationList([\"안녕\", \"잘가\"]);\n  }, [searchWord]);\n\n  // render: 검색 화면 컴포넌트 렌더링 //\n  if (!searchWord) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"search-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-title-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"search-title-emphasis\",\n            children: searchWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), \"에 대한 검색결과 입니다.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-count\",\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-contents-box\",\n        children: [count === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-contents-nothing\",\n          children: \"검색 결과가 없습니다.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-contents\",\n          children: searchBoardList.map(boardListItem => /*#__PURE__*/_jsxDEV(BoardItem, {\n            boardListItem: boardListItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-relation-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-relation-card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-relation-card-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-relation-card-title\",\n                children: \"관련검색어\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), relationList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-relation-card-contents-nothing\",\n                children: \"관련 검색어가 없습니다\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-relation-card-contents\",\n                children: relationList.map(word => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"word-badge\",\n                  onClick: () => onRelationWordClickHandler(word),\n                  children: word\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-pagination-box\",\n        children: count !== 0 && {\n          /* <Pagination /> */\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"YvitVYA4xsxbhpLhfFNTBSbxVDs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","latestBoardListMock","BoardItem","SEARCH_PATH","Fragment","_Fragment","jsxDEV","_jsxDEV","Search","_s","searchWord","count","setCount","searchBoardList","setSearchBoardList","relationList","setRelationList","navigate","onRelationWordClickHandler","word","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","boardListItem","length","onClick","_c","$RefreshReg$"],"sources":["C:/Springboot-React-ts/board-front/src/views/Search/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { BoardListItem } from \"types/interface\";\r\nimport { latestBoardListMock } from \"mocks\";\r\nimport BoardItem from \"components/BoardItem\";\r\nimport { SEARCH_PATH } from \"constant\";\r\nimport Pagination from \"components/Pagination\";\r\n\r\n// component: 검색 화면 컴포넌트 //\r\nexport default function Search() {\r\n  // state: searchWord path variable 상태 //\r\n  const { searchWord } = useParams();\r\n\r\n  // state: 검색 게시물 개수 상태 //\r\n  const [count, setCount] = useState<number>(0);\r\n  // state: 검색 게시물 리스트 상태 (임시) //\r\n  const [searchBoardList, setSearchBoardList] = useState<BoardListItem[]>([]);\r\n  // state: 관련 검색어 리스트 상태 //\r\n  const [relationList, setRelationList] = useState<string[]>([]);\r\n\r\n  // function: 네비게이트 함수 //\r\n  const navigate = useNavigate();\r\n\r\n  // event handler: 연관 검색어 클릭 이벤트 처리 //\r\n  const onRelationWordClickHandler = (word: string) => {\r\n    navigate(SEARCH_PATH(word));\r\n  };\r\n\r\n  // effect: 첫 마운트 시 실행될 함수 //\r\n  useEffect(() => {\r\n    setSearchBoardList(latestBoardListMock);\r\n    setRelationList([\"안녕\", \"잘가\"]);\r\n  }, [searchWord]);\r\n\r\n  // render: 검색 화면 컴포넌트 렌더링 //\r\n  if (!searchWord) return <></>;\r\n  return (\r\n    <div id=\"search-wrapper\">\r\n      <div className=\"search-container\">\r\n        <div className=\"search-title-box\">\r\n          <div className=\"search-title\">\r\n            <span className=\"search-title-emphasis\">{searchWord}</span>\r\n            {\"에 대한 검색결과 입니다.\"}\r\n          </div>\r\n          <div className=\"search-count\">{count}</div>\r\n        </div>\r\n        <div className=\"search-contents-box\">\r\n          {count === 0 ? (\r\n            <div className=\"search-contents-nothing\">\r\n              {\"검색 결과가 없습니다.\"}\r\n            </div>\r\n          ) : (\r\n            <div className=\"search-contents\">\r\n              {searchBoardList.map((boardListItem) => (\r\n                <BoardItem boardListItem={boardListItem} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          <div className=\"search-relation-box\">\r\n            <div className=\"search-relation-card\">\r\n              <div className=\"search-relation-card-container\">\r\n                <div className=\"search-relation-card-title\">{\"관련검색어\"}</div>\r\n                {relationList.length === 0 ? (\r\n                  <div className=\"search-relation-card-contents-nothing\">\r\n                    {\"관련 검색어가 없습니다\"}\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"search-relation-card-contents\">\r\n                    {relationList.map((word) => (\r\n                      <div\r\n                        className=\"word-badge\"\r\n                        onClick={() => onRelationWordClickHandler(word)}\r\n                      >\r\n                        {word}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"search-pagination-box\">\r\n          {count !== 0 &&\r\n            {\r\n              /* <Pagination /> */\r\n            }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}