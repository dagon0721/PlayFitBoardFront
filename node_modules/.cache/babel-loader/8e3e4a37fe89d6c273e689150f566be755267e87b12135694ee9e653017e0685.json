{"ast":null,"code":"var _jsxFileName = \"C:\\\\Springboot-React-ts\\\\board-front\\\\src\\\\views\\\\User\\\\index.tsx\",\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./style.css\";\nimport defaultProfileImage from \"assets/image/default-profile-image.png\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport BoardItem from \"components/BoardItem\";\nimport { BOARD_PATH, BOARD_WRITE_PATH, MAIN_PATH, USER_PATH } from \"constant\";\nimport { useLoginUserStore } from \"stores\";\nimport { fileUploadRequest, getUserBoardListRequest, getUserRequest, patchNicknameRequest, patchProfileImageRequest } from \"apis\";\nimport { useCookies } from \"react-cookie\";\nimport { usePagination } from \"hooks\";\nimport Pagination from \"components/Pagination\";\n\n// component: 유저 화면 컴포넌트 //\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function User() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  // state: userEmail path variable 상태 //\n  const {\n    userEmail\n  } = useParams();\n  // state: 로그인 유저 상태 //\n  const {\n    loginUser\n  } = useLoginUserStore();\n  // state: cookie 상태 //\n  const [cookies, setCookie] = useCookies();\n  // state: 마이페이지 여부 상태 //\n  const [isMyPage, setMyPage] = useState(false);\n  // state: 좋아요 게시물 상태 //\n  const [likedBoards, setLikedBoards] = useState([]);\n  // state: 좋아요 게시물 표시 여부 상태 추가 //\n  const [showLikedBoards, setShowLikedBoards] = useState(false);\n\n  // function: 네비게이트 함수 //\n  const navigate = useNavigate();\n  // function: navigate를 이용해 상세 페이지로 이동\n  const onBoardItemClick = boardNumber => {\n    navigate(`/board/detail/${boardNumber}`);\n  };\n  // component: 유저 화면 상단 컴포넌트 //\n  const UserTop = () => {\n    _s();\n    // state: 이미지 파일 인풋 참조 상태 //\n    const imageInputRef = useRef(null);\n    // state: 닉네임 변경 여부 상태 //\n    const [isNicknameChange, setNicknameChange] = useState(false);\n    // state: 닉네임 상태 //\n    const [nickname, setNickname] = useState(\"\");\n    // state: 변경 닉네임 상태 //\n    const [changeNickname, setChangeNickname] = useState(\"\");\n    // state: 프로필 이미지 상태 //\n    const [profileImage, setProfileImage] = useState(null);\n\n    // function: get user response 처리 함수 //\n    const getUserResponse = responseBody => {\n      if (!responseBody) return;\n      const {\n        code\n      } = responseBody;\n      if (code === \"NU\") alert(\"존재하지 않는 유저입니다.\");\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\n      if (code !== \"SU\") {\n        navigate(MAIN_PATH());\n        return;\n      }\n      const {\n        email,\n        nickname,\n        profileImage\n      } = responseBody;\n      setNickname(nickname);\n      setProfileImage(profileImage);\n      const isMyPage = email === (loginUser === null || loginUser === void 0 ? void 0 : loginUser.email);\n      setMyPage(isMyPage);\n    };\n\n    // function: file upload response 처리 함수 //\n    const fileUploadResponse = profileImage => {\n      if (!profileImage) return;\n      if (!cookies.accessToken) return;\n      const requestBody = {\n        profileImage\n      };\n      patchProfileImageRequest(requestBody, cookies.accessToken).then(patchProfileImageResponse);\n    };\n\n    // function: patch profile image response 처리 함수 //\n    const patchProfileImageResponse = responseBody => {\n      if (!responseBody) return;\n      const {\n        code\n      } = responseBody;\n      if (code === \"AF\") alert(\"인증에 실패했습니다.\");\n      if (code === \"NU\") alert(\"존재하지 않는 유저입니다.\");\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\n      if (code !== \"SU\") return;\n      if (!userEmail) return;\n      getUserRequest(userEmail).then(getUserResponse);\n    };\n\n    // function: patch nickname response 처리 함수 //\n    const patchNicknameResponse = responseBody => {\n      if (!responseBody) return;\n      const {\n        code\n      } = responseBody;\n      if (code === \"VF\") alert(\"닉네임은 필수입니다.\");\n      if (code === \"AF\") alert(\"인증에 실패했습니다.\");\n      if (code === \"DN\") alert(\"중복되는 닉네임입니다.\");\n      if (code === \"NP\") alert(\"권한이 없습니다.\");\n      if (code === \"NU\") alert(\"존재하지 않는 유저입니다.\");\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\n      if (code !== \"SU\") return;\n      if (!userEmail) return;\n      getUserRequest(userEmail).then(getUserResponse);\n      setNicknameChange(false);\n    };\n    // event handler:프로필 박스 클릭 이벤트 처리 //\n    const onProfileBoxClickHandler = () => {\n      if (!isMyPage) return;\n      if (!imageInputRef.current) return;\n      imageInputRef.current.click();\n    };\n    // event handler: 닉네임 수정 버튼 클릭 이벤트 처리 //\n    const onNicknameEditButtonClickHandler = () => {\n      if (!isNicknameChange) {\n        setChangeNickname(nickname);\n        setNicknameChange(!isNicknameChange);\n        return;\n      }\n      if (!cookies.accessToken) return;\n      const requestBody = {\n        nickname: changeNickname\n      };\n      patchNicknameRequest(requestBody, cookies.accessToken).then(patchNicknameResponse);\n    };\n    // event handler:프로필 이미지 변경 이벤트 처리 //\n    const onProfileImageChangeHandler = event => {\n      if (!event.target.files || !event.target.files.length) return;\n      const file = event.target.files[0];\n      const data = new FormData();\n      data.append(\"file\", file);\n      fileUploadRequest(data).then(fileUploadResponse);\n    };\n    // event handler: 닉네임 변경 이벤트 처리 //\n    const onNicknameChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setChangeNickname(value);\n    };\n\n    // Effect: email path variable 변경 시 실행 할 함수 //\n    useEffect(() => {\n      if (!userEmail) return;\n      getUserRequest(userEmail).then(getUserResponse);\n    }, [userEmail]);\n\n    // render: 유저 화면 상단 컴포넌트 렌더링 //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"user-top-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-top-container\",\n        children: [isMyPage ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-top-my-profile-image-box\",\n          onClick: onProfileBoxClickHandler,\n          children: [profileImage !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-top-profile-image\",\n            style: {\n              backgroundImage: `url(${profileImage})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-top-my-profile-image-nothing-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"icon-box-large\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"icon image-box-white-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: imageInputRef,\n            type: \"file\",\n            accept: \"image/*\",\n            style: {\n              display: \"none\"\n            },\n            onChange: onProfileImageChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-top-profile-image-box\",\n          style: {\n            backgroundImage: `url(${profileImage ? profileImage : defaultProfileImage})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-top-info-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-top-info-nickname-box\",\n            children: isMyPage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [isNicknameChange ? /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"user-top-info-nickname-input\",\n                type: \"text\",\n                size: changeNickname.length + 2,\n                value: changeNickname,\n                onChange: onNicknameChangeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-top-info-nickname\",\n                children: nickname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"icon-button\",\n                onClick: onNicknameEditButtonClickHandler,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"icon edit-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-top-info-nickname\",\n              children: nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-top-info-email\",\n            children: userEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this);\n  };\n\n  // component: 유저 화면 하단 컴포넌트 //\n  _s(UserTop, \"FOFgBoHRbc+57CYu6sS5sTk7+P4=\");\n  const UserBottom = () => {\n    _s2();\n    // state: 페이지네이션 관련 상태 //\n    const {\n      currentPage,\n      currentSection,\n      viewList,\n      viewPageList,\n      totalSection,\n      setCurrentPage,\n      setCurrentSection,\n      setTotalList\n    } = usePagination(5);\n    // state: 게시물 개수 상태 //\n    const [count, setCount] = useState(0);\n\n    // function: get user board list response 처리 함수 //\n    const getUserBoardListResponse = responseBody => {\n      if (!responseBody) return;\n      const {\n        code\n      } = responseBody;\n      if (code === \"NU\") {\n        alert(\"존재하지 않는 유저입니다.\");\n        navigate(MAIN_PATH());\n        return;\n      }\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\n      if (code !== \"SU\") return;\n      const {\n        userBoardList\n      } = responseBody;\n      setTotalList(userBoardList);\n      setCount(userBoardList.length);\n    };\n\n    // event handler: 사이드 카드 클릭 이벤트 처리 //\n    const onSideCardClickHandler = () => {\n      if (isMyPage) navigate(BOARD_PATH() + \"/\" + BOARD_WRITE_PATH());else if (loginUser) navigate(USER_PATH(loginUser.email));\n    };\n\n    // effect: userEmail path variable이 변경될 때마다 실행할 함수 //\n    useEffect(() => {\n      if (!userEmail) return;\n      getUserBoardListRequest(userEmail).then(getUserBoardListResponse);\n    }, [userEmail]);\n\n    // render: 유저 화면 하단 컴포넌트 렌더링 //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"user-bottom-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-bottom-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-bottom-title\",\n          children: [isMyPage ? \"내 게시물 \" : \"게시물 \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"emphasis\",\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-bottom-contents-box\",\n          children: [count === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-bottom-contents-nothing\",\n            children: \"게시물이 없습니다.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-bottom-contents\",\n            children: viewList.map(boardListItem => /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => onBoardItemClick(boardListItem.boardNumber),\n              children: /*#__PURE__*/_jsxDEV(BoardItem, {\n                boardListItem: boardListItem\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 21\n              }, this)\n            }, boardListItem.boardNumber, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-bottom-side-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-bottom-side-card\",\n              onClick: onSideCardClickHandler,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-bottom-side-container\",\n                children: isMyPage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"icon-box\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"icon edit-icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 333,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"user-bottom-side-text\",\n                    children: \"글쓰기\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"user-bottom-side-text\",\n                    children: \"내 게시물로 가기\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"icon-box\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"icon arrow-right-icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-bottom-pagination-box\",\n          children: count !== 0 && /*#__PURE__*/_jsxDEV(Pagination, {\n            currentPage: currentPage,\n            setCurrentPage: setCurrentPage,\n            totalItems: count // 총 게시물 수\n            ,\n            itemsPerPage: 5 // 한 페이지당 게시물 수\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this);\n  };\n\n  // render: 유저 화면 컴포넌트 렌더링 //\n  _s2(UserBottom, \"SMTYWxDs7y03gMCsdnraIId/pbk=\", false, function () {\n    return [usePagination];\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(UserTop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserBottom, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s3(User, \"Ltfm7FkJgBhgLP+Dunop5wIiJ24=\", false, function () {\n  return [useParams, useLoginUserStore, useCookies, useNavigate];\n});\n_c = User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useEffect","useRef","useState","defaultProfileImage","useNavigate","useParams","BoardItem","BOARD_PATH","BOARD_WRITE_PATH","MAIN_PATH","USER_PATH","useLoginUserStore","fileUploadRequest","getUserBoardListRequest","getUserRequest","patchNicknameRequest","patchProfileImageRequest","useCookies","usePagination","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","User","_s3","_s","$RefreshSig$","_s2","userEmail","loginUser","cookies","setCookie","isMyPage","setMyPage","likedBoards","setLikedBoards","showLikedBoards","setShowLikedBoards","navigate","onBoardItemClick","boardNumber","UserTop","imageInputRef","isNicknameChange","setNicknameChange","nickname","setNickname","changeNickname","setChangeNickname","profileImage","setProfileImage","getUserResponse","responseBody","code","alert","email","fileUploadResponse","accessToken","requestBody","then","patchProfileImageResponse","patchNicknameResponse","onProfileBoxClickHandler","current","click","onNicknameEditButtonClickHandler","onProfileImageChangeHandler","event","target","files","length","file","data","FormData","append","onNicknameChangeHandler","value","id","children","className","onClick","style","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","accept","display","onChange","size","UserBottom","currentPage","currentSection","viewList","viewPageList","totalSection","setCurrentPage","setCurrentSection","setTotalList","count","setCount","getUserBoardListResponse","userBoardList","onSideCardClickHandler","map","boardListItem","totalItems","itemsPerPage","_c","$RefreshReg$"],"sources":["C:/Springboot-React-ts/board-front/src/views/User/index.tsx"],"sourcesContent":["import React, { ChangeEvent, useEffect, useRef, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport defaultProfileImage from \"assets/image/default-profile-image.png\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { BoardListItem } from \"types/interface\";\r\nimport { latestBoardListMock } from \"mocks\";\r\nimport BoardItem from \"components/BoardItem\";\r\nimport { BOARD_PATH, BOARD_WRITE_PATH, MAIN_PATH, USER_PATH } from \"constant\";\r\nimport { useLoginUserStore } from \"stores\";\r\nimport {\r\n  fileUploadRequest,\r\n  getUserBoardListRequest,\r\n  getUserRequest,\r\n  patchNicknameRequest,\r\n  patchProfileImageRequest,\r\n} from \"apis\";\r\nimport {\r\n  GetUserResponseDto,\r\n  PatchNicknameResponseDto,\r\n  PatchProfileImageResponseDto,\r\n} from \"apis/response/user\";\r\nimport { ResponseDto } from \"apis/response\";\r\nimport {\r\n  PatchNicknameRequestDto,\r\n  PatchProfileImageRequestDto,\r\n} from \"apis/request/user\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { usePagination } from \"hooks\";\r\nimport { GetUserBoardListResponseDto } from \"apis/response/board\";\r\nimport Pagination from \"components/Pagination\";\r\n\r\n// component: 유저 화면 컴포넌트 //\r\nexport default function User() {\r\n  // state: userEmail path variable 상태 //\r\n  const { userEmail } = useParams();\r\n  // state: 로그인 유저 상태 //\r\n  const { loginUser } = useLoginUserStore();\r\n  // state: cookie 상태 //\r\n  const [cookies, setCookie] = useCookies();\r\n  // state: 마이페이지 여부 상태 //\r\n  const [isMyPage, setMyPage] = useState<boolean>(false);\r\n  // state: 좋아요 게시물 상태 //\r\n  const [likedBoards, setLikedBoards] = useState<BoardListItem[]>([]);\r\n  // state: 좋아요 게시물 표시 여부 상태 추가 //\r\n  const [showLikedBoards, setShowLikedBoards] = useState<boolean>(false);\r\n\r\n  // function: 네비게이트 함수 //\r\n  const navigate = useNavigate();\r\n  // function: navigate를 이용해 상세 페이지로 이동\r\n  const onBoardItemClick = (boardNumber: number) => {\r\n    navigate(`/board/detail/${boardNumber}`);\r\n  };\r\n  // component: 유저 화면 상단 컴포넌트 //\r\n  const UserTop = () => {\r\n    // state: 이미지 파일 인풋 참조 상태 //\r\n    const imageInputRef = useRef<HTMLInputElement | null>(null);\r\n    // state: 닉네임 변경 여부 상태 //\r\n    const [isNicknameChange, setNicknameChange] = useState<boolean>(false);\r\n    // state: 닉네임 상태 //\r\n    const [nickname, setNickname] = useState<string>(\"\");\r\n    // state: 변경 닉네임 상태 //\r\n    const [changeNickname, setChangeNickname] = useState<string>(\"\");\r\n    // state: 프로필 이미지 상태 //\r\n    const [profileImage, setProfileImage] = useState<string | null>(null);\r\n\r\n    // function: get user response 처리 함수 //\r\n    const getUserResponse = (\r\n      responseBody: GetUserResponseDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === \"NU\") alert(\"존재하지 않는 유저입니다.\");\r\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n      if (code !== \"SU\") {\r\n        navigate(MAIN_PATH());\r\n        return;\r\n      }\r\n\r\n      const { email, nickname, profileImage } =\r\n        responseBody as GetUserResponseDto;\r\n      setNickname(nickname);\r\n      setProfileImage(profileImage);\r\n      const isMyPage = email === loginUser?.email;\r\n      setMyPage(isMyPage);\r\n    };\r\n\r\n    // function: file upload response 처리 함수 //\r\n    const fileUploadResponse = (profileImage: string | null) => {\r\n      if (!profileImage) return;\r\n\r\n      if (!cookies.accessToken) return;\r\n      const requestBody: PatchProfileImageRequestDto = { profileImage };\r\n      patchProfileImageRequest(requestBody, cookies.accessToken).then(\r\n        patchProfileImageResponse\r\n      );\r\n    };\r\n\r\n    // function: patch profile image response 처리 함수 //\r\n    const patchProfileImageResponse = (\r\n      responseBody: PatchProfileImageResponseDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === \"AF\") alert(\"인증에 실패했습니다.\");\r\n      if (code === \"NU\") alert(\"존재하지 않는 유저입니다.\");\r\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n      if (code !== \"SU\") return;\r\n\r\n      if (!userEmail) return;\r\n      getUserRequest(userEmail).then(getUserResponse);\r\n    };\r\n\r\n    // function: patch nickname response 처리 함수 //\r\n    const patchNicknameResponse = (\r\n      responseBody: PatchNicknameResponseDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === \"VF\") alert(\"닉네임은 필수입니다.\");\r\n      if (code === \"AF\") alert(\"인증에 실패했습니다.\");\r\n      if (code === \"DN\") alert(\"중복되는 닉네임입니다.\");\r\n      if (code === \"NP\") alert(\"권한이 없습니다.\");\r\n      if (code === \"NU\") alert(\"존재하지 않는 유저입니다.\");\r\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n      if (code !== \"SU\") return;\r\n\r\n      if (!userEmail) return;\r\n      getUserRequest(userEmail).then(getUserResponse);\r\n      setNicknameChange(false);\r\n    };\r\n    // event handler:프로필 박스 클릭 이벤트 처리 //\r\n    const onProfileBoxClickHandler = () => {\r\n      if (!isMyPage) return;\r\n      if (!imageInputRef.current) return;\r\n      imageInputRef.current.click();\r\n    };\r\n    // event handler: 닉네임 수정 버튼 클릭 이벤트 처리 //\r\n    const onNicknameEditButtonClickHandler = () => {\r\n      if (!isNicknameChange) {\r\n        setChangeNickname(nickname);\r\n        setNicknameChange(!isNicknameChange);\r\n        return;\r\n      }\r\n      if (!cookies.accessToken) return;\r\n      const requestBody: PatchNicknameRequestDto = {\r\n        nickname: changeNickname,\r\n      };\r\n      patchNicknameRequest(requestBody, cookies.accessToken).then(\r\n        patchNicknameResponse\r\n      );\r\n    };\r\n    // event handler:프로필 이미지 변경 이벤트 처리 //\r\n    const onProfileImageChangeHandler = (\r\n      event: ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n      if (!event.target.files || !event.target.files.length) return;\r\n\r\n      const file = event.target.files[0];\r\n      const data = new FormData();\r\n      data.append(\"file\", file);\r\n\r\n      fileUploadRequest(data).then(fileUploadResponse);\r\n    };\r\n    // event handler: 닉네임 변경 이벤트 처리 //\r\n    const onNicknameChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n      const { value } = event.target;\r\n      setChangeNickname(value);\r\n    };\r\n\r\n    // Effect: email path variable 변경 시 실행 할 함수 //\r\n    useEffect(() => {\r\n      if (!userEmail) return;\r\n      getUserRequest(userEmail).then(getUserResponse);\r\n    }, [userEmail]);\r\n\r\n    // render: 유저 화면 상단 컴포넌트 렌더링 //\r\n    return (\r\n      <div id=\"user-top-wrapper\">\r\n        <div className=\"user-top-container\">\r\n          {isMyPage ? (\r\n            <div\r\n              className=\"user-top-my-profile-image-box\"\r\n              onClick={onProfileBoxClickHandler}\r\n            >\r\n              {profileImage !== null ? (\r\n                <div\r\n                  className=\"user-top-profile-image\"\r\n                  style={{\r\n                    backgroundImage: `url(${profileImage})`,\r\n                  }}\r\n                ></div>\r\n              ) : (\r\n                <div className=\"user-top-my-profile-image-nothing-box\">\r\n                  <div className=\"icon-box-large\">\r\n                    <div className=\"icon image-box-white-icon\"></div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <input\r\n                ref={imageInputRef}\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                style={{ display: \"none\" }}\r\n                onChange={onProfileImageChangeHandler}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div\r\n              className=\"user-top-profile-image-box\"\r\n              style={{\r\n                backgroundImage: `url(${\r\n                  profileImage ? profileImage : defaultProfileImage\r\n                })`,\r\n              }}\r\n            ></div>\r\n          )}\r\n          <div className=\"user-top-info-box\">\r\n            <div className=\"user-top-info-nickname-box\">\r\n              {isMyPage ? (\r\n                <>\r\n                  {isNicknameChange ? (\r\n                    <input\r\n                      className=\"user-top-info-nickname-input\"\r\n                      type=\"text\"\r\n                      size={changeNickname.length + 2}\r\n                      value={changeNickname}\r\n                      onChange={onNicknameChangeHandler}\r\n                    />\r\n                  ) : (\r\n                    <div className=\"user-top-info-nickname\">{nickname}</div>\r\n                  )}\r\n\r\n                  <div\r\n                    className=\"icon-button\"\r\n                    onClick={onNicknameEditButtonClickHandler}\r\n                  >\r\n                    <div className=\"icon edit-icon\"></div>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"user-top-info-nickname\">{nickname}</div>\r\n              )}\r\n            </div>\r\n            <div className=\"user-top-info-email\">{userEmail}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // component: 유저 화면 하단 컴포넌트 //\r\n\r\n  const UserBottom = () => {\r\n    // state: 페이지네이션 관련 상태 //\r\n    const {\r\n      currentPage,\r\n      currentSection,\r\n      viewList,\r\n      viewPageList,\r\n      totalSection,\r\n      setCurrentPage,\r\n      setCurrentSection,\r\n      setTotalList,\r\n    } = usePagination<BoardListItem>(5);\r\n    // state: 게시물 개수 상태 //\r\n    const [count, setCount] = useState<number>(0);\r\n\r\n    // function: get user board list response 처리 함수 //\r\n    const getUserBoardListResponse = (\r\n      responseBody: GetUserBoardListResponseDto | ResponseDto | null\r\n    ) => {\r\n      if (!responseBody) return;\r\n      const { code } = responseBody;\r\n      if (code === \"NU\") {\r\n        alert(\"존재하지 않는 유저입니다.\");\r\n        navigate(MAIN_PATH());\r\n        return;\r\n      }\r\n      if (code === \"DBE\") alert(\"데이터베이스 오류입니다.\");\r\n      if (code !== \"SU\") return;\r\n\r\n      const { userBoardList } = responseBody as GetUserBoardListResponseDto;\r\n      setTotalList(userBoardList);\r\n      setCount(userBoardList.length);\r\n    };\r\n\r\n    // event handler: 사이드 카드 클릭 이벤트 처리 //\r\n    const onSideCardClickHandler = () => {\r\n      if (isMyPage) navigate(BOARD_PATH() + \"/\" + BOARD_WRITE_PATH());\r\n      else if (loginUser) navigate(USER_PATH(loginUser.email));\r\n    };\r\n\r\n    // effect: userEmail path variable이 변경될 때마다 실행할 함수 //\r\n    useEffect(() => {\r\n      if (!userEmail) return;\r\n      getUserBoardListRequest(userEmail).then(getUserBoardListResponse);\r\n    }, [userEmail]);\r\n\r\n    // render: 유저 화면 하단 컴포넌트 렌더링 //\r\n    return (\r\n      <div id=\"user-bottom-wrapper\">\r\n        <div className=\"user-bottom-container\">\r\n          <div className=\"user-bottom-title\">\r\n            {isMyPage ? \"내 게시물 \" : \"게시물 \"}\r\n            <span className=\"emphasis\">{count}</span>\r\n          </div>\r\n          <div className=\"user-bottom-contents-box\">\r\n            {count === 0 ? (\r\n              <div className=\"user-bottom-contents-nothing\">\r\n                {\"게시물이 없습니다.\"}\r\n              </div>\r\n            ) : (\r\n              <div className=\"user-bottom-contents\">\r\n                {viewList.map((boardListItem) => (\r\n                  <div\r\n                    key={boardListItem.boardNumber}\r\n                    onClick={() => onBoardItemClick(boardListItem.boardNumber)}\r\n                  >\r\n                    <BoardItem boardListItem={boardListItem} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n            <div className=\"user-bottom-side-box\">\r\n              <div\r\n                className=\"user-bottom-side-card\"\r\n                onClick={onSideCardClickHandler}\r\n              >\r\n                <div className=\"user-bottom-side-container\">\r\n                  {isMyPage ? (\r\n                    <>\r\n                      <div className=\"icon-box\">\r\n                        <div className=\"icon edit-icon\"></div>\r\n                      </div>\r\n                      <div className=\"user-bottom-side-text\">{\"글쓰기\"}</div>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <div className=\"user-bottom-side-text\">\r\n                        {\"내 게시물로 가기\"}\r\n                      </div>\r\n                      <div className=\"icon-box\">\r\n                        <div className=\"icon arrow-right-icon\"></div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"user-bottom-pagination-box\">\r\n            {count !== 0 && (\r\n              <Pagination\r\n                currentPage={currentPage}\r\n                setCurrentPage={setCurrentPage}\r\n                totalItems={count} // 총 게시물 수\r\n                itemsPerPage={5} // 한 페이지당 게시물 수\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // render: 유저 화면 컴포넌트 렌더링 //\r\n  return (\r\n    <>\r\n      <UserTop />\r\n      <UserBottom />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}